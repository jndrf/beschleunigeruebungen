(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    516570,       9919]
NotebookOptionsPosition[    511532,       9752]
NotebookOutlinePosition[    512034,       9772]
CellTagsIndexPosition[    511991,       9769]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Blatt 11, SS18 : Undulatorstrahlung ", "Title",
 CellChangeTimes->{{3.500809912759927*^9, 3.500809928621127*^9}, {
  3.5667141899537783`*^9, 3.566714195784396*^9}, {3.739501792451342*^9, 
  3.739501805550634*^9}},ExpressionUUID->"6495f354-0406-4378-b8c9-\
ed1ae2b8278c"],

Cell[CellGroupData[{

Cell["Aufgabenstellung : ", "Section",
 CellChangeTimes->{{3.566714502043079*^9, 
  3.566714504577779*^9}},ExpressionUUID->"9a58dede-40d9-4731-8fbd-\
ed1ebff916ff"],

Cell["\<\
Berechnung des abgestrahlten Spektrums einer Ladung, die sich auf einem Kreis \
mit Radius R bewegt. 
Die Strahlungsleistung pro Frequenz- und Raumwinkelintervall berechnet sich \
zu \
\>", "Text",
 CellChangeTimes->{{3.5667145095300703`*^9, 
  3.566714584127839*^9}},ExpressionUUID->"4d3d841f-3149-4e9f-9021-\
7b4241a0cba4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["d", "2"], "I"}], 
    RowBox[{"d\[CapitalOmega]", " ", "d\[Omega]"}]], "=", 
   RowBox[{"A", "|", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"n", "(", "t", ")"}], "\[Cross]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"n", "(", "t", ")"}], "-", 
             RowBox[{"\[Beta]", "(", "t", ")"}]}], ")"}], "\[Cross]", 
           RowBox[{"\[Beta]", "'"}]}], 
          RowBox[{"(", "t", ")"}]}], "}"}]}], 
       RowBox[{" ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"\[Beta]", "(", "t", ")"}], "\[CenterDot]", 
            RowBox[{"n", "(", "t", ")"}]}]}], ")"}], "2"], " "}]], 
      SuperscriptBox["e", 
       RowBox[{"i", " ", "\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"t", " ", "-", " ", 
          RowBox[{
           RowBox[{"n", "(", "t", ")"}], "\[CenterDot]", 
           RowBox[{
            RowBox[{"r", "(", "t", ")"}], "/", "c"}]}]}], ")"}]}]], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], 
    SuperscriptBox["|", "2"]}]}], TraditionalForm]], "Equation",
 CellChangeTimes->{{3.5008780479779654`*^9, 3.50087805693771*^9}, {
  3.5008781684149*^9, 3.500878181926071*^9}, {3.564996440226431*^9, 
  3.564996441586266*^9}, {3.739689447415037*^9, 3.7396894490948877`*^9}},
 TextAlignment->Center,
 ExpressionUUID -> "f8272a88-7430-4e86-99e9-b04f53726331"],

Cell["\<\
Nur der zweite Term (Phasenterm) unter dem Integral h\[ADoubleDot]ngt von der \
Frequenz \[Omega] ab. \
\>", "Text",
 CellChangeTimes->{{3.566714597880767*^9, 
  3.566714627430879*^9}},ExpressionUUID->"05cb89f8-87bc-4a29-910e-\
8d462fc24f77"],

Cell["\<\
Die folgenden Zeilen m\[UDoubleDot]ssen ge\[ADoubleDot]ndert werden da die \
Bahn im Undulator eine andere ist... \
\>", "Subsection",
 CellChangeTimes->{{3.739501876652318*^9, 
  3.7395018973240833`*^9}},ExpressionUUID->"89c80fc8-75c1-43fd-aa0d-\
82213489fed8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitionen: Ladung auf der .......", "Section",
 CellChangeTimes->{{3.566714237723242*^9, 3.566714269775587*^9}, {
  3.739501902892394*^9, 
  3.739501903779849*^9}},ExpressionUUID->"02c18e67-6d30-4e9e-a39e-\
97712d0d451b"],

Cell["\<\
Die Bahn liegt in der x-z Ebene, das ist der Ortsvektor als Funktion der \
Zeit.  \
\>", "Text",
 CellChangeTimes->{{3.405849242987756*^9, 3.405849255537683*^9}, {
  3.566714275882071*^9, 3.5667143024708652`*^9}, {3.739519569958104*^9, 
  3.7395195700389924`*^9}, {3.739689260088935*^9, 3.739689261312542*^9}},
 ExpressionUUID -> "09ffbf8a-b719-4287-94fe-ea92cdc0d9a4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"//.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", " ", 
       FractionBox[
        RowBox[{"e", " ", "B", " ", "\[Lambda]u"}], 
        RowBox[{"2", " ", "\[Pi]", " ", "m", " ", "c"}]]}], ",", 
      RowBox[{"\[Beta]b", "\[Rule]", " ", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            SuperscriptBox["k", "2"], "2"]}], ")"}]}]}]}], ",", 
      RowBox[{"ku", "\[Rule]", " ", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "\[Lambda]u"]}]}], "}"}]}], "//", 
   "FullSimplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7395205374831734`*^9, 3.739520538914343*^9}},
 ExpressionUUID -> "13955620-02ff-433a-a57f-b128106d8cd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rvecfull", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["k", 
       RowBox[{"\[Gamma]", " ", "ku"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"ku", " ", "\[Beta]b", " ", "c", " ", "t"}], "]"}]}], ",", "0",
      ",", 
     RowBox[{
      RowBox[{"\[Beta]b", " ", "c", " ", "t"}], "+", 
      RowBox[{
       FractionBox[
        SuperscriptBox["k", "2"], 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", "ku"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "ku", " ", "\[Beta]b", " ", "c", " ", "t"}], 
        "]"}]}]}]}], "}"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.405791676461082*^9, 3.4057917443184423`*^9}, {
   3.405791842663368*^9, 3.405791848926248*^9}, {3.7395195757671394`*^9, 
   3.7395195913202486`*^9}, {3.739519637591972*^9, 3.7395197256879725`*^9}, {
   3.7395197898174405`*^9, 3.739519827946483*^9}, {3.739519947911912*^9, 
   3.7395200551288757`*^9}, {3.7395201581552153`*^9, 
   3.7395201819924583`*^9}, {3.7395202604896374`*^9, 
   3.7395203374039717`*^9}, {3.7395205212274065`*^9, 
   3.7395205259301085`*^9}, {3.7395252119096675`*^9, 3.739525214544975*^9}, 
   3.739525388642232*^9, 3.73952549963583*^9, {3.7396892148822737`*^9, 
   3.739689220497651*^9}},
 ExpressionUUID -> "4846367e-f6c1-42e2-a06b-8c7c8ba58530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"k", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"c", " ", "ku", " ", "t", " ", "\[Beta]b"}], "]"}]}], 
    RowBox[{"ku", " ", "\[Gamma]"}]], ",", "0", ",", 
   RowBox[{
    RowBox[{"c", " ", "t", " ", "\[Beta]b"}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "c", " ", "ku", " ", "t", " ", "\[Beta]b"}], "]"}]}], 
     RowBox[{"8", " ", "ku", " ", 
      SuperscriptBox["\[Gamma]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6068815323307133`*^9, 3.606881877116384*^9, 3.606884307783864*^9, 
   3.608529005695821*^9, 3.638679305473798*^9, 3.732598554772459*^9, 
   3.733131158370431*^9, 3.7331315084893503`*^9, 3.733134711057173*^9, {
   3.7395197118501015`*^9, 3.73951972636627*^9}, 3.7395198296577344`*^9, 
   3.7395200562363853`*^9, 3.739520120668171*^9, {3.7395203230077715`*^9, 
   3.7395203385198455`*^9}, 3.7395204847811375`*^9, {3.739520523174432*^9, 
   3.739520544613035*^9}, {3.739520771000182*^9, 3.739520777161915*^9}, 
   3.739520903894533*^9, 3.739525057559379*^9, 3.7395251530028553`*^9, 
   3.739525220153257*^9, 3.73952539603368*^9, 3.7395255911563344`*^9, 
   3.739525713879998*^9, 3.739526133101144*^9, 3.7396898858851557`*^9, 
   3.739693032215199*^9, 3.739695128546686*^9, 3.739700230039*^9, 
   3.739704311493848*^9, 3.739704411239255*^9},
 ExpressionUUID -> "9013519c-e55d-4784-a44d-1c4c688b3ed2"]
}, Open  ]],

Cell["\<\
Das ist \[Beta] = v/c auf der Bahn... Geschwindigkeit durch \[Gamma] ausgedr\
\[UDoubleDot]ckt\
\>", "Text",
 CellChangeTimes->{{3.405848476474862*^9, 3.4058484765657787`*^9}, {
  3.566714318790442*^9, 3.566714331797428*^9}, {3.608527626196783*^9, 
  3.6085276376689568`*^9}, {3.7396892689771748`*^9, 3.7396892699125757`*^9}},
 ExpressionUUID -> "ef2ecde2-de8e-4db8-9d4e-7f019b230b95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]sync", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"rvecfull", "[", "t", "]"}], ",", "t"}], "]"}], "/", 
   "c"}]}]], "Input",
 CellChangeTimes->{{3.405791757479355*^9, 3.405791782935801*^9}, {
  3.40579189507202*^9, 3.405791919014468*^9}, {3.7395204348092847`*^9, 
  3.7395204514169583`*^9}},
 ExpressionUUID -> "2546851d-323e-4a53-a921-83339437b0f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"k", " ", "\[Beta]b", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"c", " ", "ku", " ", "t", " ", "\[Beta]b"}], "]"}]}], 
     "\[Gamma]"]}], ",", "0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"c", " ", "\[Beta]b"}], "+", 
     FractionBox[
      RowBox[{"c", " ", 
       SuperscriptBox["k", "2"], " ", "\[Beta]b", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "c", " ", "ku", " ", "t", " ", "\[Beta]b"}], 
        "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"]}]]}], "c"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.606881532447814*^9, 3.606881877235293*^9, 3.6068843078884897`*^9, 
   3.608529005820752*^9, 3.638679305554143*^9, 3.732598554839855*^9, 
   3.733131158927554*^9, 3.733131514813726*^9, 3.7331347116621733`*^9, {
   3.739520115803528*^9, 3.739520120761093*^9}, {3.739520443776864*^9, 
   3.739520452335351*^9}, 3.739520484882042*^9, 3.739520544625024*^9, {
   3.739520771014173*^9, 3.7395207771749*^9}, 3.739520903911517*^9, 
   3.739525057574362*^9, 3.7395251530168366`*^9, 3.739525220170227*^9, 
   3.7395253960516615`*^9, 3.7395255911693244`*^9, 3.739525713891986*^9, 
   3.7395261331151943`*^9, 3.739689885932864*^9, 3.739693032234919*^9, 
   3.7396951285693693`*^9, 3.73970023013795*^9, 3.7397043115810843`*^9, 
   3.739704411298341*^9},
 ExpressionUUID -> "0bef964c-b7a6-497d-9a00-706d2fde0a93"]
}, Open  ]],

Cell["und das \[Beta]\[CloseCurlyQuote]", "Text",
 CellChangeTimes->{{3.566714325941968*^9, 
  3.566714327696216*^9}},ExpressionUUID->"a4e667d1-8c3d-4d14-812a-\
8aacab5fd8b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]prime", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"\[Beta]sync", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.405792002365203*^9},
 ExpressionUUID -> "75945afb-b32e-4196-83dd-bd71cc96cda4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", "k", " ", "ku", " ", 
      SuperscriptBox["\[Beta]b", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"c", " ", "ku", " ", "t", " ", "\[Beta]b"}], "]"}]}], 
     "\[Gamma]"]}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", 
      SuperscriptBox["k", "2"], " ", "ku", " ", 
      SuperscriptBox["\[Beta]b", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "c", " ", "ku", " ", "t", " ", "\[Beta]b"}], "]"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Gamma]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6068815325243*^9, 3.606881877345174*^9, 3.60688430794311*^9, 
   3.608529005919238*^9, 3.638679305602047*^9, 3.732598554892771*^9, 
   3.7331311590024757`*^9, 3.7331315149741592`*^9, 3.73313471171382*^9, 
   3.7395201209379053`*^9, {3.7395204777418575`*^9, 3.7395204850218916`*^9}, 
   3.739520544679969*^9, {3.739520771077092*^9, 3.7395207772288322`*^9}, 
   3.739520903966459*^9, 3.73952505760532*^9, 3.7395251530508175`*^9, 
   3.7395252203220844`*^9, 3.7395253961195927`*^9, 3.739525591219268*^9, 
   3.7395257139229546`*^9, 3.739526133147108*^9, 3.73968988595954*^9, 
   3.73969303225856*^9, 3.7396951285958967`*^9, 3.7397002302569523`*^9, 
   3.73970431182633*^9, 3.739704411415942*^9},
 ExpressionUUID -> "1e692d6b-182c-4339-82f9-629289f6224d"]
}, Open  ]],

Cell[TextData[{
 "Der Abstandsvektor (Beobachter - Ladung) sei ",
 StyleBox["raumfest",
  FontWeight->"Bold"],
 ". Dadurch geht man in des sogenannte Fernfeld. Dort ist die Verteilung der \
Strahlungsintensit\[ADoubleDot]t nur noch vom Winkel abh\[ADoubleDot]ngig, \
nicht von der aktuelle Koordinate. Wir beziehen den Winkel auf die Tangente \
an den Kreis bei t = 0. \n\[Theta] ist der Winkel den die Richtung zum \
Beobachter mit der Bahnebene bildet. \n"
}], "Text",
 CellChangeTimes->{{3.405848817645711*^9, 3.405848938985817*^9}, {
  3.405849272991662*^9, 3.4058493220281*^9}, {3.566714344319078*^9, 
  3.5667144218995667`*^9}},ExpressionUUID->"183f46d1-700c-483e-8caa-\
a325b777ff3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nvec", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.739519387074124*^9, 3.7395194159116545`*^9}},
 ExpressionUUID -> "4f3b80fa-5daf-41f6-a863-88f9222e5754"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.60688153255761*^9, 3.606881877380478*^9, 3.606884307992427*^9, 
   3.6085290059599323`*^9, 3.638679305633807*^9, 3.732598554943774*^9, 
   3.733131159066131*^9, 3.733131515038067*^9, 3.733134711824391*^9, 
   3.739519418717781*^9, 3.7395201209518814`*^9, 3.739520485030895*^9, 
   3.7395205446929617`*^9, {3.7395207710940742`*^9, 3.739520777245796*^9}, 
   3.739520903981444*^9, 3.739525057620304*^9, 3.7395251530747776`*^9, 
   3.739525220367034*^9, 3.7395253961365747`*^9, 3.7395255912332525`*^9, 
   3.7395257139369407`*^9, 3.7395261331620817`*^9, 3.739689885982164*^9, 
   3.739693032276647*^9, 3.7396951286177588`*^9, 3.739700230279442*^9, 
   3.739704311836094*^9, 3.7397044115032187`*^9},
 ExpressionUUID -> "bead8e07-0b9c-4d42-a84c-64e4545d0a4b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Der erste Term ist ein Vektor, Zerlegung in \[Pi] und \[Sigma] Komponente\
\>", "Section",
 CellChangeTimes->{{3.566717132173863*^9, 
  3.566717153375177*^9}},ExpressionUUID->"0d8fe76b-3ea8-4cbe-ad78-\
bcc0065f303d"],

Cell["\<\
Der erste Faktor, der nicht von \[Omega] abh\[ADoubleDot]ngt, mit raumfestem \
Abstandsvektor\
\>", "Text",
 ExpressionUUID -> "c1fac467-4fa6-4e3b-8deb-b7e5572f711b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac1sync", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"nvec", "\[Cross]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"nvec", "-", 
           RowBox[{"\[Beta]sync", "[", "t", "]"}]}], ")"}], "\[Cross]", 
         RowBox[{"\[Beta]prime", "[", "t", "]"}]}], ")"}]}], "]"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"\[Beta]sync", "[", "t", "]"}], ".", "nvec"}]}], ")"}], 
      "2"]}], " ", "//.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]b", "\[Rule]", " ", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            SuperscriptBox["k", "2"], "2"]}], ")"}]}]}]}], ",", 
      RowBox[{"ku", "\[Rule]", " ", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "\[Lambda]u"]}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.405792780235894*^9, 3.4057927867537317`*^9}, {
   3.7395205829217377`*^9, 3.739520586506996*^9}, 3.7395256801954145`*^9},
 ExpressionUUID -> "16941619-f564-45a1-a8d6-cf1578766fb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "c", " ", "k", " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"16", " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    SuperscriptBox["k", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                 RowBox[{
                  SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
                "]"}]}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", "k", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 SuperscriptBox["k", "2"], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}],
            "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", " ", "\[Lambda]u", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["\[Gamma]", "4"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[Gamma]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["k", "2"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SuperscriptBox["k", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                  RowBox[{
                   SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
                 "]"}]}]}], ")"}]}], "+", 
            RowBox[{"4", " ", "k", " ", "\[Gamma]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  SuperscriptBox["k", "2"], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
             " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
       "2"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"16", " ", "c", " ", "k", " ", "\[Pi]", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], 
        "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]u", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["\[Gamma]", "4"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[Gamma]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["k", "2"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SuperscriptBox["k", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                  RowBox[{
                   SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
                 "]"}]}]}], ")"}]}], "+", 
            RowBox[{"4", " ", "k", " ", "\[Gamma]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  SuperscriptBox["k", "2"], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
             " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
       "2"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "c", " ", "k", " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "k", " ", 
         SuperscriptBox["\[Gamma]", "3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], 
        "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "16"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["k", "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["k", "2"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    SuperscriptBox["k", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                 RowBox[{
                  SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
                "]"}]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", " ", "\[Lambda]u", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["\[Gamma]", "4"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[Gamma]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["k", "2"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SuperscriptBox["k", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                  RowBox[{
                   SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
                 "]"}]}]}], ")"}]}], "+", 
            RowBox[{"4", " ", "k", " ", "\[Gamma]", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  SuperscriptBox["k", "2"], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
             " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
       "2"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.606881533138275*^9, 3.606881878023711*^9, 3.606884308617895*^9, 
   3.608529006623205*^9, 3.638679306298842*^9, 3.732598555866626*^9, 
   3.733131160094923*^9, {3.7331314930329123`*^9, 3.733131515966394*^9}, 
   3.73313471294591*^9, 3.739520131795244*^9, 3.739520555438245*^9, 
   3.7395205901968083`*^9, 3.7395207915564322`*^9, 3.739520918021944*^9, 
   3.739525071999626*^9, 3.7395251675679717`*^9, 3.7395256061500683`*^9, 
   3.7395258008751287`*^9, 3.739526219254125*^9, 3.7396899294767723`*^9, 
   3.739693075057221*^9, 3.7396951717438393`*^9, 3.739700293176037*^9, 
   3.739704372915036*^9, 3.739704469604512*^9},
 ExpressionUUID -> "c1699c58-37b6-4b97-8805-95d2bb71c665"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fac1sync", " ", "/.", " ", 
   RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.638679425127405*^9, 3.6386794573620577`*^9}, {
  3.7395205989367557`*^9, 3.73952061252201*^9}},
 ExpressionUUID -> "0ae73645-3cff-4c3b-968f-ad9b01fc1a64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "c", " ", "k", " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["k", "2"], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["k", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["k", "2"], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SuperscriptBox["k", "2"], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}]}], 
       ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", " ", "\[Lambda]u", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}]}],
         ")"}], "2"]}], ")"}]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6386794334664097`*^9, 3.6386794584552794`*^9}, 
   3.7325985559798803`*^9, 3.733131160364707*^9, 3.733131516239191*^9, 
   3.733134713390285*^9, 3.7395201318831725`*^9, 3.7395205555251565`*^9, {
   3.739520601177986*^9, 3.739520612778279*^9}, 3.7395207918790903`*^9, 
   3.7395209183626013`*^9, 3.7395250723562493`*^9, 3.7395251678766565`*^9, 
   3.739525606497714*^9, 3.739525804246682*^9, 3.739526222087247*^9, 
   3.739689930933213*^9, 3.7396930765212317`*^9, 3.739695173181881*^9, 
   3.739700295287353*^9, 3.739704375303935*^9, 3.7397044715956783`*^9},
 ExpressionUUID -> "0d48cd61-657b-4e39-bbb4-e95bb1732e09"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.638679204611774*^9, 
  3.638679314201775*^9}},ExpressionUUID->"accb8697-df01-41cb-a31f-\
e496417c5847"],

Cell["\<\
In der Bahnebene gibt es nur die x - Komponenten, das nennt man die \[Sigma] \
- Polarisation. \
\>", "Text",
 CellChangeTimes->{{3.638679837350507*^9, 3.638679840338015*^9}, {
  3.7395206320240903`*^9, 
  3.739520632120009*^9}},ExpressionUUID->"23871941-dd9c-4b3a-8f6d-\
3be009f8738b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff1sigma", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"fac1sync", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", ">", "0"}], ",", 
      RowBox[{"\[Gamma]", ">", "1"}], ",", 
      RowBox[{"t", "\[Element]", " ", "Reals"}], ",", 
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.566726753285644*^9, 3.566726755539585*^9}, 
   3.606882225746071*^9, {3.638680116939646*^9, 3.638680135839189*^9}, {
   3.7395206394501853`*^9, 3.7395206395460873`*^9}, 3.7395255737001567`*^9, 
   3.7395256669939027`*^9},
 ExpressionUUID -> "741a9580-65ee-4225-b4c6-3c5a1024ab36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", "c", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["\[Gamma]", "4"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  SuperscriptBox["k", "2"], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
              "]"}]}]}], ")"}]}], "+", 
         RowBox[{"16", " ", 
          SuperscriptBox["\[Gamma]", "4"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "k", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               SuperscriptBox["k", "2"], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], 
         "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]", "3"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], 
  "/", 
  RowBox[{"(", 
   RowBox[{"\[Gamma]", " ", "\[Lambda]u", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"16", " ", 
        SuperscriptBox["\[Gamma]", "4"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["k", "2"], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["k", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", 
                   SuperscriptBox["k", "2"], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                RowBox[{
                 SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", "k", " ", "\[Gamma]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                SuperscriptBox["k", "2"], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
           " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.6068815333014*^9, 3.606881878183283*^9, 3.606882226741465*^9, 
   3.606884309020714*^9, 3.608529007059719*^9, {3.638680129603003*^9, 
   3.638680138183832*^9}, 3.732598558107893*^9, 3.733131162640862*^9, 
   3.733131518646739*^9, 3.733134715550168*^9, 3.7395201337914567`*^9, 
   3.739520557383795*^9, 3.739520649058305*^9, 3.739520794851416*^9, 
   3.739520921305109*^9, 3.739525075400139*^9, 3.739525170847628*^9, 
   3.7395256095895534`*^9, 3.739525848806142*^9, 3.739526264301116*^9, 
   3.739689943348856*^9, 3.739693089014501*^9, 3.739695185541172*^9, 
   3.739700314248301*^9, 3.739704488431666*^9},
 ExpressionUUID -> "ab1ee8e4-cd6c-4233-b84d-20a0c1b752de"]
}, Open  ]],

Cell[TextData[{
 "F\[UDoubleDot]r ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[NotEqual]", "0", " "}], TraditionalForm]],
  ExpressionUUID->"bd0059ca-9c05-4c76-a406-8919d32d6dc4"],
 " gibt es sowohl eine \"y\" als auch eine \"z\" Komponente, das muss aber so \
sein da der E-Vektor senkrecht auf ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "56b83f09-7fff-4c56-8b49-bccb561e3cb1"],
 " stehen muss.. Man sieht es wenn man das Verh\[ADoubleDot]ltnis der \
Komponenten bildet : "
}], "Text",
 CellChangeTimes->{{3.566715309343896*^9, 3.566715543768367*^9}, {
   3.566715595215088*^9, 3.56671559659086*^9}, {3.566715657221404*^9, 
   3.5667156868924828`*^9}, {3.566726731765679*^9, 3.5667267454259167`*^9}, {
   3.5667267769138727`*^9, 3.5667267939040813`*^9}, 3.606885818189178*^9, {
   3.638679467513804*^9, 3.638679669823454*^9}, {3.638679831851015*^9, 
   3.638679834831066*^9}, {3.7395206743114758`*^9, 
   3.7395206743753986`*^9}},ExpressionUUID->"f68aa886-2ba7-4fb4-9c58-\
af7fbb22dbba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fac1sync", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "/", 
   RowBox[{"fac1sync", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.638679681632805*^9, 3.6386797021268387`*^9}, {
  3.7395206897697005`*^9, 3.7395206964400816`*^9}},
 ExpressionUUID -> "3b04bef6-d985-4b61-8c59-a291c1ad0ec2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sec", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", "k", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          SuperscriptBox["\[Gamma]", "4"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["k", "2"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  SuperscriptBox["k", "2"], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
              "]"}]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Gamma]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"k", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.638679695181774*^9, 3.6386797026945667`*^9}, 
   3.732598558211124*^9, 3.733131162717907*^9, 3.7331315187405367`*^9, 
   3.733134715619646*^9, 3.7395201341331367`*^9, 3.7395205577154446`*^9, {
   3.739520690456012*^9, 3.739520698341364*^9}, 3.739520795847394*^9, 
   3.739520922324068*^9, 3.7395250764011173`*^9, 3.739525171840623*^9, 
   3.739525610623497*^9, 3.7395258542695594`*^9, 3.7395262695737247`*^9, 
   3.739689945871694*^9, 3.739693091541442*^9, 3.7396951880854*^9, 
   3.739700318679803*^9, 3.7397044918489656`*^9},
 ExpressionUUID -> "ec47bf17-38c3-4450-9eba-c40ac1c830fc"]
}, Open  ]],

Cell["oder einfach das Skalarprodukt", "Text",
 CellChangeTimes->{{3.638679851279114*^9, 
  3.63867986064554*^9}},ExpressionUUID->"3becf276-7597-4d24-8e05-\
19a025938fcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fac1sync", ".", "nvec"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.638679706837449*^9, 3.6386797804270887`*^9}, {
  3.7395207054015007`*^9, 3.7395207066171217`*^9}},
 ExpressionUUID -> "07b76eb2-71bc-4bb4-bac9-d3d096844af5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.638679781214308*^9, 3.7325985582821693`*^9, 3.73313116275823*^9, 
   3.733131518808606*^9, 3.733134715666111*^9, 3.7395201341531157`*^9, 
   3.739520557733426*^9, {3.7395207023023124`*^9, 3.739520707029683*^9}, 
   3.739520795861367*^9, 3.7395209223560233`*^9, 3.7395250764151077`*^9, 
   3.739525171859599*^9, 3.739525610656464*^9, 3.739525854757061*^9, 
   3.739526269978318*^9, 3.739689946354905*^9, 3.739693092006694*^9, 
   3.739695188559698*^9, 3.7397003193949947`*^9, 3.7397044925263166`*^9},
 ExpressionUUID -> "69469a4d-db9a-457a-9354-b9d2c190b65b"]
}, Open  ]],

Cell["\<\
Diese Komponente ist die \[Pi]- Polarisation (senkrecht zur Bahnebene):  \
\>", "Text",
 CellChangeTimes->{{3.405849182429351*^9, 3.405849233114229*^9}, {
  3.40584936720819*^9, 3.405849401131937*^9}, {3.566726866927408*^9, 
  3.566726891524979*^9}, {3.60688583661283*^9, 3.606885865306891*^9}, {
  3.638679869967334*^9, 
  3.6386798708767347`*^9}},ExpressionUUID->"387c8e36-ed56-4018-969c-\
d21d2ad48494"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff1pi", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"fac1sync", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.566716617465192*^9, 3.5667166195384912`*^9}, {
   3.56672566542939*^9, 3.566725673451528*^9}, {3.566726000682982*^9, 
   3.566726072961171*^9}, {3.566726105304418*^9, 3.566726151486064*^9}, {
   3.566726189469297*^9, 3.5667261924690723`*^9}, {3.5667262251161346`*^9, 
   3.566726245572014*^9}, {3.566726894561598*^9, 3.566726897894685*^9}, {
   3.606882095130457*^9, 3.606882125968856*^9}, {3.606882182240773*^9, 
   3.606882197239478*^9}, {3.6068848347222548`*^9, 3.606884849961904*^9}, {
   3.606884940650559*^9, 3.6068849410185623`*^9}, {3.606885668897949*^9, 
   3.60688567741508*^9}, {3.606885885202413*^9, 3.606885901368122*^9}, {
   3.638679878918647*^9, 3.6386799092437553`*^9}, {3.638679943105736*^9, 
   3.638680023868886*^9}, {3.7331314570484533`*^9, 3.733131476439497*^9}, {
   3.7395207381715603`*^9, 3.7395207513371167`*^9}, {3.7395209267475357`*^9, 
   3.7395209268584228`*^9}, {3.7395255247391806`*^9, 3.7395255365621014`*^9}, 
   3.7395256920013623`*^9},
 ExpressionUUID -> "f082a0fa-40ae-4e97-a376-3ab7b0e103a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"16", " ", "c", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox["\[Gamma]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], "2"], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"k", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SuperscriptBox["k", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"\[Lambda]u", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"16", " ", 
        SuperscriptBox["\[Gamma]", "4"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["k", "2"], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["k", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", 
                   SuperscriptBox["k", "2"], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
                RowBox[{
                 SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", "k", " ", "\[Gamma]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                SuperscriptBox["k", "2"], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
           " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.606881534137014*^9, 3.606881878868926*^9, 3.6068821277070637`*^9, {
   3.606882186876244*^9, 3.606882200605268*^9}, 3.60688431160756*^9, {
   3.606884838072585*^9, 3.606884852998481*^9}, 3.606884942013585*^9, 
   3.606885678521101*^9, {3.6068858900758457`*^9, 3.606885902024899*^9}, 
   3.6085290072787943`*^9, {3.63867988785606*^9, 3.638679913526947*^9}, {
   3.6386799554941196`*^9, 3.6386800005622683`*^9}, 3.638680033333405*^9, 
   3.7325985671222343`*^9, 3.733131172191635*^9, 3.733131477284601*^9, 
   3.733131518875326*^9, 3.733134715722899*^9, 3.73952013416912*^9, 
   3.739520557751407*^9, {3.7395207388922343`*^9, 3.739520753766636*^9}, 
   3.739520797298911*^9, {3.7395209237865734`*^9, 3.7395209285257297`*^9}, 
   3.7395250778196793`*^9, 3.739525173243174*^9, 3.739525635559022*^9, 
   3.7395258755378447`*^9, 3.739526289719129*^9, 3.7396899619820757`*^9, 
   3.7396931073356457`*^9, 3.7396952040820293`*^9, 3.739700345216277*^9, 
   3.739704513271241*^9},
 ExpressionUUID -> "2918de79-17ac-4876-8cdc-dd940d322413"]
}, Open  ]],

Cell["sie verschwindet wie gesagt in der Bahnebene... ", "Text",
 CellChangeTimes->{{3.566726908844676*^9, 3.566726916492383*^9}, {
  3.606885688837562*^9, 3.606885690148859*^9}, {3.638680064965542*^9, 
  3.638680070836013*^9}},ExpressionUUID->"6418eb03-907c-4d3b-962c-\
68e9658753dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Vor\[UDoubleDot]berlegungen zum ben\[ODoubleDot]tigten Zeitbereich f\
\[UDoubleDot]r die Integration \
\>", "Section",
 CellChangeTimes->{{3.405849182429351*^9, 3.405849233114229*^9}, {
  3.40584936720819*^9, 3.405849460847249*^9}, {3.566716673293523*^9, 
  3.566716691291149*^9}},ExpressionUUID->"640208bc-4d69-4c51-809e-\
5461cc19a36d"],

Cell["\<\
Ist hier nicht notwendig, der Zeitbereich ist durch die L\[ADoubleDot]nge des \
Undulators gegeben. \
\>", "Text",
 CellChangeTimes->{{3.739501842271441*^9, 
  3.739501865164909*^9}},ExpressionUUID->"058a882b-9871-4433-965d-\
70aa27cd0bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Der zweite Faktor, oder auch 'Phasenterm'", "Section",
 CellChangeTimes->{{3.566717106971002*^9, 
  3.566717107576353*^9}},ExpressionUUID->"34e57887-9a75-495f-8465-\
19bdb721079b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "\[Omega]", 
      RowBox[{"(", 
       RowBox[{"t", " ", "-", " ", 
        RowBox[{
         RowBox[{"nvec", ".", 
          RowBox[{"rvecfull", "[", "t", "]"}]}], "/", "c"}]}], ")"}]}], "]"}],
     "//.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]b", "\[Rule]", " ", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            SuperscriptBox["k", "2"], "2"]}], ")"}]}]}]}], ",", 
      RowBox[{"ku", "\[Rule]", " ", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "\[Lambda]u"]}]}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.405827615673306*^9, 3.405827631725339*^9}, {
  3.4058276986905403`*^9, 3.405827699707038*^9}, {3.4065297775919847`*^9, 
  3.406529808576476*^9}, {3.739520963449259*^9, 3.7395209707123985`*^9}, {
  3.7395255179551125`*^9, 3.73952553038741*^9}},
 ExpressionUUID -> "b7c93c33-5219-4361-a5ef-9a9edff2cac6"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "c", " ", "\[Pi]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["k", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["k", "2"], " ", "\[Lambda]u", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                SuperscriptBox["k", "2"], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
             RowBox[{
              SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], 
            "]"}]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "c", " ", "\[Pi]", " ", "t", " ", 
           "\[Gamma]"}], "+", 
          RowBox[{"k", " ", "\[Lambda]u", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"c", " ", "\[Pi]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                SuperscriptBox["k", "2"], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Gamma]", "2"], " ", "\[Lambda]u"}]], "]"}], 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"16", " ", "c", " ", "\[Pi]", " ", 
     SuperscriptBox["\[Gamma]", "2"]}]]}]]], "Output",
 CellChangeTimes->{
  3.606881535669909*^9, 3.606881880077546*^9, 3.606884312398995*^9, 
   3.608529008416677*^9, 3.638680198082551*^9, 3.732598568149021*^9, 
   3.7331311737437143`*^9, 3.7331315202883368`*^9, 3.733134717360978*^9, 
   3.7395201346456127`*^9, 3.7395205582179446`*^9, 3.739520797792406*^9, 
   3.739520924282055*^9, {3.7395209647978706`*^9, 3.7395209738232193`*^9}, 
   3.7395250803111362`*^9, 3.7395251757246375`*^9, 3.739525640802675*^9, 
   3.7395258810581923`*^9, 3.739526295096635*^9, 3.739689965419633*^9, 
   3.7396931107838707`*^9, 3.739695207507082*^9, 3.739700349917005*^9, 
   3.739704517704314*^9},
 ExpressionUUID -> "2b7fe306-7b47-4cc1-93f4-1c889a216a66"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Das Modul zur Berechnung des abgestrahlten Spektrums", "Section",
 CellChangeTimes->{{3.405850455241026*^9, 3.4058504674042807`*^9}, {
  3.406531605932391*^9, 3.406531606599427*^9}, {3.566717619795424*^9, 
  3.566717633274703*^9}},ExpressionUUID->"a1bac59b-f47d-4bcf-b7d4-\
98377569e0c7"],

Cell["\<\
Ich lasse hier mal das Modul f\[UDoubleDot]r die \"Dipolstrahlung\" als \
Muster stehen.  Die neuen Parameter sind jetzt : \
\>", "Text",
 CellChangeTimes->{{3.5667178072308598`*^9, 3.566718114598092*^9}, {
  3.6068819932901993`*^9, 3.606881997689053*^9}, {3.608528905034685*^9, 
  3.6085289054648438`*^9}, {3.739502061391062*^9, 3.739502118659952*^9}, {
  3.739520984056638*^9, 
  3.7395209848558393`*^9}},ExpressionUUID->"91a3b5d3-8a3c-4916-820c-\
18c9d65f4092"],

Cell["\<\

    Parameter : 
    xmin, xmax  : Frequenzbereich in Einheiten der Grundharmonischen
   nfp : Anzahl der Frequenzpunke
   \[Theta] und \[Phi] sind die Winkel
   K = Undulatorparameter
   energy = Elektronenstrahlenergie
   \[Lambda]u = Undulatorperiode
   nper : Anzahl der Undulatorperioden\
\>", "Text",
 CellChangeTimes->{{3.739502121305488*^9, 3.739502143219449*^9}, 
   3.739523522301922*^9},ExpressionUUID->"a5da0ef4-793f-4900-bd37-\
39d93e6d0840"],

Cell["\<\
Daraus dann jetzt also das neue \"Module\" oder \"Block\" basteln .... \
\>", "Text",
 CellChangeTimes->{{3.7395021936511583`*^9, 
  3.739502219597886*^9}},ExpressionUUID->"5e005635-03d5-46fa-b612-\
7a1100fc91f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "makeSRarc", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"normspec", "\[Rule]", "\"\<normiert\>\""}], ",", 
     RowBox[{"\[Omega]range", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "5."}], "}"}]}], ",", 
     RowBox[{"\[Omega]points", "\[Rule]", "200"}], ",", 
     RowBox[{"kpar", "\[Rule]", "1."}], ",", 
     RowBox[{"energy", "\[Rule]", "3."}], ",", 
     RowBox[{"undper", "\[Rule]", "0.05"}], ",", 
     RowBox[{"nper", "\[Rule]", " ", "10"}], ",", " ", 
     RowBox[{"logInterval", "\[Rule]", "True"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.472404704896977*^9, 3.47240471875095*^9}, {
   3.472404763823781*^9, 3.472404765989781*^9}, {3.472404946313368*^9, 
   3.472404947673119*^9}, {3.566722186165897*^9, 3.5667222300831137`*^9}, {
   3.566722338577531*^9, 3.56672237199181*^9}, {3.566722819658842*^9, 
   3.566722819793125*^9}, {3.5667230108119698`*^9, 3.566723025763543*^9}, {
   3.566728163903845*^9, 3.566728164127604*^9}, {3.7395235512613335`*^9, 
   3.739523608395959*^9}, {3.7395240583018694`*^9, 3.739524058428729*^9}, {
   3.7395240978534584`*^9, 3.7395240983819084`*^9}, {3.7395246262540407`*^9, 
   3.739524633246907*^9}, {3.739526037664665*^9, 3.739526052816183*^9}, {
   3.7395266197299023`*^9, 3.7395266612352343`*^9}, {3.739694155899044*^9, 
   3.739694201715025*^9}, 3.7397043761491756`*^9},
 ExpressionUUID -> "6e43e59b-a288-4154-a6f5-6488d2984eb4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.733131409863914*^9},
 ExpressionUUID -> "ed68a006-975d-414c-bea1-5f613d4ea6d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeSRarc", "[", 
   RowBox[{"\[Theta]in_", ",", "\[Phi]in_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]u", ",", "k", ",", "np", ",", "\[Beta]", ",", 
      RowBox[{"mc", "=", 
       RowBox[{"3.", "*", 
        SuperscriptBox["10", "8"]}]}], ",", "fac1", ",", "tmin", ",", "tmax", 
      ",", "tstep", ",", 
      RowBox[{"hquer", "=", " ", 
       RowBox[{"1.05", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "34"}]]}]}], ",", 
      RowBox[{"evolt", "=", " ", 
       RowBox[{"1.6", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "19"}]]}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"3.", "*", 
        SuperscriptBox["10", "8"]}]}], ",", "\[Gamma]", ",", "npoints", ",", 
      "xmin", ",", "xmax", ",", "xfac", ",", "xlist", ",", "\[Omega]max", ",",
       "\[Omega]res", ",", "facpi", ",", "facsigma", ",", 
      "\[IndentingNewLine]", "tabpi", ",", "tabsigma", ",", "tabpiX", ",", 
      "tabsigmaX", ",", "x", ",", "tab2", ",", "outlist", ",", "\[Theta]", 
      ",", "\[Phi]", ",", "\[Lambda]0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]", "=", "\[Theta]in"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "warum", " ", "man", " ", "diese", " ", "Ersetzung", " ", "machen", " ",
        "muss", " ", "habe", " ", "ich", " ", "ausf\[UDoubleDot]hrlich", " ", 
       
       RowBox[{"erkl\[ADoubleDot]rt", ".", " ", "Funktionsargumente"}], " ", 
       "werden", " ", "nur", " ", "nach", " ", "\"\<Position\>\"", " ", 
       "\[UDoubleDot]bergeben", " ", 
       RowBox[{"(", 
        RowBox[{"slot1", ",", " ", 
         RowBox[{"slot2", "..."}]}], ")"}], " ", "nicht", " ", "nach", " ", 
       RowBox[{"Namen", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Phi]", "=", "\[Phi]in"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"OptionValue", "[", "energy", "]"}], "/", 
        RowBox[{"(", "0.511", ")"}]}], "*", 
       SuperscriptBox["10", "3"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", " ", "=", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"1", "/", 
         SuperscriptBox["\[Gamma]", "2"]}]}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]u", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "undper", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{"OptionValue", "[", "kpar", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"np", "=", 
      RowBox[{"OptionValue", "[", "nper", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmin", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmax", " ", "=", " ", 
      FractionBox[
       RowBox[{"\[Lambda]u", " ", "np"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Gamma]", "2"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              SuperscriptBox["k", "2"], "2"]}], ")"}]}]}], ")"}], " ", 
        "c"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tstep", " ", "=", " ", 
      FractionBox["tmax", "1500"]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "1500", " ", "Punkte", " ", "auf", " ", "der", " ", "Zeitachse"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"npoints", " ", "=", 
      RowBox[{"OptionValue", "[", "\[Omega]points", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xmin", " ", "=", "  ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\[Omega]range", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xmax", " ", "=", "  ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\[Omega]range", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xfac", " ", "=", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"xmax", "/", "xmin"}], ")"}], 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"npoints", "-", "1"}], ")"}]}]]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "mir", " ", "ist", " ", "eine", " ", "log", " ", "Unterteilung", " ", 
       "f\[UDoubleDot]r", " ", "die", " ", "Frequenz", " ", "lieber"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logInterval", "]"}], ",", 
       RowBox[{"xlist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"xmin", "*", 
           SuperscriptBox["xfac", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "npoints"}], "}"}]}], "]"}]}], ",", 
       " ", 
       RowBox[{"xlist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"xmin", "+", 
           RowBox[{"n", "*", 
            FractionBox[
             RowBox[{"xmax", "-", "xmin"}], "npoints"]}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "1", ",", " ", "npoints"}], "}"}]}], 
         "]"}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Omega]max", " ", "=", " ", 
      RowBox[{"1", "/", "tstep"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]0", "=", 
      RowBox[{
       FractionBox["\[Lambda]u", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Gamma]", "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["k", "2"], "2"], "+", 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], " ", 
          SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]res", " ", "=", " ", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       FractionBox["c", "\[Lambda]0"]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "als", " ", "erstes", " ", "berechnen", " ", "wir", " ", "die", " ", 
       "Faktoren", " ", "die", " ", "nicht", " ", "von", " ", "\[Omega]", " ",
        "abh\[ADoubleDot]ngen"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"facsigma", " ", "=", 
      RowBox[{"Evaluate", "[", "ff1sigma", "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "durch", " ", "das", " ", "\"\<Evaluate\>\"", " ", "werden", " ", 
       "alle", " ", "Zahlenwerte", " ", "eingesetzt"}], " ", "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"facpi", " ", "=", " ", 
      RowBox[{"Evaluate", "[", "ff1pi", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tabpi", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"facpi", "  ", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax", ",", "tstep"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tabsigma", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"facsigma", "  ", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax", ",", "tstep"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"outlist", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"0", "&"}], ",", 
        RowBox[{"Length", "[", "xlist", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "jetzt", " ", "kommt", " ", "der", " ", "Loop", " ", "\[UDoubleDot]ber",
        " ", "die", " ", 
       RowBox[{"Frequenzen", ".", " ", "\"\<x\>\""}], " ", "ist", " ", 
       RowBox[{"\[Omega]", "/", 
        SubscriptBox["\[Omega]", "res"]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"xlist", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "wir", " ", "berechnen", " ", "den", " ", "Phasenterm", " ", "auf", 
          " ", "dem", " ", "gleichen", " ", "Zeitraster"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"tab2", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"fac2", "//.", " ", 
             RowBox[{"\[Omega]", "\[Rule]", 
              RowBox[{"x", " ", "\[Omega]res"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "tmin", ",", "tmax", ",", "tstep"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "und", " ", "das", " ", "Produkt", " ", "Phasenterm", " ", "*", " ", 
          
          RowBox[{"Vorfaktor", ".", " ", "Das"}], " ", "wird", " ", 
          "automatisch", " ", "elementweise", " ", "gemacht"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"tabpiX", " ", "=", " ", 
         RowBox[{"tabpi", "*", "tab2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tabsigmaX", " ", "=", " ", 
         RowBox[{"tabsigma", "*", "tab2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "das", " ", "mit", " ", "dem", " ", "\"\<Switch\>\"", " ", "ist", 
           " ", "die", " ", "Feder", " ", "auf", " ", "dem", " ", "Hut"}], 
          ",", " ", 
          RowBox[{
          "man", " ", "w\[ADoubleDot]hlt", " ", "damit", " ", "ja", " ", 
           "nur", " ", "die", " ", "Einheiten", " ", 
           RowBox[{"aus", ".", " ", "Das"}], " ", "Integrieren", " ", "wird", 
           " ", "einfach", " ", "mit", " ", "\"\<Total\>\"", " ", 
           RowBox[{"gemacht", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "normspec", "]"}], ",", 
          "\[IndentingNewLine]", "\"\<normiert\>\"", ",", 
          RowBox[{
           RowBox[{"outlist", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"x", ",", "\[Theta]", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabpiX", "]"}], "*", "tstep"}], "]"}], 
              "^", "2"}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabsigmaX", "]"}], "*", "tstep"}], 
               "]"}], "^", "2"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          "\"\<real\>\"", ",", 
          RowBox[{
           RowBox[{"outlist", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", 
              RowBox[{"\[Omega]res", "/", 
               RowBox[{"(", 
                RowBox[{"2", "\[Pi]", " ", 
                 SuperscriptBox["10", "15"]}], ")"}]}]}], ",", "\[Theta]", 
             ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabpiX", "]"}], "*", "tstep"}], "]"}], 
              "^", "2"}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabsigmaX", "]"}], "*", "tstep"}], 
               "]"}], "^", "2"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          "\"\<Energie\>\"", ",", 
          RowBox[{
           RowBox[{"outlist", "[", 
            RowBox[{"[", "n", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "*", "\[Omega]res", "*", 
              RowBox[{"hquer", "/", "evolt"}]}], ",", "\[Theta]", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabpiX", "]"}], "*", "tstep"}], "]"}], 
              "^", "2"}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"Total", "[", "tabsigmaX", "]"}], "*", "tstep"}], 
               "]"}], "^", "2"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          "\"\<Wellenl\[ADoubleDot]nge\>\"", ",", 
          RowBox[{
           RowBox[{"outlist", "[", 
            RowBox[{"[", "n", "]"}], "]"}], " ", "=", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Lambda]", " ", "=", 
               RowBox[{"300.", "/", 
                RowBox[{"(", 
                 RowBox[{"x", " ", 
                  RowBox[{"\[Omega]res", "/", 
                   RowBox[{"(", 
                    RowBox[{"2", "\[Pi]", " ", 
                    SuperscriptBox["10", "12"]}], ")"}]}]}], ")"}]}]}], " ", 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Phi]", ",", 
               RowBox[{
                RowBox[{"1", "/", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Total", "[", "tabpiX", "]"}], "*", "tstep"}], 
                  "]"}], "^", "2"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Total", "[", "tabsigmaX", "]"}], "*", "tstep"}], 
                  "]"}], "^", "2"}]}]}], "}"}]}], "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "xlist", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(f\), \(c\)]\), \!\(\*SubscriptBox[\(\
\[Lambda]\), \(c\)]\)    \>\"", ",", 
         RowBox[{"\[Omega]res", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]", " ", 
            SuperscriptBox["10", "12"]}], ")"}]}], ",", "\"\<  \>\"", ",", 
         RowBox[{"300.", "*", "2", "\[Pi]", " ", 
          RowBox[{
           SuperscriptBox["10", "12"], "/", "\[Omega]res"}]}]}], "]"}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"outlist", ",", "1"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.405792227048729*^9, 3.405793392867154*^9, {3.405794149248118*^9, 
   3.405794196256575*^9}, {3.405794255135714*^9, 3.4057942629683723`*^9}, {
   3.4057943069377527`*^9, 3.405794333197192*^9}, {3.405794367171135*^9, 
   3.405794389549501*^9}, {3.40579450487676*^9, 3.405794506658659*^9}, {
   3.405794584154409*^9, 3.405794591003079*^9}, {3.405794623909836*^9, 
   3.40579466001097*^9}, {3.405794766784101*^9, 3.405794768967113*^9}, {
   3.4058268612791033`*^9, 3.40582699676191*^9}, {3.405827065511273*^9, 
   3.40582706582193*^9}, {3.405850574921668*^9, 3.405850583844639*^9}, {
   3.405850859127428*^9, 3.405850862998213*^9}, {3.405851258867132*^9, 
   3.4058513231884613`*^9}, {3.405851475853882*^9, 3.405851527486661*^9}, {
   3.40585164655482*^9, 3.4058516466635313`*^9}, {3.405851911364869*^9, 
   3.405851914500572*^9}, {3.4058520479647017`*^9, 3.4058520480777884`*^9}, {
   3.405852236118619*^9, 3.405852308872919*^9}, {3.405856995615509*^9, 
   3.4058571825789337`*^9}, {3.405857324913475*^9, 3.4058573352587757`*^9}, {
   3.405857688138028*^9, 3.405857688428877*^9}, {3.4058577427529497`*^9, 
   3.405857749273446*^9}, {3.4058580820736723`*^9, 3.405858088506109*^9}, {
   3.405859913365437*^9, 3.4058599456527843`*^9}, {3.405919192247992*^9, 
   3.405919234489522*^9}, {3.4059192756349573`*^9, 3.405919342611702*^9}, {
   3.405919417747231*^9, 3.4059194274737988`*^9}, {3.405919505193368*^9, 
   3.405919505722268*^9}, {3.4059196899044228`*^9, 3.405919725101553*^9}, {
   3.405920086551385*^9, 3.405920289136038*^9}, {3.4064423685599203`*^9, 
   3.406442383428699*^9}, {3.40644258200211*^9, 3.406442622180978*^9}, {
   3.4064429473108463`*^9, 3.406442948330122*^9}, {3.406442996408224*^9, 
   3.406443001230345*^9}, 3.406443053187147*^9, {3.406443197705729*^9, 
   3.4064432708252974`*^9}, {3.406443309795046*^9, 3.406443310093234*^9}, {
   3.406443341871059*^9, 3.406443354382326*^9}, {3.4064433934147997`*^9, 
   3.406443502446838*^9}, {3.406443556301928*^9, 3.40644359475744*^9}, {
   3.406443741571458*^9, 3.406443746687297*^9}, {3.406444073105858*^9, 
   3.4064440798687363`*^9}, {3.406454892212284*^9, 3.4064549703994427`*^9}, {
   3.406455020656991*^9, 3.406455043416975*^9}, {3.406455087797824*^9, 
   3.406455176850628*^9}, {3.406455374789274*^9, 3.406455525488166*^9}, {
   3.406456026121025*^9, 3.406456062368167*^9}, {3.406529880065234*^9, 
   3.4065298823243437`*^9}, {3.472402967483797*^9, 3.472403271155033*^9}, {
   3.472403422572933*^9, 3.4724034228598223`*^9}, {3.47240346540314*^9, 
   3.472403522166068*^9}, {3.472403554376081*^9, 3.4724035605825768`*^9}, {
   3.472403620389423*^9, 3.472403644363247*^9}, {3.4724037093159924`*^9, 
   3.472403710875081*^9}, {3.472404121882103*^9, 3.472404126049221*^9}, {
   3.472404252251603*^9, 3.4724042535362988`*^9}, {3.4724043671909924`*^9, 
   3.472404413099352*^9}, {3.4724044878793507`*^9, 3.472404566205933*^9}, {
   3.47240462669088*^9, 3.472404648009798*^9}, 3.472404724248856*^9, {
   3.47240477605336*^9, 3.472404786982061*^9}, {3.4724048218099546`*^9, 
   3.472404880011335*^9}, {3.47240493240555*^9, 3.472404942126039*^9}, 
   3.500810567566896*^9, {3.566640741086446*^9, 3.566640836881819*^9}, {
   3.566640890189378*^9, 3.566640914872794*^9}, 3.566640970412116*^9, {
   3.566641024649233*^9, 3.566641033912282*^9}, 3.566641120382166*^9, 
   3.566641166988408*^9, 3.566717788516041*^9, {3.566718132370564*^9, 
   3.56671816936547*^9}, {3.566718224518003*^9, 3.566718233181429*^9}, {
   3.566718325277125*^9, 3.566718358097516*^9}, {3.566718418760672*^9, 
   3.566718462616343*^9}, {3.566721571755035*^9, 3.5667215739531*^9}, {
   3.5667217008933353`*^9, 3.566721720532648*^9}, {3.566722244811282*^9, 
   3.5667222629874277`*^9}, {3.56672229920298*^9, 3.566722412826119*^9}, {
   3.566722597259713*^9, 3.566722667281652*^9}, {3.566722725056191*^9, 
   3.5667227271979017`*^9}, {3.5667228336266117`*^9, 3.566722874049148*^9}, 
   3.566722921830989*^9, {3.566722962701785*^9, 3.566722985791646*^9}, {
   3.5667244828851643`*^9, 3.566724508602247*^9}, {3.566724571240424*^9, 
   3.566724584399816*^9}, {3.566725445318928*^9, 3.5667255432266817`*^9}, 
   3.566725579371163*^9, {3.566726278602166*^9, 3.566726303986898*^9}, {
   3.56672698439369*^9, 3.566726992033115*^9}, {3.5667274840321693`*^9, 
   3.566727484702676*^9}, {3.566728166330407*^9, 3.56672816658605*^9}, {
   3.566728535178089*^9, 3.566728535479513*^9}, {3.566794612333959*^9, 
   3.566794612491889*^9}, 3.566803308773115*^9, {3.566803378853148*^9, 
   3.5668033789809303`*^9}, {3.5668034280278177`*^9, 
   3.5668034329633636`*^9}, {3.5671504161115427`*^9, 3.567150429756652*^9}, {
   3.567150536483037*^9, 3.567150539626544*^9}, {3.567151023216366*^9, 
   3.567151145493804*^9}, {3.567151332630054*^9, 3.5671513331580963`*^9}, {
   3.6068818108912477`*^9, 3.606881814066234*^9}, {3.606882276051467*^9, 
   3.6068823175606413`*^9}, {3.606882370163295*^9, 3.606882403832262*^9}, {
   3.6068824715517073`*^9, 3.6068824747347307`*^9}, {3.606882511361991*^9, 
   3.606882593906872*^9}, {3.606882858294594*^9, 3.6068828719503393`*^9}, {
   3.606882924741688*^9, 3.606882961591954*^9}, {3.60688326611742*^9, 
   3.606883267557843*^9}, {3.606883361960335*^9, 3.606883382630547*^9}, {
   3.606883450151916*^9, 3.606883604755807*^9}, {3.606884772023252*^9, 
   3.6068847993991413`*^9}, {3.606885708890483*^9, 3.6068857144417067`*^9}, 
   3.606886440544271*^9, {3.6085291076291018`*^9, 3.60852917313417*^9}, {
   3.608529205876639*^9, 3.60852924193519*^9}, {3.63868056710429*^9, 
   3.638680622746099*^9}, {3.638680829718927*^9, 3.638680869101179*^9}, {
   3.638681111110168*^9, 3.6386811462759647`*^9}, {3.732611517900861*^9, 
   3.7326115268457413`*^9}, {3.732611569104033*^9, 3.732611570542207*^9}, {
   3.732611659851132*^9, 3.732611674985936*^9}, 3.732611734497829*^9, 
   3.732611771582467*^9, {3.7326118485896177`*^9, 3.732611851708054*^9}, {
   3.7326127374829683`*^9, 3.732612740071229*^9}, {3.732845922244507*^9, 
   3.732845922705737*^9}, {3.733131413205352*^9, 3.7331314228757133`*^9}, {
   3.739523726259563*^9, 3.739523729810951*^9}, {3.7395237957305827`*^9, 
   3.7395237969463406`*^9}, {3.739523892019208*^9, 3.739523896067067*^9}, {
   3.739523956691142*^9, 3.7395241265471306`*^9}, {3.73952419137989*^9, 
   3.739524204659341*^9}, {3.739524518403764*^9, 3.7395246025943537`*^9}, {
   3.7395246451397443`*^9, 3.7395246492375746`*^9}, {3.7395248374602466`*^9, 
   3.7395249371883526`*^9}, {3.739525003380722*^9, 3.7395250107242193`*^9}, {
   3.7395260562476664`*^9, 3.7395261082095766`*^9}, {3.739526462025097*^9, 
   3.73952646388618*^9}, {3.7395292428929825`*^9, 3.73952930329327*^9}, {
   3.73969023471933*^9, 3.739690235711297*^9}, {3.739690730328887*^9, 
   3.739690733674582*^9}, {3.73969076571945*^9, 3.73969076585708*^9}, 
   3.7396916186375837`*^9, 3.73969176509237*^9, {3.739692984557948*^9, 
   3.739693018678679*^9}, {3.739694218272051*^9, 3.739694288521307*^9}, {
   3.73969451746579*^9, 3.739694525315186*^9}, {3.739694754475696*^9, 
   3.739694790120977*^9}, {3.739694838500927*^9, 3.739694838639636*^9}, {
   3.7396949084287252`*^9, 3.739694931580305*^9}},
 ExpressionUUID -> "588b6d37-3703-488c-98ab-19fc3088c342"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ergebnisse", "Section",
 CellChangeTimes->{{3.5667890070035143`*^9, 
  3.566789008617413*^9}},ExpressionUUID->"1c334448-3c31-429c-8530-\
842289034dcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test", "=", 
    RowBox[{"makeSRarc", "[", 
     RowBox[{"0.", ",", "0.", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"normspec", "\[Rule]", "\"\<normiert\>\""}], ",", 
        RowBox[{"nper", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ";"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.739525107763073*^9, 3.739525147295682*^9}, {
   3.739526782834727*^9, 3.739526930514555*^9}, {3.7395274757471437`*^9, 
   3.7395274882603617`*^9}, 3.739527831588882*^9},
 ExpressionUUID -> "152be4d1-1211-4ee8-a6f4-8d72c4969e98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.156`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.739525149541387*^9, 3.739525177431905*^9}, 
   3.7395256427676554`*^9, 3.7395258832359676`*^9, 3.7395262954732623`*^9, 
   3.7395264707631655`*^9, 3.7395266669796515`*^9, {3.7395267987074003`*^9, 
   3.7395269312634535`*^9}, {3.739527476591281*^9, 3.739527488832773*^9}, 
   3.739527832489961*^9, 3.739689965568861*^9, 3.739693110938972*^9, 
   3.739695207667645*^9, 3.739700350481892*^9, 3.739704518003003*^9},
 ExpressionUUID -> "19fa271e-77f5-4400-ba01-8eb3fcbaad60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739694861616268*^9, 3.739694866238538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.010317219334529944`", ",", "0.`", ",", "0.`", ",", 
   "7690.563980508704`"}], "}"}]], "Output",
 CellChangeTimes->{3.739694867269013*^9, 3.7396952076885557`*^9, 
  3.739700350540049*^9, 3.7397045180545177`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"setnper", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"makeSRarc", "[", 
      RowBox[{"0.", ",", "0.", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]range", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0.7", ",", "1.3"}], "}"}]}], ",", 
         RowBox[{"nper", "\[Rule]", " ", "#"}]}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", "10", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395269835571985`*^9, 3.7395270119864187`*^9}, {
   3.739527170737778*^9, 3.739527170833679*^9}, {3.739527282482606*^9, 
   3.7395273644338756`*^9}, {3.7395273955081253`*^9, 3.739527450546903*^9}, {
   3.7395278338275948`*^9, 3.739527846595563*^9}, {3.7395279982605906`*^9, 
   3.7395280041326046`*^9}, {3.7395280499887495`*^9, 
   3.7395280522124667`*^9}, {3.7395280927260733`*^9, 3.739528127476571*^9}, {
   3.739690033719142*^9, 3.7396900535837383`*^9}, {3.7396903681456738`*^9, 
   3.739690403472633*^9}, {3.739691242840247*^9, 3.7396912957518044`*^9}, 
   3.739691683746872*^9, {3.739692082334094*^9, 3.739692083645137*^9}},
 ExpressionUUID -> "60816920-41e1-4c1b-b8bb-f297ac4cd457"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"setnper", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega]/\!\(\*SubscriptBox[\(\[Omega]\), \(res\)]\)\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", " ", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(n\), \(p\)]\)\>\""}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotLabel", "->", "\"\<\[Sigma]-Polarisation\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739527711978797*^9, 3.7395277143064184`*^9}, {
   3.739527748819461*^9, 3.7395277497145433`*^9}, {3.7395277876188073`*^9, 
   3.7395278044885707`*^9}, {3.7395278513187237`*^9, 3.7395278669008036`*^9}, 
   3.739527970438018*^9, {3.7395280100046005`*^9, 3.7395280435563335`*^9}, {
   3.739529236679341*^9, 3.739529236918087*^9}},
 ExpressionUUID -> "a14b4cba-637d-4cf9-9bfb-5db8e825bfce"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVVnk0FIoXtqQIkUJCsuRFPU16RcR1RUVEelRC0isJicpTQvRSqHjJUihL
K9l6hTS27Osw1sFMUpl9zFZR0c/vnnPPPd/57v2+P+794+r6hbidkJKQkGhd
yP/XSzKeWnYRUxC19lm304lKvPUDVQiJUwDZ5B/MRVXYPh55wDh7Ckg/oorg
aRVK7DvDNi2ZAvdLJ2tcnN7glHzCZ4f6KZAz+KtRU/wGPYR2ziHkKYjjjsw9
elCN/0obmBR8WuBpGoc5e9/inZDy1M9fp2C6rv+08Mdb9MyKTdgmR4clXYEh
lSVEdFpvqpmuSYdTbV67Lf+qwRs/Av5cZEKHG2v/PR+lVYuu9hSbWBs6kCKq
1aOGa/HCje0chQN0qNv7lGueVof1ec5+T0/QYeWdvU+GjevxFOlDiWsEHXwX
tyqH3KzHtKpOqmwSHQjM/vBj0/VIOc/6Tsqhw/uJ18eKDzQgMdVQ5UkZHbSb
lPX2v2nAPQZhm5Ia6dAsTu1xXPsO7xPbfGKG6CCSfmqbeeMdxsRuehHHpIPb
d3VtM+E7VDF5rZ/2kw5lhZ21Bt6N6KcZ1lehxIBl5846+LQ34po9NxroegwI
GtjyYGJbE+701ZdYv40BJJdIr2ePm3CkKeLe3w4MeCTOnShXbcaS1NZ7Q14M
qFN7ZTsb34w6pYcU7c8yAB5au1+abcbh5miJxqsMOBuq9IgQ3IJFnukxrhkM
UDu+9Jz6ZAue7ZLJ4BYygGM7TzQ61Iokb6sD92sZEHku1tSP1IpbrSrrPcgM
CH8waP52dxu+vPmNrTfFgHS5foZJQxtyA25+mJ9lgO6qccVKy3bU/KpYwlJk
glwCxcC5sh3nvNf4TOkyIV7S5ghrSwdOfgiYF2xlgtZFndvXyzuwkPokS9GR
CX+vsXLQJnTih9402+0+TPjpbN5SUNqJXSclJS6EMUFy21u2CqELk6JrJ+rj
mWDSVunkV96FVlteCLSymOCYWf5bwpZu1Pv0HySUMuGoo+rJ6IpuHN7RPizT
xISXZg+yzC168IoVq+XOyII/r0OmpLYHl+/UWU3gMiF127GkgZ0kvK4USaNK
soDgIEXMayehJXm1brYaC7J4dH+Z9b24mWA4fXoDCzb6/nsgLrAXTzuR3B1t
WGBPNvqMpb24p9fNz8KdBaYBnX9Yi3rxu+ibruVpFnysvGASataH5HjlfKcY
Fhy9pnRnIHIBf5uZPnOXBakK50TH6vtQxWeVRv5zFmxYdq1aRYaMNrETxlO1
LLircFB/woGM2ya7TS0HWHB8qbt1420yRjb6W+cxWRC8Nob/qp+MlM02R1b9
YkGVXamoeFU/SiiK03NXsmEwjT30xLsfNZU3/NpuzIbs2Ob5jPx+jB3NyPsE
bPii0fL4Ir0f/Wa+JeW6s6GSRR/fuXEAb7BXdAUHskGqYM1N3tkBlP6jLsQp
lg0HJzhhoa8HcObQyD87MtgQFShr1DQ7gMGCPRrWxWwo3KyoQ7MaRI1iGcv9
jWxYYg8PK2IHEbyXzVygsKFgo1ePXfMgpswF+7yYZsOxtsgXMbJDuLTG4rJY
hgMv5CXVfPYO4dzi9KP7tDgQSLrfNHRrCKeSXqhVm3JA4+ufrhOkIYx0rCg1
c+DAGa1qQujyYSzP/GreepQD6xQW18a4DSNxI7H+VDgHwnQDTKVSh5FgeMxd
6xYHRvu8injkYVRR3yszWcCBlMtyGyxVRnBOgU17U82BicKae1TXEdx9v4Zf
0McBHjW8tfP2CJq9d3TIZXCgdcnl4B+dI2iaavit5BcH+A1yBD9ZCi5axpft
VePCyz+Vc7/spKDhfrdb0iZc2JwhbVUUTUHp5YtSHey5wCwihkdUUXBfbev6
fC8ukO8Hl7oJKOiXHOiteJ4LI2+fWG0yGsWyhHZISuLC4OfgM9K+o6iU1ErT
LOBC+m7/601po+h44KBDXTUXbMlK7f4doxh/K/z2BTIXcmTlQifnRnGYYlJj
zeLCUflwohFhDKuH0j6tluKBuDCAZXpsDJ8ad69YupoHLOsT1qKUMSy7JeWp
YMoDGwmGlG/dGOr1h7ToOvLgSuqym2c4Y7he5HnK0Y8HgiBbi5WrxjFqpZpL
/CUe8ItmLu+yHUed9F8Jg3d4QJO6Mvj99DiqasStNy/igd82KsXwzjhuSVxp
UdLIg00Vr83qK8fx0waLHrNxHrQ27a4kjo3jotw48YCYB19yQqxV5sexR5BA
vKY4DbM/q/or1lDx0cOZrY6G05B0+HJerhUVlR5fPasH0zC8cclssycVS/7h
RC47NA0PI3vctcOp6OAmeWpZ6DQEfSz0zUmmYiUx204vcYHfry3a8ZSKc+pP
dB0LpkExKWu1iEjF8/7LleKJ05CW8VGzspeKRf7vtYYGp0Fd2z38yiQV32dq
H7GYngb/Yhf6LiEVLxmIgg4v4kPrt7vBUhI0pO4rG9BZzoddHcVORfI0vOsy
EcTX5kPNO1dlC1Ua9uUWWHUa86HjSnvyUy0aGpnrupSZ8WHzuqMCji4NK5Li
nz+048PJkapi6XU09MhY4n5vPx+qlSH18wLu+kA7nOPDh2TriPabBjSUjnOu
Lwrkg3700QHRWho6GmSlNEXw4f7n/zJUNWmYrKTWT7/Gh0cz1p5cFRoWG69I
UU3lw9sW5fZwWRo+keSRnHP54GZc9r34BxW/d8hmpRTzwTHHKiyZQ0XJ4K5Z
ajUfzJdc11s1RsWNV5+Jt7bxIZG9NNS+lYonj6+4mznIh6uOTHPVcipG6idO
yHzkAz+5vvtaJhUDH6RMRvH50DZ0fj4tioqTF8vzJeYX5jveq9v7UjF1Q7TR
bXkB7A7yp9+xoWLZ/O0YQw0BCEUXa2IW9n1Q42pxu6EAuErcEIXv47gyToL4
9x8CKHhl7WXRP44u6179R7AVQHDV6wD5wnEcHd2fI3YRgNkZX/m46HEMDrwb
2+gtgJ3npzHPdeH+0q0CcgIF4MM/nRO0dhw91NS84y4KQDuo3prBHcPEZ9wT
YdcFEJD6G2XVmzFsVM66GZwmgHYFr/+k48YwV+cn5VyBAP54VfisZM8Y/l71
xeNauQBUonuN1iqO4eXBcwr5dQJ47vHc6ihpFJ1SAqQ7ugVw5s/i2HPJo/jW
oM9ubkwAxbkWxiecR1H0rYhiyVrw+6dQykpuFKdypDqvzQiAo0wIXtRIwVna
J92xxUJI4UX7NV+iIKUmgG6pKgThB/PQRAIFTaNKDZ7pC2Hxy7U1Pp9G8OLj
sUkdUyF81ls+75w+gpVLNTcU2AihnFQR/deuEfQl5y02dRGC5Tt5zVLxMK67
WBTd5S2EuTep1pZ5w9g/cik7LEgIKpsOTao5DeN6E88Ag0ghqJoWJLp+GcK2
NVm8DwlCeHQywu5b9hCq1aVvLcoUgmZoZ/7qnUP4e2bx7itPhYAO59520Aex
s3i3ybGKhX65Uf1VSYPo8M+A0LlZCBzGKe6K3wcx17Dzwa4BIRRsKcsjdQ/g
oY2Flns/CqHQYq+1d/AAPq77Rj4iFELMvisEkvwAHi7AMxGSIrizJMfV/Hk/
Sm3XVs9TFsGKHUrUIvt+/Bn/2/CgjgjmCJYXrD6QMdZapkptkwi+VimtlLxM
xoEGv8bj1iKQ1z68VF6NjEeMxVI1ziK4PdI/E1Lah437LlzR8xbBxGGJDrs9
fQjtz+3vBonA9bc3RQ8mevHhnJeXymUR1H65KZsa0YtpOn492Uki0AykXTFT
7kWO+d3HW7JEYERPb93pQsL+TUPsoUIR+CcSXXqjelC5W6UovloEF4tXttq8
6Eb3dzu4th0i2HV1OrFhdOG/KdtHlB9d0AsGjRi5LtxsslfvA1MEbhUXJZ6Y
d2J+9w6jxlkRWJuuI/md6sCr+tvGyuXEIL1BW3oysx3Xdu+3LdYQw/mA5BmX
jjYkhb889dpIDEPxxJGRn60YNBl3qGO7GDqWxt14RmjFWu4XTY6DGDwsKtJZ
J1rwS+aumtWeYkju9TbuyG7G9YpVuzxOi6F8axM/dLAJyflp7x5cEoOZeoy8
gnIT+jBMLcWJYhDeOznf4NSIpc/Y1R5ZYuA+T8ohJr3DNwJ9p5YiMSwy2/ZD
v7sBlTX3zNoSxeAd9sVdZ3kDXuv6f4jhxvGuxYMH6/F/9o9Vdw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
gju0H2JY8/9DBAnMsa3duZH4PzZuYAw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BC7nM2Z2aNTj/wEVtS3P
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
CcvF1+Xj/wGaOihn
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
F9V7+P9pyzz/
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+4fX2/D/ZKAsuQ==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
VcFFBw==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
JYTO5p9S2pGS+D90+yfG
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.6928399920363737, 0}, 
     PlotRange -> {{0.7021809152358138, 1.299999999999984}, {
       0, 5.031367749029374*^10}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\[Omega]/\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(res\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(dU\\), \
\\(d\[CapitalOmega]d\[Omega]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0.6928399920363737, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Sigma]-Polarisation\"", TraditionalForm], 
     PlotRange -> {{0.7021809152358138, 1.299999999999984}, {
       0, 5.031367749029374*^10}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(p\\)]\\)\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(p\\)]\\)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.739527799134042*^9, 3.7395278050020585`*^9}, {
   3.7395278560219307`*^9, 3.7395278672114854`*^9}, {3.739528012585966*^9, 
   3.7395280551155005`*^9}, 3.739528131744207*^9, 3.7395293134439*^9, 
   3.739689969677874*^9, {3.739690046880978*^9, 3.739690055978593*^9}, {
   3.739690385892376*^9, 3.739690409502818*^9}, {3.739691257659461*^9, 
   3.7396913044645767`*^9}, 3.739691686813092*^9, 3.739692087006959*^9, 
   3.7396931131176767`*^9, 3.73969520883461*^9, 3.739700354585679*^9, 
   3.739704520422283*^9},
 ExpressionUUID -> "448a2d68-fdbf-4e82-8c2e-8b46aa8bdf61"]
}, Open  ]],

Cell[TextData[{
 "Das Spektrum hat den erwarteten sinc-f\[ODoubleDot]rmigen Verlauf, ab ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "p"], "\[TildeEqual]", "6"}], TraditionalForm]]],
 " sieht man ihn deutlich. Dieser Verlauf entsteht durch Interferenz der \
aufgrund der Undulatorbewegung in leicht unterschiedliche Richtungen \
emittierten Strahlung. "
}], "Text",
 CellChangeTimes->{{3.739528267367648*^9, 3.7395283074756603`*^9}, {
  3.739691531168178*^9, 3.739691557390675*^9}, {3.739691596665843*^9, 
  3.739691608542947*^9}, {3.739692096092228*^9, 3.739692128301695*^9}, {
  3.739692244485526*^9, 3.7396923546304293`*^9}},
 ExpressionUUID -> "6746de58-fc54-4529-98d8-6234dc7840e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setkpar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"makeSRarc", "[", 
      RowBox[{"0.", ",", "0.", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]range", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"0.00000001", ",", "20"}], "}"}]}], ",", 
         RowBox[{"\[Omega]points", "\[Rule]", " ", "4000"}], ",", 
         RowBox[{"kpar", "\[Rule]", " ", "#"}]}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "1", ",", "5"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739528909348771*^9, 3.7395290097691746`*^9}, {
   3.739529054373596*^9, 3.7395291955253787`*^9}, {3.7396904218976707`*^9, 
   3.7396904279133368`*^9}, {3.73969049836838*^9, 3.739690555434092*^9}, {
   3.739704288448388*^9, 3.739704295582159*^9}, 3.739704384466001*^9, {
   3.739704839293631*^9, 3.7397048394947987`*^9}},
 ExpressionUUID -> "7802d7f7-66b3-4362-b0b8-578006db514e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"setkpar", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega]/\!\(\*SubscriptBox[\(\[Omega]\), \(res\)]\)\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1", ",", "5"}], "}"}], ",", " ", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<K\>\""}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotLabel", "->", "\"\<\[Sigma]-Polarisation\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739527711978797*^9, 3.7395277143064184`*^9}, {
   3.739527748819461*^9, 3.7395277497145433`*^9}, {3.7395277876188073`*^9, 
   3.7395278044885707`*^9}, {3.7395278513187237`*^9, 3.7395278669008036`*^9}, 
   3.739527970438018*^9, {3.7395280100046005`*^9, 3.7395280435563335`*^9}, {
   3.739529023944686*^9, 3.7395290257029*^9}, {3.7395291137369432`*^9, 
   3.7395291284858847`*^9}, {3.7395292334156823`*^9, 3.739529233653422*^9}},
 ExpressionUUID -> "e7e9c75a-95bb-4470-8730-48988acec7f0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Win4yb7iJ74fp6bs1uBstIZA/fo7PBMpz0kbvgZPchVH9Qv/3R8uU3fMCtfg
3TUyRYrTXHi92YFvrXMNfHMNRV90seLbgqU6IWtr0LXKLpE0oIzfX/1v0+DM
OtTRhL1erzXG9WdzWDQ51yGT52vu/PVPmLaFnMH64TpESen/VbD8iv3pLjFV
6q9DWt8aZ2SXE7YfOarJ7bAOV2J2SMe7XXBuLjlVbfQ6JPIJ82yyuGAHoWpz
p/J1SNndvfpqwgE/+sxWbDy4DhvOMyXWbZ+xh6U2k93+OqzdybrQNWmBg1UJ
u4toN+DXzOaJpQQD/PdUEyOz4AaYc0jE25DK46fBSzdSlTaAtrXclfsxNQ5x
aBbWs9iAZy9615QKrmFuhVsOUv4b0LE7Eucq/hTLDNCIP83egKo3rtef33qF
CVpn0tzbNoCBhV2Z0/Ud7qSWO7q0ugG8bBSMiyMf8XX+e3afKDfhpWFMS1C2
LT7sY1C7w7MJJrP08y6nP+N33BatFxU24YuQrpv1lDVefS7KfM10E34Q7Ci2
ub3H2VOVdnq+m3C4uEfQ7WaMBYX8bzdlbsJvTfoL3lZa+JAk0lSnbRMWWGTz
t3okMVXWpU9s65tA+3r1cT/zIRKZTPOgpt4CFwPFTdjl/Kefb05w822B2O7A
ZYI6BSxy2Ff+UWkLOjekezdydXAOxwPNNcstsFLW7vA+aYLZZDQIgkO2wDHK
/9PO4DvM1Koy/F/xFpjkfjkhc/w9rj3VImo8+A9Peg7WRy0wqkjXjiTcBoPW
9bsODKa4wk3EkZB1G26ckyvVKn2F7bSpZr0kt8HH44VfNKjhs1TXm2UNtkGt
WTrAh1Qc22Q3fxBx24bPhd8nTgQRYnrWVA611G1Yotxurii5gsc//2ZMatmG
KRG1iBYWWeya8j782sY23DWNvX9EVAuLV1nN9tLswPF6PvXBqVf4WvC4ZPHd
HZBzHLBPnTbGT/jZ1hu1dmBeUW/02o4J9tc8KXjOYQdGpJkuX1Q2xjtk1cou
iTuw9XMuk/a0Ae7v6wjkbtyB6s0DqfVcdVxRzCZ8Ym0HrM1/RGmNSuEO8QOn
izS7YJuhZqVnzojpJQ4rVUR2QcqgyUnyLBl+KXPzTsPLXcAxVQ03nojillur
LO+cdwH6KnsGjilhic+nW2RTd6F0X5x/h1YbSzOkuKi370Lanup+Du0rPJ6t
+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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QO5IxizlGM1Adiw/cg+yXHSdAJeUGbz6ev0JJXJV95EmaRMzmI9U+DR/ENVf
DTmGAX5mMLpg3zCMXPpf3tqjg2bw44+t5p2D+PvennI7XDCDjR++CeeR6bWm
RqnbzcBVuiv04EF8vp8P/PzGDJ7crWALQL4ewkH5ZcUMCs/Lx5ofxN+v2D3D
yWEOjw5X5sohR+1xNz2gag4eLDKWzMiXzsztX7Y3B4r4pZ5fmWi/EPYg8EK0
OfTdFvz6Cvlj+pmzcSfMoTL344N7yN+XHOXjb5mDt7WzTUUm/v+lRr6XnprD
d5aq/EzkXa/VyD/fzOFX7rcIH2TWds/jiUwWkDRrvQPIczxVmyJyFtDB8slQ
FNnCzuPvupUFDIb2ylAh8zC4t26FW4DsNG33dAa6vs7TFIWjFhDz9eHWA+TJ
4xppRbUWkOBDnK1CfvE+eJX1qQU0X1iKz0XWPFegMLBoAdIhKTf8kU2MmT1v
EC2hYKYxzwg5aW6k/Z6iJXRcqKIWRu48uHh8xc4Sfvo4Sm+nkzCbpI+svrGW
8Myv58d7ZCJvYv5aqSX40393bUM+xvhaqvuOJSxRvvI5izx5P1P7zmtLCDOM
o49Hfv2FvPpmzRIyn3XY2SGv75r/J8tvBYcWqtXlkDXv8B6qM7CCP1sirbTI
TF4lQ16+VuCWITj6OQ3txw/NDBjmWkHrSsGR+8iPza+22tVYQe2G8fuzyIb/
mt+i2h6uCOg9jEE+e9ArnvK7FQz9sDWxQjZ6ZtD/H4s1CH/39hRDrkm240xR
twbVDHOazVQSxiuyUJXhbg3EL5+Nx5DdtztbmjKsodSMmrMO+bXzxxN8ldZw
52h2ci7ujbvxdx5ZQ62fTLgnsv8brhuHvlqDteHjb8rIJwMlErKY98KkvtQ/
WuTPylF8jep7oUGbcO5DCoq//m8+c3ruhVdndLoakR9p32Kpz9oLuQEHoguQ
OU6XfU+t3gsSusE3PJFXkv7rTh3aC29V34YrIkcdNxi+9XMvMP5Ob6JA3mpS
9ePisYG7eTsHx5LRfjm1pafZ0AbafFhHapA7bntqFATZQJrXvsoUZMMlPvoT
x2yg+kbuH0tkRn6nnKFmGyD1yQ/wIff+fvjd8L0NnN+/wv0tCcWXi+dOz1Pa
gnRcymw78nNZ997HsrZwX9BG8QjyWbmNrklHW+Cpof3pjqylNT6ukG4LV33V
5aWQz6Xf8WyusgX/e34f/ySi81m3nYx5agtf+bho+5Bt61IHglZsYd/XscoT
yJPzP61PCdqBUILAbU9ka6HCiHVzO7j1NVxJEnl0lJBQFmsH/O7qgj8TUL2Z
09EcU2EH4SWLaR3IOup6qTmP7IBGmtIkH9mPdJl9eMkOtPwmk22R738LfunE
Zw9HNb5ycCN3LWXRcJjaw3G5PN7JeFR/CJhukWLs4ZU/Y14Nstj3LEbTCnuw
zXnlGIW8NBd6sLXfHi5e0slTQ97Svn4z4Jc9vDUu4FqPw9+HIPezhtkBYvbT
0nchf+zcbm+TcICPfLuuOcgzOkMfvuo5gDB9C4UZ8p9880O6jg5A+8GPlgF5
yC9g5HqoA5zIMAwYiiVhxmoWfzSyHOD9n0yu47H43zN48E6dcQDG/baCtshc
Yepht+oc4MvL8RQSsmhVI6nsgQMshRuJD8egelpwRv3qOwdYk74meBx5RYGP
7ulPB4iYEwu2Rja+OXGbk8ERQqyertEjh5r/8coSdgSthw1jj6JRfp710WXQ
dgS10PHVbGS/Ke+4ZjtHGF238jVAPhIdqXowxBFuPKYlrB0gYZzTcC0syxFa
mmjWG5GZiS+3Es85ggulvkQEcvNRp4CqBkdwjSs7IYYcK6xF82vAEYhs1Grv
o1D+o1Fg9f/kCEIG/iylyDcw8Zbfa45ALjopboH8kcZa6BqrE0w2B0dtRaLx
WyUdzJB1gr+XW+cbkelPC+zGGzuBjfje00HI7NmBY8f3O4GowvcoHmTaeVbZ
wUQncEr2iB+MQPf/7LSyTLETFN62upqO/DX8InftdSd4bJCwJheBv59UgNm+
zwmc7XLj34ejenPMwpzngxO4VguyHkF+gp1ZpvrrBMXX54a1kMWDOvTYWZxB
3CDx5kwYqhcetXqYyTpD4gOvypPIGab96RdNnCFwSb5RD3k0KXKUx8cZgt+E
vpkNRfF+M7r0XqozuHaeZC1GDpt5/zXjtDOc4Bfw0grF3/eySwpucIbVlKy7
H0PQfI+JVUkYdAapOFHBfOTWKsb8a7POoF8UdkIWeYpnUX931xncZBppRoJJ
2KljGccO7nEBjcO22XHIpwPDrolqu4BmSfE2B/J9lmu9i04uQDnXntYaRMIu
RsYyT0S7AO0V5t+uyA0iex/9PuoCW+GPAv8GkjAGRioelesuYOZFeHYauezU
Tf0zD10gZIwgo4r8TexKqPBnF/DK+JI4HEDC0jKOvHi55QJJ0i23w5BzhTxv
1fG5gtSjgtdUyJEtlqr1Wq6Qoxs0c8Ef7ZfiPp594+wKa0EOb9SR/Q7Os8rE
ucLBX8Z1Q36ovvLIfXe12BXa3BV8/ZAbTbikTW+5wvfKlaUVX/z7GZ1VWYZc
If14hnsR8rdjhirUC67QYHT+LD8y96SwlwidG2zZ8V2r80Htd8/8CJFwgwNX
HhXoI3sJFAiOG7vBDWN31SFvEvbqopRknL8baGQU1Lgj8xTvGGpmu4Fn0b/J
GS8SdpVl6qr4FTdo+8/jfTRyd8+vowbdbtD/UufM+n4S9kymWj37oxuULcgx
5iCLKHe+WdpyA3bnVk0G5PhDdreLBNzBUdCVu3gfCVvc7l23NXCHT7cPXmdH
fqH5dIns5Q6JP8/PnfVE8X0weXh/pjt8/kg3zIOcMiv8svqiOxD7BPed9yBh
qbVJWvxd7nDwvewRHg/8fWDpep0f3cEl9IDbWXeUH90L+I/tuMO1DJFuNuS+
KCPOQmEPeDkR23ncDcXr+LrgRiMPCKDMtaVDzpXeY0sf4AHLb6MOZLmi/Lap
y3g8zwPo+oH3rwsJO5HH8I5c4wGesTtWEchWSx83hR97wMnGqzsfnUlYYFZY
k/JXDzhxkEfNAdmHokE3muAJZ5qNP/c6of42Ib7+oOgJX9k3aVSQGU7pPkp1
8IS6PaSLlxxJGKZgZmmW4An/fda9yogc1ldWhZ3zBOENLdZEB1Q/Lf7hjG73
hKp9DbMT9iTszs3kqaEJT2AyIfObIj+dLLP2oNgHzgxpt27akbBfT+VOc0vs
A27S3DkSst9Jnx1ay32QVbr1KsaWhEVUdT+XitoH1y4qBrywIWG3PNT3ppXs
A52Rd7rKyOs+VK3bLftg2N3N/fheVP8aPHdsebcPFu8vts5bo/ri1YWQSzv7
QHfwtQOGjM0+0WkX3w+dPibi5VYkLOQYNzOD1X7Y9XeTWbZE9dVQtcLR6P2g
fFJ8vwnyGN3KezizH0Ltm++etSBhv0/N+cp27IenDVuaX8zR/kC5k8ri8354
w7E8poFsc1qAUE7nBYeNw47lmKH91i9Sn7CiF0SL6Lo/M0X7x5x/UR+cvWDg
pIQaF/JRukb3Z+leUOD/idvLhIT9c/cb+n3VC07Ss1JcNUb3+/0qs/2gFzy8
ZLcwg6F8HRAbPfXTC26VSwxJIPcRFTVqeb0hdYhYGWhEwt4cvFJ708gb+JgS
gioBxWuOVYHPYd7Qa9LC9oFMws4cHnhjW+oND/cIVXEg6yQxS/xp94bxX0ss
1oao/vqr7vhi2huYrri6Zhmgel6Mrm6O4AMXnOKiGvXR/r2hK0td0wceJDna
f9ZD9WP8Nl+Hjw9MHPi7RkLuoBgbSivygbcHbfx0dVF9onPvU3yzD1Be1cwN
0EH199vi6zUTPuDhcsj9iDYJc2Gri2On9wX+mPl39Vqo3hQeOtGu6gt5VHuo
X2iSsJIJHpsLXr7gIXT32bIGCdtxV9q+V+gLHddNVEjI4dHcv1nu+EK/nqG0
jDoJa/G3zPxv0heezjHVGamhfKz7JlmX1g9ucFC3uqmi9dhpawN7/GDRLIIc
oYL2X73LoYGqfgAUCUYZysjq+/7UWPjB6GHDliNK6Po6Qbz0Pn7wrn781FlF
NB7JQpSFiX7w8Y7B68sKKD+Fjo1LHvODGT7XxBp5ElZZS/945qofuLitht2U
Q/WeffpGb5sfDHZM19XKkjCSrGRF13M/EDAc1LwpQ8IOCBu+evfFD+Ixs91q
aRL2MkttjGvHD+oiJikuS6H9t3XTgzguf6A9wKB+RpKEeRRfHfmh4A9jQ2LF
hRJo/9MkLX7U1B9u3k5lShUnYctD1d/NvfzB/r5RZbAYyj8/77pLJPrDTsdF
CwdREvapRLdU7Lg/1JSWr2uLoPXTZzaAVfuD+KRSnYAwinflahK5nf4Q/53s
viNIwoJyz76deeUPwn7nViYESNh/xcZsoT/8QZH2e3rbHpTvXtpsEegCIO78
56kSflRPtdA9GRUKgMGrOyIhfKj/7an+u68dAAYsHco6vOh699k6BxwCoFkh
lpaeh4RJJVoYr4QHAKddaPkoFwnrr1kNMs0LgO5zI9MVnGh+nLjjfO9iAFg/
6nrry4HuZ8SZbHs3AKaWNOJF2UlY+oslF7oXASDlLHDtEysJo+SafDz9NQBa
SaaRFSwovp/tejxNHQjGC4Ftjswo3glEFdAJBUIrYU8+LQmt32qCmp1OIPCN
LT9qJaD43kS52+4UCEHZ9nEBTCi/NK4JWh8IhF8MxYcIjCTsvf2H3p3CQHg6
MDfXSI/287OTfG+rAuGYVUqFEx0Js+9L2/+mKxC8KKxO/6RB+6kLYW0bbwPB
g85i4Cg1Wu+z9YHGK4Fwfs5YVpQK3a/KqZJGliDYsfjTdIcC5cOT1fGm8kGw
1vzH1XiXiL3802G4Yx4Edx0fMQ1vEzHCqd+SkwFB8PXKYL/zFhHbhzX6zmYF
wYSqTeabf0Ss4lOlMNuFIIgJTxV33SBi03faK4LuBUGUgk/j8zUixjOqQ/dp
LAh4Kn/ymK8Ssd2smrLsn0Gw+Z3Wvm2FiL078yLfihQMuZNu1lJ/iFjhwitq
PblguNWUtXPyFxEzuc2z18kiGIzu//P9u4zaz1qWngoKhhlZuUC3JSKW1BxI
2swJBv67tlvN34nYxuuG1WNXgiHLsVCYsEjEFhi78s26giF78V2vz1ci9vTA
gWXpD8EwzCL7qn6eiNkuL0arbwTD71s6tutzRKzvTpN+GE8IlLbfEibPEjHj
3ILiAc0QoPnMAIemidgJpcxKO5cQWLdvvHz/MxHjpdmopUgIgRKYU/0zScT4
1BrmJ0pDwPjJk0XJj0RsXvtSyUxjCIwk7+tx/kDEqJ14PnO+CAFt6tQrme+I
WOd8F2vccgjUET5mVY4TMfeNXO915lCgrBdz6HlNxJaKb1LWKYVCv3oP7bsx
ItYuPaBzxC4UiO9oT/14ScQk5XrIp6NDIXSf1PzWcyK232XYfrA4FMpuKqzR
jRCxdMXMG/K3Q8G9kqKF8IyIeaXUFnQ8DwWPi8EshCEixnj1qETyz1CIlvr3
j+YJEWvT/e+BD1sY3G3RDtvoJ2IRQc8vJaqFwSv5eMuFh0TMxwZW7jmHgXjl
+PGXfUSsvjyVRjYpDDJ/x0i19hCxnS9upCfnwqA/R4DudBcR+0+baHe2LQzK
GssEIu8TMe9oUbrS9+j47cR9hu1EbOhRctL9rTD4RSncyHiPiKWZmE5wCoeD
mt570osWIlaux59xCQuHyYy+wJJm1D/3p065BoUDwebxVetGIvaJ7WOQYWE4
qG+23NupJ2L0RjfUXGuRo+XO3qojYldSdcmXhsPh8o1Lsi43iVj8halBrl/h
4JK2L+jvNSL2pcmGt4czArZIuRol1Wg+ROVGletEgMVZpiMSVURs/MoXxhqv
CNCZ6HZovkLEcvp1NaazI0B+wjBd9xIRo0wrV3asiQCJ1H9/2iuImNBGttHv
wQgoXNC7pX6eiNncGKzrX4oAnnze0mtniRhHcd3dpxyRUGR8qIT9NBHTf9d1
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Xj4V/UCq8xPcFT+P+ydRwtNq+hP0HTuDvDkqFV+6pRwa+44ja26qFZ9iLAd1
bwZkrcu2Gx+ulAP/ZXq8fuwtvqJC5eBUuQe5yLrtA51qOSQ+3IHXO/qa/h/r
cmgrpkIeiB+mpfQvh7iTZMhvhGnyzyeXQ5nl7yMktxnsDDKrLAeHsiXkOJmg
74M9/9VXZpBPb3/zUW+pHFyPjiOPJB+6z7irAvSvDiNHNQVXTDFXwOHbfchG
lVlKA1AB29i/IdtQiQouyVZAPH0r8m47r9TzRhVwY7IB+eGv9mIXj/+uT6vC
zzv1JY4irgIUlEuR6d8qBcaUVEAIRT7yDtvccvVvFdDnm4G8IcwlKzxfAWW7
k5End0W/ktlRCdE2cci6GZ1OzsyVwNQRjhxhvO9F591K0GIMQk5i/xwn/LQS
Hoj7IDe2VLL9Mv2vbuKOnO+7yvf+TSXkOToiZ5qkMnskVUKVnQ3yH1+TP37V
/12vaYrc6Xjwz6fBSuDi0kOmzUuXpduohKi/6sh/v7/jeX2wChiTFZDXOWyX
z1+pAhoeWeQWCq6IOdEqmKgTQy6Y2GnSo10FV27yIw8Ian2Ycq2CoIB7yMPx
u01Ox1ZBe/cN5O1bdtE4lVXB4Z3seD1kssJoeqvAkIUVOaUvQiNnrQr62E4g
17nnvHM/UA0hjIeRJdRYjF04qkFnZQ/e70X944li1aBcQIO8GCPet6RbDR/V
yfD7nhkc0PKohgN/Vg+j/fplrkj1oRqOWM0if1Ev9W+oroahgVFksg/J2fnD
1aBxsR+5L8L+dzN5DZSqdyCH+zaF7zleAybOTchhr3S/WUMNpHlUIitkeQ7S
PqsBc8tC5D99sQtNNjWwLJyBfK7txcOc0BqQp/mA3P2Z/XBdQQ1cTopAVv/J
EkP1vQZ+s7/Fv2dz6Kj+Wg28ivREHkrcWU1+qBY0Fh2QYzIVOj5x1gI9myWy
hn6he7JsLXwT0Ee+U3L0WIVFLegLqyFfXu36siW4Fm5ceYqc++xNl0l+Lchs
iiEnvOa03P29Fmw+8uL3m2eY/LZeCyN3byMzXu/R/3ykDi7lXkbWLdK6P3e7
DixpzyCf2Lkr+t6zOmAVZEDeL67RVGpXB+xae5BFa7UodKLq4JUmFbLydUVH
3oo62Crw+xDKK81JT9GROtixcxZZIYxa0ZW6HoLThpGHaSi4ps/Ww+aVLuT3
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
/wZRXxGVWoGt0V/5Sd6zPMVFZrICUj7ufCSX92y36vVdgQNXbvGgfGlQPjGc
vgKb5iP30fUbDwzpWlYgUsjtLsm3volFGc6uwEwE8x2UP0+tp1ZpV0FbofgW
yZzeVD5JF1fhlqXwDZRHsy41bqKrwNPdcY3kT0M/Gv30V4Hf+PEVkpXPSPTW
ea9CFFv7ZZSvd1Wunk9bhaUV/oskD8zO7SlsXgWj0tzzJD+Mu5xmNvdfXf8o
K5p/kwnCCnvXQGjZ9gyax6PsLKYcawDQcQrlf9mmbZ7kGpheO3MCnY9jAV5n
zdaAvcbgGMqnd58DagPXYKM3gwHlw82+9oD8NYhQmzpEcv93IS+f7jVw42ei
R/Mze/134cYa+JgI7id5qvWYMh3TOni36O0hef6l0L+w++uQLuC+C33PFy16
abV1OFUftp3kmG0Fv7herYPrzQ9bSa6/3PX/OLrveKy+MADgKKvsrcySLXuP
x5URRcb7vihk771X2RllliQtRUKU0UBEQygNioaULSlEIqPfOb8/v59z33vP
Pec5z3Pu++G+jaSqVT2X1Oqt/+f/iAcPL/Su6tGdvk6NnXDvrhn3wqreW4vi
zXbkuo3Qc21cf/V6r6SsYZ/4s/L9nMZfvZ2hHivYy9E3M8oc/upRV+v9xs5Z
Na8fSfyrl6rM+gu7m3PtpmX5Xz2HpYGf2AK08q0L3X/1Jt4Wfse+vvexxNOf
f/VePjgw/b/Pzik+51zT0zu9Mo6d5XtAdKvmmt4WuDCC3Z7Uqx3stKYXWaE2
jK078uIZa+qaXkD9s4/Y1UDNNFa5pnfX+NAgdlhWyqGZV2t6/qa9/dgMfi8/
7Fle04u5QrzGbu1t+1UosK43o3jzBXaG95lRrX3resyjTN3Yowa/Frh81/V+
F7o9xbbU++Ijlr+u91Dxdgf2jcudp33ur+vNFv9qxWYqjm4a/7KuZ18v3Yxd
81Z6z1n6Db27TnZ3sQ2oYkSPy2/o1SfF1WOb2nusXrBF7Zuna7HptexXfiVs
6FXdL63C1qnY45t4Y0PvbH7ZdeyG4S0lRm829Oz8LlzFjp4sHDT4u6FHlsi8
hD0vMOUfvXtT71+F73nsi93+NyYPburZ9Oqf/X8+auneZ0du6gVGby/AflXy
zzTwyqbeicye7P/vj4rFPKNnU2/i67FMbKlEksLQ0qaeiNOeNGzxDNd9vsL/
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
UPB/32/L+A==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20.000000000001425`}, {0, 5.0290577133218216`*^10}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"\[Omega]/\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(res\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(dU\\), \
\\(d\[CapitalOmega]d\[Omega]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Sigma]-Polarisation\"", TraditionalForm], 
     PlotRange -> {{0, 20.000000000001425`}, {0, 5.0290577133218216`*^10}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.2`", "1", "5"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"K\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"K\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.739529020627082*^9, 3.739529026403186*^9}, 
   3.7395290569759493`*^9, {3.7395290967682934`*^9, 3.7395291970967846`*^9}, 
   3.739529315922367*^9, 3.739689970221489*^9, {3.7396905507180233`*^9, 
   3.739690561610136*^9}, 3.739693114516541*^9, 3.739695210238578*^9, 
   3.739700357412846*^9, 3.7397045230479116`*^9, 3.739704849903926*^9},
 ExpressionUUID -> "e91b27ed-a60b-4e4d-8134-b7151706164f"]
}, Open  ]],

Cell["\<\
F\[UDoubleDot]r gro\[SZ]e K wird die Ablenkung so gro\[SZ], dass keine \
Interferenz mehr auftritt, wodurch die h\[ODoubleDot]heren harmonischen nicht \
unterdr\[UDoubleDot]ckt werden. Der Undulator wird nun als Wiggler bezeichnet.\
\>", "Text",
 CellChangeTimes->{{3.739692481326859*^9, 3.739692491878974*^9}, {
  3.739692522847158*^9, 3.739692591855611*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "30"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "29"}], ",", 
          RowBox[{"kpar", "\[Rule]", " ", "k"}], ",", " ", 
          RowBox[{"logInterval", "\[Rule]", "False"}]}], "}"}]}], "]"}], "[", 
      
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Omega]/\!\(\*SubscriptBox[\(\[Omega]\), \(res\)]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[\(dU\), \
\(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "k", "}"}], ",", " ", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<K\>\""}]}], "]"}]}], ",", " ", 
     
     RowBox[{"PlotLabel", "->", "\"\<\[Sigma]-Polarisation\>\""}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "1000"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7395296731298275`*^9, 3.739529708343071*^9}, {
   3.7395297587424917`*^9, 3.7395297831932974`*^9}, {3.7395298181066837`*^9, 
   3.739529830022812*^9}, {3.7395298935137696`*^9, 3.7395299117840047`*^9}, {
   3.739530164585287*^9, 3.73953022152995*^9}, {3.739692777484586*^9, 
   3.739692786019655*^9}, {3.739693376969212*^9, 3.739693389945652*^9}, 
   3.73969372855516*^9, {3.739693758626533*^9, 3.739693795425392*^9}, {
   3.739693913547058*^9, 3.7396939246430817`*^9}, {3.7396940393639297`*^9, 
   3.739694101255085*^9}, {3.739694308721321*^9, 3.739694313222857*^9}, {
   3.7396943958480797`*^9, 3.739694406901806*^9}, {3.7396948082091722`*^9, 
   3.7396948284290543`*^9}, {3.7396949945147448`*^9, 
   3.7396950163837957`*^9}, {3.7396964435069513`*^9, 3.739696447671721*^9}, 
   3.7396964961372623`*^9, {3.739700526701893*^9, 3.7397005566029453`*^9}},
 ExpressionUUID -> "3ce92709-1a26-4b16-8e8e-e515d2677951"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 3.81, $CellContext`\[Theta]$$ = 
    0.0013163273218541234`, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 1000] Pi}, {
      Hold[$CellContext`k$$], 0, 5}}, Typeset`size$$ = {830., {227., 234.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$15033$$ = 0, $CellContext`k$15038$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$15033$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$15038$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Part[
         $CellContext`makeSRarc[$CellContext`\[Theta]$$, 
          0., {$CellContext`\[Omega]range -> {1, 
            30}, $CellContext`\[Omega]points -> 
           29, $CellContext`kpar -> $CellContext`k$$, \
$CellContext`logInterval -> False}], All, {1, 4}], PlotRange -> {All, All}, 
        ImageSize -> 600, 
        AxesLabel -> {
         "\[Omega]/\!\(\*SubscriptBox[\(\[Omega]\), \(res\)]\)", 
          "\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)"}, 
        PlotLegends -> LineLegend[{$CellContext`k$$}, LegendLabel -> "K"], 
        PlotLabel -> "\[Sigma]-Polarisation"], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 1000] 
         Pi}, {$CellContext`k$$, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{887., {305., 313.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.739529787406001*^9, {3.7395298186421347`*^9, 3.7395298307464995`*^9}, {
   3.7395298987830753`*^9, 3.7395299156575794`*^9}, {3.739530172454157*^9, 
   3.73953022364289*^9}, 3.739689970268724*^9, 3.739692787026787*^9, 
   3.739693114560028*^9, {3.739693379090371*^9, 3.739693391159152*^9}, 
   3.739693729793441*^9, 3.739693925956976*^9, 3.739694048126855*^9, {
   3.739694090585444*^9, 3.739694102117969*^9}, 3.7396943152574177`*^9, 
   3.7396944139663277`*^9, 3.739694537086389*^9, {3.7396947973908987`*^9, 
   3.7396948466762133`*^9}, 3.739694941451972*^9, 3.739695122344844*^9, 
   3.739695210379046*^9, 3.73969644861901*^9, 3.739696497316546*^9, 
   3.739700357672036*^9, {3.739700528203401*^9, 3.739700557677*^9}, 
   3.7397045232076073`*^9},
 ExpressionUUID -> "5713220a-fd85-4661-8fe7-4f9d823d9b52"]
}, Open  ]],

Cell["\<\
Nur die ungeradzahligen harmonischen haben eine Nennenswerte Intensit\
\[ADoubleDot]t. Je gr\[ODoubleDot]\[SZ]er K ist, desto h\[ODoubleDot]here \
harmonische werden angeregt. Das Maximum liegt im Wiggler nicht mehr in der \
ersten harmonischen (oder dritten? Aus irgendwelchen Gr\[UDoubleDot]nden f\
\[ADoubleDot]ngt der erst bei drei an zu Plotten, wir sehen nicht warum). \
\>", "Text",
 CellChangeTimes->{{3.7396955171051188`*^9, 3.7396955594730387`*^9}, {
  3.7396957237943993`*^9, 3.73969579612311*^9}, {3.739695828771406*^9, 
  3.7396958595629597`*^9}, {3.739695889899755*^9, 3.739695912060134*^9}, {
  3.739696010364807*^9, 3.739696012187399*^9}, {3.7396961589812326`*^9, 
  3.7396961888987007`*^9}, {3.739696432526812*^9, 3.7396964352383223`*^9}, {
  3.7397052295657578`*^9, 3.7397053528820677`*^9}}],

Cell["\<\
Die Intensit\[ADoubleDot]t nimmt schon bei kleinen Winkelabweichungen rapide \
ab.\
\>", "Text",
 CellChangeTimes->{{3.739696691887542*^9, 3.739696725616395*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"irel", "[", 
   RowBox[{"n_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"n", "-", "1"}], "2"], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["k", "2"], " ", "n"}], 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["k", "2"], "2"], "+", "1"}], ")"}]}]]}], "]"}], 
      "-", 
      RowBox[{"BesselJ", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"n", "+", "1"}], "2"], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["k", "2"], " ", "n"}], 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["k", "2"], "2"], "+", "1"}], ")"}]}]]}], "]"}]}], 
     ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.739698178503504*^9, 3.739698297923216*^9}, {
  3.739698354147786*^9, 3.739698358674233*^9}, {3.7397009716781178`*^9, 
  3.739701025291753*^9}, {3.739701080957081*^9, 3.739701116900772*^9}, {
  3.7397011790221853`*^9, 3.739701182275444*^9}}],

Cell["\<\
Vergleiche die Intensi\[ADoubleDot]teten zwischen der 3. und 1. harmonischen\
\>", "Text",
 CellChangeTimes->{{3.739698407678546*^9, 3.7396984241859703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSRarc", "[", 
    RowBox[{"0.", ",", "0.", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]range", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "30"}], "}"}]}], ",", 
       RowBox[{"\[Omega]points", "\[Rule]", "31"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"3", ",", "4"}], "]"}], "]"}], "/", 
  RowBox[{
   RowBox[{"makeSRarc", "[", 
    RowBox[{"0.", ",", "0.", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]range", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "30"}], "}"}]}], ",", 
       RowBox[{"\[Omega]points", "\[Rule]", "31"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7396972631958103`*^9, 3.739697303300521*^9}, {
  3.739698591487711*^9, 3.739698609854307*^9}, {3.7397005827638273`*^9, 
  3.7397006054896517`*^9}, {3.739700667830986*^9, 3.739700669426231*^9}}],

Cell[BoxData["0.008690662568837484`"], "Output",
 CellChangeTimes->{{3.739697293449884*^9, 3.7396973044060173`*^9}, {
   3.739698595649314*^9, 3.739698610777555*^9}, 3.73970035851162*^9, {
   3.7397005885981693`*^9, 3.7397006065473433`*^9}, 3.739700674588703*^9, 
   3.739704523582611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"irel", "[", 
   RowBox[{"3", ",", "1"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.739698321340988*^9, 3.739698323578973*^9}, {
  3.739698366282298*^9, 3.739698375251145*^9}}],

Cell[BoxData["0.40321649440854324`"], "Output",
 CellChangeTimes->{{3.739698369367571*^9, 3.739698375647293*^9}, 
   3.739700358637278*^9, 3.739704523679903*^9}]
}, Open  ]],

Cell["\<\
Vergleiche die Intensi\[ADoubleDot]teten zwischen der 5. und 1. harmonischen\
\>", "Text",
 CellChangeTimes->{{3.739698407678546*^9, 3.73969843296973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSRarc", "[", 
    RowBox[{"0.", ",", "0.", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]range", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "30"}], "}"}]}], ",", 
       RowBox[{"\[Omega]points", "\[Rule]", "31"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"5", ",", "4"}], "]"}], "]"}], "/", 
  RowBox[{
   RowBox[{"makeSRarc", "[", 
    RowBox[{"0.", ",", "0.", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]range", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "30"}], "}"}]}], ",", 
       RowBox[{"\[Omega]points", "\[Rule]", "31"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7396972631958103`*^9, 3.73969731235605*^9}, {
  3.739698457452539*^9, 3.739698479667395*^9}, {3.7396985379644833`*^9, 
  3.739698571996282*^9}, {3.739698616909677*^9, 3.739698626624659*^9}, {
  3.739700611682106*^9, 3.7397006158212023`*^9}, {3.739700658504678*^9, 
  3.739700680961688*^9}, {3.739701509141214*^9, 3.739701509606832*^9}}],

Cell[BoxData["0.04264399128015876`"], "Output",
 CellChangeTimes->{
  3.739697312964005*^9, {3.739698458148261*^9, 3.7396984802895317`*^9}, {
   3.739698541179392*^9, 3.739698572566246*^9}, {3.739698620170467*^9, 
   3.739698627218706*^9}, 3.7397003587141743`*^9, 3.739700616800585*^9, {
   3.7397006623166237`*^9, 3.739700681759378*^9}, 3.739701514308117*^9, 
   3.739704523869306*^9}]
}, Open  ]],

Cell["\<\
Irgendwie kommt uns da was komisch vor. F\[UDoubleDot]r n=1 sollte irel ja 1 \
ergeben\
\>", "Text",
 CellChangeTimes->{{3.739701214147374*^9, 3.739701252066483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"irel", "[", 
   RowBox[{"1", ",", "1."}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.739698378616467*^9, 3.739698384403043*^9}, {
  3.7396984840509157`*^9, 3.739698491624886*^9}, {3.739698630476935*^9, 
  3.739698630523425*^9}, {3.739700688930297*^9, 3.73970068903183*^9}}],

Cell[BoxData["0.8281423817871848`"], "Output",
 CellChangeTimes->{
  3.739698384822299*^9, {3.739698484675737*^9, 3.739698492292823*^9}, 
   3.739698630836034*^9, 3.739700358741262*^9, 3.739700693724573*^9, 
   3.7397009923989563`*^9, 3.739701037840288*^9, {3.7397010923815193`*^9, 
   3.739701120813631*^9}, 3.739701186953957*^9, 3.739704523999288*^9}]
}, Open  ]],

Cell["tut\[CloseCurlyQuote]s aber nicht. Irgendwo muss ein Fehler sein,", \
"Text",
 CellChangeTimes->{{3.739701256477475*^9, 3.739701302739058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     FractionBox["\[Pi]", "5000"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Theta]\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma]\>\"", ",", " ", "\"\<\[Pi]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739697447364984*^9, 3.739697449629096*^9}, {
   3.739697540047078*^9, 3.7396975465814753`*^9}, {3.739697598360056*^9, 
   3.739697681742824*^9}, {3.739697730368359*^9, 3.739697768015676*^9}, {
   3.739697815576942*^9, 3.7396978533282833`*^9}, {3.739697936071754*^9, 
   3.73969796622511*^9}, {3.73969799837824*^9, 3.7396979988528976`*^9}, {
   3.739698079785295*^9, 3.739698081785523*^9}, 3.739698114665567*^9, {
   3.7396987000386763`*^9, 3.739698710052644*^9}, {3.739698770190566*^9, 
   3.739698811776677*^9}, {3.7396988585768633`*^9, 3.73969892752817*^9}, {
   3.739698992696368*^9, 3.739698995246763*^9}, {3.739699052624467*^9, 
   3.7396990593493223`*^9}, {3.739699099177527*^9, 3.739699107068789*^9}, {
   3.739700640175942*^9, 3.7397006424484262`*^9}, {3.7397027602737722`*^9, 
   3.739702834398834*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D7IpUGf70pPe0vH/AS72M2I=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$15183#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$15183#2"]& ]}}, {}, {}}, {
    Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -14.93484649863254}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{1.282282715750936*^-11, 
        0.0006283185178951315}, {-14.93484649863254, 18.63327784534284}}, {{
        1.282282715750936*^-11, 0.0006283185178951315}, {-14.93484649863254, 
        18.63327784534284}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Theta]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(dU\\), \
\\(d\[CapitalOmega]d\[Omega]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]\"", "\"\[Pi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.739697451460702*^9, 3.73969754749118*^9, {3.739697601180895*^9, 
   3.739697682395317*^9}, 3.739697786372263*^9, 3.739697989003133*^9, 
   3.739698030143365*^9, 3.739698096928738*^9, 3.7396987526500273`*^9, {
   3.739698797206147*^9, 3.739698826062518*^9}, 3.739698913060354*^9, 
   3.7396989829332447`*^9, {3.739699049978541*^9, 3.73969906162576*^9}, 
   3.739699131784039*^9, 3.739700362409779*^9, 3.739700647077935*^9, 
   3.7397028457559023`*^9, 3.739704527467979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     FractionBox["\[Pi]", "5000"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Theta]\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma]\>\"", ",", " ", "\"\<\[Pi]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739697447364984*^9, 3.739697449629096*^9}, {
   3.739697540047078*^9, 3.7396975465814753`*^9}, {3.739697598360056*^9, 
   3.739697681742824*^9}, {3.739697730368359*^9, 3.739697768015676*^9}, {
   3.739697815576942*^9, 3.7396978533282833`*^9}, {3.739697936071754*^9, 
   3.73969796622511*^9}, {3.73969799837824*^9, 3.7396979988528976`*^9}, {
   3.739698079785295*^9, 3.739698081785523*^9}, 3.739698114665567*^9, {
   3.7396987000386763`*^9, 3.739698710052644*^9}, {3.739698770190566*^9, 
   3.739698811776677*^9}, {3.7396988585768633`*^9, 3.73969892752817*^9}, {
   3.739698992696368*^9, 3.739699024450254*^9}, {3.739699070288412*^9, 
   3.73969907147937*^9}, {3.7396991088839893`*^9, 3.739699112960346*^9}, 
   3.7397028576603727`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$15651#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ouFMgUFZcQIH9pW1WoZZ0vB/TD5AUQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$15651#2"]& ]}}, {}, {}}, {
    Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -21.41050288540936}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{1.282282715750936*^-11, 
        0.0006283185178951315}, {-21.41050288540936, 21.770484953695295`}}, {{
        1.282282715750936*^-11, 0.0006283185178951315}, {-21.41050288540936, 
        21.770484953695295`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Theta]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(dU\\), \
\\(d\[CapitalOmega]d\[Omega]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]\"", "\"\[Pi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.739699078961629*^9, 3.739699129861567*^9, 
  3.7397003679349957`*^9, 3.7397028683468647`*^9, 3.739704532431417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"makeSRarc", "[", 
       RowBox[{"\[Theta]", ",", "0.", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Omega]range", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}]}], ",", 
          RowBox[{"\[Omega]points", "\[Rule]", "6"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "3"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     FractionBox["\[Pi]", "5000"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Theta]\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(dU\), \(d\[CapitalOmega]d\[Omega]\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma]\>\"", ",", " ", "\"\<\[Pi]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739697447364984*^9, 3.739697449629096*^9}, {
   3.739697540047078*^9, 3.7396975465814753`*^9}, {3.739697598360056*^9, 
   3.739697681742824*^9}, {3.739697730368359*^9, 3.739697768015676*^9}, {
   3.739697815576942*^9, 3.7396978533282833`*^9}, {3.739697936071754*^9, 
   3.73969796622511*^9}, {3.73969799837824*^9, 3.7396979988528976`*^9}, {
   3.739698079785295*^9, 3.739698081785523*^9}, 3.739698114665567*^9, {
   3.7396987000386763`*^9, 3.739698710052644*^9}, {3.739698770190566*^9, 
   3.739698811776677*^9}, {3.7396988585768633`*^9, 3.73969892752817*^9}, {
   3.739698992696368*^9, 3.739698995246763*^9}, {3.739699028834395*^9, 
   3.7396990311702337`*^9}, {3.739699072744628*^9, 3.7396990740165586`*^9}, {
   3.739699116117234*^9, 3.739699120336673*^9}, {3.7397004368080883`*^9, 
   3.739700458180429*^9}, 3.739702866468543*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mxaB/gOiKlOE
          "]]}, Annotation[#, "Charting`Private`Tag$15745#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$15745#2"]& ]}}, {}, {}}, {
    Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -10.876961966811011`}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{1.282282715750936*^-11, 
        0.0006283185178951315}, {-10.876961966811011`, 19.34838516069866}}, {{
        1.282282715750936*^-11, 0.0006283185178951315}, {-10.876961966811011`,
         19.34838516069866}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Theta]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(dU\\), \
\\(d\[CapitalOmega]d\[Omega]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]\"", "\"\[Pi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.739699082596142*^9, 3.739699124103675*^9, 
  3.739700371043046*^9, 3.739702873988955*^9, 3.739704535789728*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1132, 1148},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
ShowSelection->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 276, 4, 116, "Title"],
Cell[CellGroupData[{
Cell[868, 30, 164, 3, 81, "Section"],
Cell[1035, 35, 335, 8, 67, "Text"],
Cell[1373, 45, 1651, 45, 62, "Equation"],
Cell[3027, 92, 252, 6, 40, "Text"],
Cell[3282, 100, 272, 6, 89, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3591, 111, 230, 4, 81, "Section"],
Cell[3824, 117, 379, 7, 40, "Text"],
Cell[4206, 126, 897, 25, 60, "Input"],
Cell[CellGroupData[{
Cell[5128, 155, 1406, 32, 74, "Input"],
Cell[6537, 189, 1487, 30, 67, "Output"]
}, Open  ]],
Cell[8039, 222, 395, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[8459, 233, 443, 11, 40, "Input"],
Cell[8905, 246, 1455, 32, 80, "Output"]
}, Open  ]],
Cell[10375, 281, 175, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[10575, 288, 383, 10, 40, "Input"],
Cell[10961, 300, 1419, 30, 67, "Output"]
}, Open  ]],
Cell[12395, 333, 691, 13, 148, "Text"],
Cell[CellGroupData[{
Cell[13111, 350, 496, 12, 40, "Input"],
Cell[13610, 364, 1100, 21, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14759, 391, 226, 5, 81, "Section"],
Cell[14988, 398, 176, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[15189, 406, 1314, 37, 135, "Input"],
Cell[16506, 445, 14633, 367, 1021, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31176, 817, 316, 6, 40, "Input"],
Cell[31495, 825, 3459, 87, 211, "Output"]
}, Open  ]],
Cell[34969, 915, 142, 3, 40, "Text"],
Cell[35114, 920, 296, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[35435, 931, 756, 18, 40, "Input"],
Cell[36194, 951, 6104, 155, 415, "Output"]
}, Open  ]],
Cell[42313, 1109, 1025, 21, 68, "Text"],
Cell[CellGroupData[{
Cell[43363, 1134, 386, 9, 40, "Input"],
Cell[43752, 1145, 4139, 104, 211, "Output"]
}, Open  ]],
Cell[47906, 1252, 171, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[48102, 1259, 274, 5, 40, "Input"],
Cell[48379, 1266, 611, 9, 40, "Output"]
}, Open  ]],
Cell[49005, 1278, 416, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[49446, 1290, 1276, 22, 40, "Input"],
Cell[50725, 1314, 4324, 103, 275, "Output"]
}, Open  ]],
Cell[55064, 1420, 285, 4, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55386, 1429, 348, 7, 81, "Section"],
Cell[55737, 1438, 250, 6, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56024, 1449, 186, 3, 81, "Section"],
Cell[CellGroupData[{
Cell[56235, 1456, 1189, 32, 104, "Input"],
Cell[57427, 1490, 2714, 63, 92, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60190, 1559, 294, 4, 81, "Section"],
Cell[60487, 1565, 474, 9, 40, "Text"],
Cell[60964, 1576, 466, 13, 254, "Text"],
Cell[61433, 1591, 223, 5, 40, "Text"],
Cell[61659, 1598, 1477, 27, 69, "Input"],
Cell[63139, 1627, 127, 2, 40, "Input"],
Cell[63269, 1631, 21814, 448, 2042, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85120, 2084, 157, 3, 81, "Section"],
Cell[CellGroupData[{
Cell[85302, 2091, 580, 14, 40, "Input"],
Cell[85885, 2107, 574, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86496, 2121, 146, 3, 40, "Input"],
Cell[86645, 2126, 256, 6, 40, "Output"]
}, Open  ]],
Cell[86916, 2135, 1158, 23, 40, "Input"],
Cell[CellGroupData[{
Cell[88099, 2162, 1436, 33, 148, "Input"],
Cell[89538, 2197, 85285, 1579, 485, "Output"]
}, Open  ]],
Cell[174838, 3779, 705, 14, 70, "Text"],
Cell[175546, 3795, 955, 21, 69, "Input"],
Cell[CellGroupData[{
Cell[176526, 3820, 1518, 33, 148, "Input"],
Cell[178047, 3855, 238564, 3982, 491, "Output"]
}, Open  ]],
Cell[416626, 7840, 370, 6, 67, "Text"],
Cell[CellGroupData[{
Cell[417021, 7850, 2552, 56, 253, "Input"],
Cell[419576, 7908, 3271, 61, 638, "Output"]
}, Open  ]],
Cell[422862, 7972, 819, 12, 94, "Text"],
Cell[423684, 7986, 172, 4, 40, "Text"],
Cell[423859, 7992, 1249, 38, 101, "Input"],
Cell[425111, 8032, 168, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[425304, 8039, 991, 26, 69, "Input"],
Cell[426298, 8067, 289, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426624, 8076, 220, 5, 40, "Input"],
Cell[426847, 8083, 161, 2, 40, "Output"]
}, Open  ]],
Cell[427023, 8088, 165, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[427213, 8095, 1134, 28, 69, "Input"],
Cell[428350, 8125, 386, 6, 40, "Output"]
}, Open  ]],
Cell[428751, 8134, 176, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[428952, 8142, 317, 6, 40, "Input"],
Cell[429272, 8150, 353, 5, 40, "Output"]
}, Open  ]],
Cell[429640, 8158, 149, 2, 40, "Text"],
Cell[CellGroupData[{
Cell[429814, 8164, 2316, 54, 156, "Input"],
Cell[432133, 8220, 23778, 450, 315, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455948, 8675, 2239, 53, 156, "Input"],
Cell[458190, 8730, 27771, 516, 311, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485998, 9251, 2338, 54, 156, "Input"],
Cell[488339, 9307, 23153, 440, 319, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

