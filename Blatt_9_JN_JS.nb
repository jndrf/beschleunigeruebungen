(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    105129,       2047]
NotebookOptionsPosition[     97620,       1951]
NotebookOutlinePosition[     98162,       1972]
CellTagsIndexPosition[     98119,       1969]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Blatt 9 WS 17/18", "Section",
 CellChangeTimes->{{3.72250583999544*^9, 3.722505845905954*^9}, {
  3.722515366420581*^9, 
  3.7225153714662523`*^9}},ExpressionUUID->"6325484e-7779-4585-8466-\
0347e37f8894"],

Cell["17.12.2017  ", "Text",
 CellChangeTimes->{{3.722515393817857*^9, 
  3.7225153979529877`*^9}},ExpressionUUID->"972db1ba-000b-496e-802b-\
6ec56dca8fc9"],

Cell["\<\
Wir wollen die Matrixmethode auf einen \"bunch-compressor\" loslassen. Ein \
solcher compressor ist eine 4-Dipol Schikane, in unserem Fall benutzen wir \
die Parameter des BC2 von FLASH. \
\>", "Text",
 CellChangeTimes->{{3.722505849665504*^9, 
  3.7225059305991373`*^9}},ExpressionUUID->"83d24e4b-10a9-4b2a-bf85-\
97e1c3bdf1f2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5BFNmDBBiYmJHBwhHzYv26FDBw0aNMi5xr766itNnDjRufbsGrRrcdSoUfri
iy+ca9SuVcsmdu2uWLHCuZbtmrbxvV3jdp/ZNW/Xful7IXh/2L1SOoO5nbnI
TgDCgewEIMhv2WnEiBHlWrMXzEbBXBTMQzYWzMrK0u7duxUfH6958+Y5Y0nL
ZjbG+fvf/67OnTvriSeeULt27fTAAw+ofv36uuuuu3TvvfeqadOmat26tR57
7DE99dRTevHFF53n3e7du6tv37768MMP9emnnzrjVDtsTPvJJ5/oo48+cj73
/vvv67nnntN9993nfI89h3JwhHp07dpVTZo00csvv+xcYwMHDnSuObv27Bq0
r7Hr0f63XYd2rfbo0cO5du0a/tOf/uRc03ZtN2vWzLnW7Zq367R58+Z6+OGH
1alTJ73wwgvOPWL3yrBhw5yMZvfQ2rVrtWfPHufeCuat0hkrmK/OFGv2AIQD
2QlAkN+yk2Wm7OzsE/aP23gsmI+C2Sg3N1d79+519n7Ye+/vvfeeM+Zr2bKl
GjVq5IwxbZxoz5c2jrT5H3v/fevWrc7Yr7LXLLHfCW4L134nuzesP/WWLVsU
FxfnzGtZVrPsZs83dm81bNjQyWB2jQ8YMMB5Dlq5cqX27dvn3JvH56qT3W/2
/GXzXn5AdgK8i+wEIMhv2elkGSk9Pd2ZO7J5Ixub2Hvn9p65zRPZ2K1Lly4a
PHiwvv76a23YsCEsuehMkJ3gNq/VirA1fz/++KMzV2xzYHa9P/jgg8481v33
369nn31W7777rrOO1b7O1sMG56uCNfa8cK+6gewEeBfZCUBQNGen4Hq7YE6y
959tTsj2cfTr108dO3ZU48aNnZxk699s7sj2ym/bts0Zf3kd2Qlu81p2OhW7
R23eyvZc2ZzV008/7cxX2Zzwk08+6WSqmTNnOvsKba65dJ6KRmQnwLvITgCC
oik7BeeUbB2Pjatsr/qcOXOc8YbVVGjQoIHz3969eztjquTkZGcsFa3ITnBb
NGWnsthzwI4dO5z3SKxWRNu2bZ17/49//KOTsWyNoI037DnCnivKWu/nNWQn
wLvITgCCvJydjs9K27dvd87zr3/9q7Oex/YlWR0Fy0mWo+z9Zlv7M3/+fOd9
6GhHdoLb/JCdSrPaMLZHyp4r7L0Su/9fe+01p26FHa+++qpTd9PyiM1LezlL
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
1VdH9WG/xwUXXKDf/va3ET8XN45f/OIXzr5ey7deZu9jeLmXrdvsOadTp076
3e9+F/FrxI3joosu0m9+8xvVrl074ucS6mG/R9u2bbV69epIXybwCcvhzZo1
8839bq+Rl156acTPw637vWfPnr7dwx/NvXYt9/3yl7/UFVdcEfHrxI3r7OKL
L9aVV14Z8XMJ9Tj33HN1ySWXaObMmZV+Dfg9O73xxhvO3FO081uN8r/+9a8a
PHiwZ7NTtPSyxan5qUY5gFPzU43yqiIae+3aXK3VwvBDfQU/1Shfv369s+/c
9qBXNrJTdCA7Vb5o7GWLUyM7AVUH2Sl6RVOvXbKTN5Gd3OG37GR7UOLi4iJ9
Kq7wUnaK5l62ODVbXzl16tTjslOJSiq4z7SkpNi5JuwoLvW1Ze0bdvYUn/oB
A19XdPQxi376nuPPpayfC+BnvXr1csbfxyhrT7+z3/9Uj3bk3rTXhqKi0vdj
KM8fgccs+vl+Ly4uce7tI/8t/XOLSz0fVOifImpFQ69dP2Une330S38nspM7
/JSd7Hl0+fLlzr5KP/BCdgruZYrmXrY4NduntnXrVmcdfVBRVoo2rlmhRYuX
aGngnlq+ZKmWLV2q5ctWasPmnTpwKEv5BYXHZZQSFeVnatvqRZry+SiN+Pwr
LdmwWxn5xfYZpWzbqBVLF2nJsqXOfbp02TItWb5MaxI2KHlfunLyi04YAxUX
FerQ3m1aMuvfGjtqpIZ/Nl7//n6ZNm/fpCWLVmhn8v7AI5/q5wIozdYIHF9b
IStlm9atWKIlS36+N5cuXaKVa9ZpW9I+Hc7KU2HRcRklkGdy0ndp/szJ+mjg
YA0dN1MJSfuVH8g4J33+sMdeuVIJiTuVdjhLBUXH3Z+2pqEgR7s3r9LMKeM0
auRwjR0/RXHL1mvbppVasCJByfuznJ+bfzhZK36YqdEjRmn8tDht2ZOuguKq
ebd7tdeun7KTvT7a+8TWbyXakZ3c4afs5DeRzE6WmfzSyxblV5S1RwunD9Md
N16l2GrVdNZvblHjdo+p4VWX67xatXT2xTeoXbd/avHmZOX9NGYpyd2pMW2a
6vdn11Qt+5oasYHvravuQxZoX26R9iQs1JA/36Erzg98vHoN3XLPvWpa/3Jd
eF5NnVX9IrV6aYjW7Dx4dDxVXJiuReP66fZrLtXZNa9V+6fe0OAP3tJtN/0+
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
9zaWobgoTVO7tlTLF3rqm42VP1byo+N77c6ePdu1Xrt+yk72+jhu3DiyUzmR
naKDPQ9YPtiwYUOkT8UVoWQnetniTNlrp73veGItxVLZaeRx2amkWPuWj9b9
d1yhs256TmMWbD+yryjw8bS1X6llgz8F8taCn/YulBztm3nyWhGBYdvOb9XG
3nuu3UlDv/9R373/kG65wOpQ9NGCLekn7dNUEuzdeQY/F8ARkydPdtZrn+AU
2amkOFeLh7+k2y77bzXoMkgrkk4yxxP4/v6B72/QMZCtNh+bnY6v47B+Ug/d
c/W5Tg6bvWi2/tbyTv1XtRh1/mC0dmSebO7j2F7YJUV5Wjyine7+0yv6fOmR
PY0lxUU/fU3F/22qqtK9du39VTd67fopO61cudLZS++HHi1kJ3f4KTv5TUWy
E71s4Z5gdrpOb4/64cjaucDrqPWrzdm7Sm83u0v/d1aNwHjnM23PKHTyS/b2
uWrV8Dm98clc7ckqcK7FvH3x+mrmEq3fln40Ozn7zTcfeR2yDHRo7ZdqUe/3
ir36KY2au0XpG6erTYM6iq1WR68N/j7wWKX65tpcamGeEhfN04qErUrPLTrt
zwVwGvk7NahNI11U50h2shFvSeCeLios0K64z9T41tqqUeNhDZmQoGx7X6Lg
yH1W9FPDp+LcTeoe+P4X3hqqhP1HZo92zh2kRjddpE69RyjxgPOIgecPW1cb
eF65qJrue3mglicd1qox7VXvilhVq/uMPonbotziEv18uwde03KSNX/uMm3Z
sU+FgYyUMLWP7nnhbY1YsEV5znnka/ei6Zq1KF47D7FSNxRu9dr1U3byE7KT
O8hO3lWe7EQvW7gqMF4pzD+gGb2bq86vYtTxjQ+1bmeKUndt1pyJH+lO609b
s5bavzpYCc4+gxLl7lmt15vepV/GXKdWLf8UuA67Bo4/674rr9DzvYZrfWq2
Dvz4bzW/51rF1H1Kg2fHa19aqjYvn6m/33urLqxxtu55+UMt3Wn77woUP6Wn
7qtjfTGvD4zHJmpj8gFl52Qqfc9GTfugiW6t3Vwffr5aqUmn/rkbqL0FnJLN
2eSnLNPLze7Qf17QUu9MXKbktH3asX6ZxvXtrBsu/7Vq1rpHPT9ZpP05gTF0
QbK+6P4nPdf5b/py8Xrty9iv+SNaq94fX9Bo22dozx8FOVo01Oaq/lMtX3lH
y7Yk68C+HVrw1SDddeOVgeeP36rbkJlKzi5x+kONeeQBXX12DcXe/pjenrZC
ew9mKifzsJIS5qlH47vUpENPzd2Qqh3zR6th3SsVc/f9avliV3Xr2lV/fvYR
XX5ZBw34YoUymHdyRai9dslO3kR2coffspOf1uecSXaily1CdbLeFUVp8fqo
dQNdfs45Ouf447K6ahMYC329cosO5f20/rMoVWMebalrAp+/LHCcf8zXt9cn
36zRwinvqv4Nl574eIHjuntbqOeIb7Q99di1QHviv9erDW7ThbVqqVbwCHx9
46f+oR8271X+aX9ugrgTgJ+d7DUyddUUtax/Q5n35htDJmltUpryg98auO8m
vNpS150f/LrL1OKZAVqyJdVZ61eUlqCPXmqky88/yfNH4GvvbfGKPv8+QWnZ
pdaPF2Vo2bQhuuem2j/f64HjnHOu04u9xmv7/kynz1T7FvUC9/ZlOuf88495
3LrPvOOs74W7Ktpr10/Zif5OFUN2ig72fojNL/tlrqWs7EQvW7jJ1nPac413
98EVKCMtVbu279KOpBQdyMpToT9exoCwc/M1siAwrs4OjKPzbF+MK49oD5ql
tD1J2hU4z+SUfcrJY97YC8rba9dP2cleH23/14k9EKMP2ckdfspOfq9RTi9b
VIaya5QD8Jsya5QDZ8hqTtm48VS9dv2UnahRXjFkp+jg1+xk1wG9bFFZyE5A
1UF2gltO1WuX7ORNZCd3+C072f3rl+xk6/AGDBjg9Bagly0qC9kJqDosO520
vxNQQSfrtdu2bVuykweRndzhp+xk73cMGTJEy5Yti/SpVFiwl63lI+tXd+WV
Vzq5iV62qCxWj9Ge2+z1D4C/Wc+KxYsXR/o04EOle+3+7//+r959991T7omK
FjZPO336dF+s9SE7ucNP2SmaBes/2H7EESNGOO/ZXHHFFerfv39YrgMAAIBQ
2XjG+qTUqVNHjzzyiMaNG+fkjlB67cIdZCd3kJ0iK9iXaePGjerVq5ezbtj6
0dneS1uzV97euAAAAJEU3O9ke6D69OnjjG3ef/99bdu27eieKIQf2ckdZKfw
C84xWV8mu6bsOrbnmS+//PKY2rHl6Y0LAADgBcfXirCxzeeff+6sqfnzn/+s
hQsXOnsTon09X7QhO7nDb9nJ7lOvvp9h52XnZzXFP/roI7Vs2dKZW1q1atVJ
+waQnRAOluO929sJgJvsNYj7HZWtrDp79npjucn67FptiWHDhikpKcnTYze7
X/yy3pDs5A4/ZScv1igPzjHZ+yuzZ8/WM8884zxfWI1xq+95KmQnhAN19oCq
gxrlCIczqVFuexOsvlerVq308ssva/78+c7rkNdyCnX2KobsFB28kp2CtfLs
fNatW+fUTW/RooW6detW5hzTyZCdEA5kJ6DqIDshHMrT38my0qJFi/TSSy85
Oeq9995z9knl5uZ6Yk0f2aliyE7RIZLZKZiXLBft2rXLmVeydb1Wq3PKlCnH
7GM6U2QnhAPZCag6yE4Ih4r2xrXxzvjx4536fPYYNkZNTk52xlaRylFkp4oh
O0UHy079+vVz5n3Dxe5le26w2uJW68H61z700EP617/+5azhDWX9LtkJ4WA1
8adNm0bPZaAKsHUQ1oMHqEwVzU6lbd26VQMHDtSDDz7o7Hew1ymrdR7uvVH2
c60P4t69e8P2MysL2ckdfspO9n6E9fc80zVxFf0ZwfklyzTWL83uabu3rReT
1Rq3+Wc3kJ0QDtnZ2c7aiEiviwBQ+ew9Evqso7K5kZ2CbMwVHx+vnj17qnnz
5k6dPts/bmOjYI6qzNcve320w6u1LMqD7OQOP2WnylI6L9n8kq3Be/rpp517
2O7ltWvXVkpeIzsBAIBo42Z2Ks0eb9myZXr99dd1//3368UXX9TXX3/tzEdF
cl1ftCA7uYPsdHLBeuL2/pztWbQ6mo8++qgzv9S3b1+nBkRlzm8ZshMAAIg2
lZWdSrPHXrFihbOHz3LU448/rlGjRmn79u3OPJGtAfLDXJGbyE7u8Ft2svcc
KnKv2PfYfRZci2d7aYPva/zxj390spPdj+Hsi0F2QjhU9J4BEH0YTyIcwpGd
SrNretOmTc5e84cfftipbfzmm286+99tDGVju4pe+/Y9lb0uMFzITu7wU3ay
e8Pq21kd8NMpnZVs/bfNAQ8YMMCp8/DAAw/oH//4h+bNmxfR2mNkJ4SD1RCy
2pRZWVmRPhUAlczqai5fvjzSpwGfC3d2Op6N221PlPWGadasmbNuaNCgQVqz
Zo0zritPlrLXx2+++SYsY/LKRnZyh5+yU1k1yu29gtJZye4by0offvih2rdv
ryZNmjh92SZPnuzUUfHKe3JkJ4QDNcqBqoMa5QiHSGen0mwMaL1jrPb5c889
p8aNGzs1kW2svXr16tNmKWqUVwzZKToEs5PNFwVrh9vHrL7DnDlz1KdPH6fn
UtOmTZ2sNGnSJKevdTjX4ZUH2QnhQHYCqg6yE8LBS9npeJaPtm3b5uShzp07
O1nK+km98847iouLU1pamjN2tHO38aHVByM7lR/ZyZtKzyfZNW5jP1vf+vHH
Hzv/flZ/xe4Jq4dna/CCtVi8Mq90OmQnhIOtc6W/E1A12PuL9HdCZfNydjqe
jSWt/+7UqVP16quvOvvc7T32Ll266PPPP3fWKNnvsnPnTuf3Cc5PReP+J7KT
O6IhO9k1atk/uObO3g+ww3rP2nyS5Yvnn3/eWXtXr149p364vZdu+56ieQ8H
2QnhsGPHDuf9NLf6kgHwLutBaO8hApUpmrLTyQT3wdt78ba+795773Xy1Asv
vKAhQ4Y4e0Nsj4fV8wvOUdlrqNdrpJOd3OGF7BScPwqusyudj2zu1Naj2vq6
fv36OX9zu34bNGjg7P2z9QcTJ07Ujz/+GNU56WTITgAAINpEe3Y6GctT1qN3
3Lhx6t69u1PPz8aiNk/1zDPPOGv+bN+8fU16evrRcWxwL1Wwpm0ksxXZyR1u
ZCe7DoL5J5iBgvNEdt8E81DpTBTs02z/v9X+tvXXtnaoR48eTo1+m0Oya7J1
69bOvKlliJkzZzq9lnJyclz8F/AushMAAIg2fsxOZbH37W0+d8aMGRo4cKD+
/Oc/q2XLlrrvvvuc9/o7derkvM9v/x62Xtb22ds4tvQ4OJixgmNmGz8H81Yw
cwVzVyjZq6pmJ/s3LJ1BQj3sb/naa685czun+9pg/gke9je3bG1rfqxX7MKF
C518M2HCBGfNnNX8tv1Hf/nLX5y/Vbt27Zzr6I477tAf/vAHXXXVVbrrrruc
rGTXlfU0szoP9nj28yoi0pneTWQnhEPwORmA/3l9TRH8wU/ZKZTXSMtIW7du
dfaXjBgxwhkTd+jQwRkH2xj4uuuu05133umMjW0ey/acvPLKK86Y+IMPPnB6
i9raqlmzZmnRokXOGivbd2W5xMbgx4/LTzeOtzmxJ5980sl5buUI+7kn+/fx
UnayGvNPPPGEGjZs6MphGaZ27drO366sr2nUqJHzd7W+Rw8++KAzF2Q5yNbM
2d/AajJYDf2ePXvqvffec9aC2vnbOjurz2B5yNaN2tyWzTFZ3TvL6W7Xt7OM
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
5/jvPXK+ztc469zK86/gTWeSnYztY7QeCn6YawMAANHN+juNGzfuhP5OJWWM
LY8dL57KsXsZQnm8kuCY0Tl++p7gOPfnEz46/nTGnOX7Zyg3slN0sPWH06dP
P2F8npWyTetWLNGSJUudPkNLA+P4pUuXaOWaddqWtE+Hs/JUWHSSjBLINEUF
+dq3eY3WJe7SgZwjc5xFmfu1cW28li5Z5jzekqXLAscKrVyZoMSdgcfLzg9k
nuMeLPDgRQU52r15lWZOGadRI4dr7Pgpilu2Xts2rdSCFQlK3p/l/Mz8w8la
8cNMjR4xSuOnxWnLnnQVHP94Ucb+nWxOif5OAAAgWlh9haVLlx7XY6VI+7dt
1MrAuHLJ0uWBMc4SLVu21BkXrlm3Wcn7Dionr8AZC5Y1eis4sEk/zF2qxKQD
gUcrUkrg8VYsXaQly34eqy5ZHni8hA2Bx0tXTn7RCeNUy0cFmfu0YdkcTRw7
WsOHf6Yvp36r1Ynb9OOSBVq9eacO5gcyVFGh9u9cp2//PUHDRozW1wvXKeVQ
bqW+N092im5ZexI0oX9DXXtJrKrFVtc1dzdShyda6arLL1Stmmfr4tsfUPeR
32h7aoZKR5RDSes08o2Oqn3BL/RIz6Fan5Z/5PFSN2rW8Ld081WXqFpMrC65
+W61bN1Cl196oc6uUV3XN3pGU5ZtVU7wogzkobyUBI165R5d/asaqlW3uZ7p
877ee+NJ3VD7Ap0VG6uLHumpmev36/Cm79Sq0a2q6exNrOl8rlq9zhq2ZIcK
ojg+WW85mw9MSUmJ9KkAAACEoEi74r9T9/o364LYaoqtfonubtROD7e6Spde
WEs1zz5L97Z+Sl/EJSgtp/CE/FRSfEDTuj+ga2/ooKEzNyk/8Hh7EhZqyJ/v
0BXnxwYer4ZuuedeNa1/uS48LzAWrH6RWr00RGt2Hjz6WCXFgXNYNUNP1btR
/3N2Td3bpqP6fPieura7Sb/7ZQ3FBs7LGbvuz9bqyX11b52LnZoXNc8+8rmW
r3yg+N2ZlTb/RHbygYJteqdNA/36+k76LC5RR2aQCgLX/kw9f9/N+u9ARmnY
ua+Wbw9el1mKj5unyUN7qe6Nl6tD76HalJ7/8+MV7dTgto10ccz16j8mTgft
m4oO6vuPWunGQEa7vlN/xSUePPJT9i3XG/ffofPOqqFO3Ydoc+rPvamz9ixT
j+Z3qt7jffXdxm2a8HArPf90T83ZsEd7ts7X603v0PmBa7xT/xFKPFgYtn+u
SLO9jDaPCAAA4EWpC4eq2a2/PWbMV5SbpiWT3la96y4KZJQ66jbwO+3JKlWb
oaRYm2a+qUY3nq/YG57UiMCYNDjaKUqep7ZNbtb1HXorblO687GC1Hi91fxu
nVetml4aNEa7sooDHy3WzgXD1ejW3+ms39yv/pNWKj0vmIKKtCVumBrfepke
7zNUCRvnqt2D7fVS/7HakrpP62ePUMObr1BstdvV/7PFOlhJZSPITtGj5Ke9
SScIZKfBgex0cSA7DQ1cp/mlP7VnkR6+/7bAdVRNXQaOUZJzXR4RvI5PyE7B
xwtkp54j45T204VftHuu2ja+6efrviRb3/UL5Klfxequ597Vku2l53yPOLhy
mFr9c5zGzJqgR/p+oQlLk45+Ln3NODW/q/aJP9/HMjMzNWnSJGfvEwAAQKSU
Oa4MKNg5W20a3XBM1gna8s37anT9Bap2waP614wNyj3yaMraMlNtmnbT0w83
140PvaoR3/+cnXIDj9fKebw+pR6vRGvH9lC9K89Vh56BsWBavkoOxqtH83o6
t/ol+utHXys5+/jzK1Dcq49owD9H6N/DemjIxKlam5p39HML//mQbr34BvUc
8fP41W1kp+hge+q2bt3q1Co/QansVDrjB/04rqfurn2ernuin3746b0DE7yO
y85OddXnswU6UFikosICbZszTA1vuUK/DzzO3M3pKkpZrLZNb1NM7I3qNWy+
0k4WfwpSlbApSXuTU3UoM095pU4uP2mOWje+RR17DdPmk35z9ChP/Qfr2Txr
1iwnRwEAAERCamqqUyfC6pEd7+esc2J2UlGqPmvXTJdXi1Hn9z7TjsNFKs7f
oYGBj/Uf9LmWTO+rpq3f0IiZJ2anOk/01bxNB5y6DoX5e/XlG830h/PP0vMf
fKbtGYXa+e1gNbrhIsU26aqxq5JPuu4ua89Gbd6dor37DykncO4/Ty+VaMu0
fmpQp4F6jZpLdqriTlmj/DTZKW3NOD1wV23F3N5ZIxbvOOE6Ljs7xejeJ/6i
T8Z+oU/7ddF1V1ykmAtbqP+keB0MfHnutsD3N7hBMWX83FMr0bbvPlTjW9vo
7UA+q6zrOxxsj+WuXbuUlZV1Rl//448/OvcAtSUAAECknKpG+Smzk3I1751W
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
shOAcCM7AYiEsr5HHeVHWc5OhdmzZ49mzpypZ599VnfddZfatGnj9k5ZPQqr
A+OneSmyE4BwIzsBAHDiylt2Kmjfvn369NNPXe+qO++8081LDR061M0r2xq/
YJ30SMzPk538yzK2fV8A0YbsBHhjz1YjdV9QFpSVel4ov8p7dirIevlOmTLF
9amyNX4PPfSQq+e3Y8eOvPV9pfUzT3byL/vaTJ48OdKHARQb2QnwxvpR2l4A
7puKz+6fbP+51fMiPyFakZ2OzZ4rWY/g4cOHu9oT7du31yuvvOLedujQoRLP
UWQn/6JGOaIV2Qnwhhrl3syaNcs9o46Pj4/0oQAnhOxUdLZXyu6XrT51q1at
3OfNnj9Zz96SyFFkJ/8iOyFakZ0Ab8hO3uzatUtvvPGGVq5cGelDAU4I2enE
2F4oq4f+4IMPqnXr1ho4cKCbj7KcE64cRXbyL+vP/NFHH0X6MIBiIzsB3ixf
vpz+Th7ZOWHOnDnc3yAqkZ28S0xMdHtf7H7a1vXZvYJ9Pm1/lJf9pGQn/1qx
YoV27twZ6cMAio3sBHhja01sHUpKSkqkDyVq/fDDD9q6dSv3N4hKZKfwsvOp
3Sd06NDBZSlb12X1J6xeX3HrnpOdAIQb2QkAgBNHdioZNtdk8/mDBw9Wy5Yt
9fjjj+uzzz7TgQMHirymj+wEINzITgAAnDiyU8mzOaclS5aoR48erl7fiBEj
3Fy19Qg63lwU2cm/TmQeEfADshPgjT37pEdReNjnkWspog3ZqXTZ/cP48eNd
hrIeUgsWLHB1JwrbF0V28q/nnnvO7XMFog3ZCfBmy5Yt7ueHPa/eLVy4UJ9/
/rmSk5MjfShAkZGdIsOyktU57dmzp9sbZRnJ9k7afEYwQ5Gd/Isa5YhWZCfA
G2qUh8+6des0btw4bdiwIdKHAhQZ2SnyrNfB66+/rjZt2qh3795au3atUlNT
1bVrV7KTT5GdEK3IToA3ZKfweuWVV9z8E2v3EC3ITv5h9U6tZ9Qf//hHPfro
o7rhhhtcptq3b597zfJU/nOL/d72TNlrwddtPis/e93eHnyfgnUqbJ4r/+v2
/vlft/fP/7rVXc9/DAVfL3gM9rHyH6ONgsdY8Bjyz70V9m8U3CdmH8+O61jH
aL/P//qxPk/5j9H+zeMdo32NyE6IRmQnwBvr7zR69Gj6O4WJ5aZPP/1UCQkJ
kT4UoEjITv5j9/pLly7VjTfeqFNOOUWnnnqqTj/9dNWuXfuo+x2bn7Iafmef
fbYb1atX19SpU4/6WN27d1fVqlXz3mfo0KGuH1VQr169dOGFF+a93qVLF61f
vz7v9ZEjR+rqq6/Oe71hw4auXmCQPXu78sordeaZZ7rXL730Us2aNSvv9fj4
eJczgn/fxocffnhUtvnrX/+qatWq5b3+7LPP6vvvv897/aWXXtJll12W97rN
z+XvR/7+++/r2muvzXu9fv36mjdvXt7r9r533nln3uvnn3++y6j5WY/j/Mdo
9TysJmLQM888owsuuCDv9WuuucbtVQOiDdkJ8MZ6kXz77bdHXUtx4uzZZKja
WYCfkJ38y/Y7WY4YNGiQ+/Wjjz5y5+yi1jgvDXb9GDJkyFFZBoB/kZ0AADhx
ZCf/yl8rwupIvPPOO3rqqafc27Zv3+6LDGX//vPPP0/NOSBKkJ0A+JHdT0T6
ngYoCrKTfxVWZ8/ue6ZPn+7Wudl8VLCuRCTnum0d4IwZM9xxlBe2X4r1BYhG
ZCfAG/o7lQyrm2X7uwvuRwb8huzkX8erUW7rg23fke3DeeGFF1zvXdufU1if
qJL23nvvuT1MZXWfZ2HPwmyf8FdffRWhIwJOHNkJ8Gb37t1avXo1+53C7Isv
vnA1mGxdDeBnZCf/Kmp/J9tzNGDAANev1eak9u7dW6oZavLkyfrXv/7lricF
5WRnKT3tcG6uS8q9zhzQoZQ0ZWXn2AvKzLT9oRk//tmnbF2k9Z0oeN9HjXJE
K7IT4A01ykuG3evYPemyZcuY04OvkZ38q7i9cbdu3erO508//bTeffdd1/O8
NPZEWW6yeaeC90bZmYe0+tOx6nTNFTrz5EqqXLmyat7eRW8tXK/9e1brn73/
V21aPKYP/rNGB3w6RW9zS61bt/5Z/UKyE6IV2QnwhuxUcj7++GP3DNjW7gF+
RXbyr+JmpyCrC241+R5//HH39bWvra3xK6n9OcOHD3c1v/MfZ072AS0Y2VIN
LorRSRe1Uf8Jy7U7Pk5Te9+les27qN/Qf6jRjVcoEHu7hr6/XMk+fcQ0bNgw
V9Pc6nTkX4PdqVMnshOiEtkJ8Mayk12b6e8UfrbnyT6/tn4G8Cuyk3+daHYK
OnTokObOnevqSvzjH//Q119/7d4WzgwVrLNX8D5s1+dj1OL6S3Kz0W/13Jvz
FZ925IWsXRp97x26ODZGgUBAsbc/qfeX75Qfo5NlpT//+c+uv5bN5dk8XpB9
PvP3kAKiBdkJ8Mbul+z8b/f5AMofspN/ec1O+a1YsUJ9+/ZV79693T2T7XEN
x54o2ws0ePBgl8t+kqJPB7RRvXNzs1GjnrnZ6PujstGO//RTs/pVc7NTjG7/
31e1/PuDno6hpNg+sjvuuEMnn3yy6tSp43qfA9GO7AQAwIkjO/lXOLNTkGWd
V1991fXatT1KVt/hRPdE2d+x9Xq2di0pKemnFzK26812TVUzEFC9BwZq0eb9
R/291E1T1abRVQrEXKCn/jlDO1NONL/lKOtIP3KrOWG/ZubmwaysTGVk2NvS
lJH7f8s+wXxo6/XOO+88Nz92+umnu88XtVMR7chOAPyOOvDwM7KTfxWWnew8
YlnHhpe1d+Hotbt582Y3l7V06dKjX8jYobc6NNPFMQHV7dI/NzsdXcf14MaP
1apRbcX+9k8aM2+T0k/0P3EoTu/2eUJdW9+tzvd3Ucd292vI2MmaMnaI/vaX
TmrToqG6v/iWVm5PCv2xCgiu1zvllFMUExPjfrW8GVy3xzkd0YrsBHjH+b9k
2f2FrWex8xXgN2Qn/yosO+3Zs8d9zQYOHOgyi51X0tLSXC2IE1mDV7DX7po1
a4rUa/fgwYMuS9ic08/nxVL1nyHt9bvqMap+57OasXJ3vjV7OVo7sY9uveIs
Xf/gIH22JUlZR3Jg8a9EWUpNWK8RrZvowthYBep01Kj5a7V+znA1vbam7nt6
oL7elqj0E5gq2rJli1q0aKFzzz1X//M//6OzzjpLTZs2dXtYjfXWogcFohHZ
CfAmOTnZ7XVKSUmJ9KGUWfZ8d9SoUa6PFuA3ZCf/OtaaPeuDe9NNN6lKlSru
nv7qq69W9+7dNWHCBFen3OpBFHcOqai9du33du9l+6ZGjBjhslxhdswdqTuu
uVAxgYbqP36p9mX9+DGy07dpZLtmuuSkk1Th/LYaPGG+Jg9/XXMWfq3EzBP4
JOVKjZuru5s3UGxMjFrnfs46NbhWrR4coiVbij/fVJBdI6dMmeLWOuZHjXJE
K7IT4A01ykvH2LFjNWfOHDIqfIfs5F/H2+9kz7y6dOmiX/3qV25NmY3/9//+
n84++2w3hgwZcsL9EY7Va9fGunXr9Mgjj+j1118//r1QVoI+fqaN6p5VUec3
fUjvLNmg/cnxmjvqEd1weV117fm4Ov++vqrGBFwtvn7j5ynhBLOTWfvxi2pU
+5zcrBZQzO+66s3FW5QW+q+FRHZCWUN2ArwhO5WOlStXuv6RcXFxkT4U4Chk
J/8KVSvC7uuth1PVqlVVoUIFV9PAxhlnnOH6O3mta1Cw167VSujZs6dmzpzp
1vWFlLVfn08Zpob1L3N9cW1UqXKbnhz0H32feFgr3n1Gt9WuqirXd9foJR6z
TtYejW/fQpfm/v9rdeilT9fsVjiWox8rO9HfCdGK7AR4Q3YqHbbOZceOHUfX
ogJ8gOzkX0Wps2e15ezrd/HFF7ta2pah6tWr57KOzTuFo5dTsNeu5Sar0Vfc
XrtZGalK2p+YezxJucebf3IpS4eSk3TocJqyPOac7EMbNbxNY7fvKSYmoG4v
jtbmfUWpQpGjnNz/R3Z2TqH7rY6VnWzuberUqd4OGogAshPgje3BCa6RB1D+
kJ38q6g1yu3ZzLhx41xmqlatmqsj8corr7g9Sf/+97/DlqHsOEq61+6JyMlO
1YLhbXRDw4b6Q7PbdPl5pysmcKeGvL1CB44Zyqy+ebqS9+/SqoXTtWDFRsUf
+vk83bGyExCtyE4AAJw4spN/Fbe/k+1Nsn1Owfv8TZs2uf5L4c5QxnrtWk2J
cPfaLbacbO1e+o5a3HSlerw2UdsTtmhohyaqHhujWh2e16ffxhe+di8rXh8/
3Up1zqjg5qnu7f+W1iX+fJ6K7ISyhuwEIJrYfYvdB9l6F8APLDvZHIKt27Xv
S4Z/xgMPPBCW3rglmaHC2Wu32HJz06EdS9Wj2Q06tfXz+uCbeHujvp/7qpr9
robb+9Wx13Ct2ZlcaH/crNR4ffT8Hbry7IDuz81OG4uYnYI9tiL9/cEofEQk
w0cRshOAaLJt2zZXM8LuZQA/sDrTN954o9v7bn1SGf4Zv/3tbzVy5Miw1ecs
yQwVjl67xZWxa5H+2PLHWu1VqvxRIyeu1WHt1/Rn2+mac6oceXsV3dZjqL6I
K2yvaaoWDGqrBtWKl53s8/bGG2/oySefjPj3COPo8cQTT7g93Pb9iMKRnQBv
7LpZas8I4QwdOlSLFi3icw5f+Oqrr9y1zdbtMfw3bE+RPUsPp5LMUCfaa7d0
5Cg7K1Nphw8rxUbKAc0d1loNahQvO9n+4CZNmuiee+6J+PcH4+hhX5cOHTq4
NaUoHNkJ8IY6e6Vv3rx5rmbVzp07I30oAMqxksxQlveK0mu39OQoK22PFr3f
X7+/+mJVqlxZlU6uqNjYGLe2r7jZydZTWq12+MvHH3/svufITsdGdgK8ITuV
PttTPW3aNG3ZsiXShwIAJZqhjPXatdp/BXvtlmaGysneo8m979DV/1NRD/Qe
obU/xGvdnAFq0uA8xcaQncoKslNoZCfAmy+++MKt27Ze8bZ2j1E6w57JFuX9
/LHOBUB5UNIZqmCvXZt7L5014znaMutl3V63mm7vMUzLtycfeXuq5rzQRvWL
WSuC7ORfZKfQyE6ANzNmzNBDDz2kPn36uD3JDP8MO998/vnnrn8KAJSW/Blq
9uzZYc9QwV67jz/+uKvzWNxeu8WWsV2j2jVVzcDl6vPWPO3Ni0hWK6JNsWtF
kJ38i+wUGtkJ8MbOM82aNVPLli1dLxFG6Y2uXbu666/9Wtjr9evXd/cu7IsC
EAnBDGXP1ixD2XrjY84R5Vgdhixl5eafos4iFey1a3VLDh48GP4Mlf6dXm3b
WDUC9dR/7CIlZgZfIDuVNWSn0MhOgDe278Z+hqyWE0qXnb/Wr1/vfi2M3UtY
n0uyE4BICmYoqz3+s9rPOdnKSE9Twq7vtPiTdzT9s5XadTCz8A90HCXZazdj
52fq0Pw6xQTq6MUxC7Uvr2wh2amsITuFRnYCvCE7RY49X7XeOrbnrLD7A7IT
AD+x9cPp6Ufni6z9q/Viu9tV7aQKijlOzYWisrpFYe+1mxqnwW2bqFogoNZ/
H6lv9qQGX9CCgW10DdmpzCA7hUZ2AryZOnWq6ydnayVQ+iZNmuTqTtkz1oLI
TgCiQVZqvCb1uUu1q8Z4zk5B4e21m6ApHVupttUjr95aQ6esVFJ6pjIzEjX1
+Za6+qyAOr4wSmviU5Vd4OOTnaIL2Sk0shPgjV2T2rRpowULFkT6UMol2yM9
duxYV+ewILITgGixdc4gNa5fLWzZKaiwXrspKSnF3hOVvPZjtW9cRyfFxipQ
q4m69x2qYb3aqXbN0xSIiVWFihXV5JGB+iru6OdYZKfoQnYKjewEePP666+7
WhG2XxeRsXLlSveMteDzVLITgGixfc4INa1/QdizU1D+Xrt9+/Y9oV678aun
q0fja1S1cmVVzh2XXH+9zqlZU1Xq3KbOL72p+avjlJxy9F4tslN0ITuFRnYC
vCE7+RfZCUC0KOnslJ+nXrtZqUpOStS+fUlKT8/M/WPqj2sBj/HuZKfoQnYK
jewEeGN9hJo3b0528iGyE4BoUZrZKSh/r13bG2Xz9+HqtWsfw+pi2P3exIkT
tXr1avdnWytIdvIvslNoZCfAmwkTJrjeuMuWLYv0oZRrdp22NSn27DSI7AQg
WkQiOwWVRK9d+xh33nmnzjnnHFWtWlW//vWv3Z+trhLZyb/ITqGRnQBvqFHu
D0lJSe5rsXnz5ry3kZ0ARItIZqegcPbatedY3bt31ymnnKJAIKAqVaq4+S2b
2yI7+RfZKTSyE+AN2ck/rOahnctSU3/sPUJ2AhAtip6dcpSTm2Wys3PcHiPL
NeFYY1dQOHrt2vm3evXqLjvZvJPNbdnHIDv5F9kpNLIT4A39nfzD8ut7773n
rsuG7AQgWoTOTjnKykhX8v5dWrVwuhas2Kj4Q5latWqVq/1gNRmKm22Kwmo8
nGivXdvjZLWUKlasqKuuuiqvlwfZyb/ITqGRnQBv7Pu5Y8eOWrx4caQPpdyz
+4Z//vOf+vLLL92fyU4AosWP2alGbnYam5udMn/+Dlnx+vjpVqpzRgXFxAR0
b27GWpebsaxHw0svvaRevXrpk08+cXuXwlXvIb9gr90nn3zS1ZfYsWNHyH8n
uG7vV7/6lXvGaB/DkJ38i+wUGtkJ8IYa5f5i5zTr+2jITgCiQ442zhigRnXO
1d1939S6/xa+Zi8rNV4fPX+Hrjw78LP5qW3btmncuHGu3sMbb7yhuLg4z/Ue
CmPn2BkzZqhnz55F6rU7ePBg1ahRQ++++25eLR+yk3+RnUIjOwHekJ38i+wE
wPdyspWRvkcfPZebic4KqFaHXpq1eqcyswubz0nVgkFt1aDaz7NTkPW7nT17
th577DHXA3fp0qXF7oFbFIX12rWaPQX/HVsHYPX17J48iOzkX2Sn0MhOgDeW
nejv5D927SY7AfC7jPgv9bfWt+qcKlVcLTo3ru+mUUs2KUU5ys7KVNrhw0qx
kXJAc4e1VoMax85O+dl+owEDBri9SpMnT9aePXtKZD3f8Xrt2q/r1q1zbwsi
O/kX2Sk0shPgja1DuP/++90zN/iDrR2xdfV2biM7AYhOubkjbY8Wvd9fv7/6
YlWqXFmVTq6o2NgYV7euOLXMbW+S3XvZej573me9l4J9asOpqL12yU7+RXYK
jewEeEONcn+yzNS0aVOyE4ColJO9R5N736Gr/6eiHug9Qmt/iNe6OQPUpMF5
io0pXnYKslp8dr/3v//7v26dna25K2ydnVeheu2SnfyL7BQa2QnwhuzkT3ZO
a9eunas/RXYCEF1ytGXWy7q9bjXd3mOYlm9PPvL2VM15oY3qF1IrorhsnZ3V
cbD75OLWHi+qQ4cOFdprd8uWLerSpQvZyYfITqGRnVCW2bM0W5cQHHZdyL9G
wX5vz8KCrxesSWTXkPyvF7bGwc4zTzzxhJYtW5b3PsFaQsc7jvzXp8KOI//r
RTkO+5jFeb3gc8YTOcbifq4KO4aS+jxZXrrvvvvUp08fshOA6JKxXaPaNVXN
wOXq89Y87c2LSFYros1xa0UUl62rs754Nhdlc0SbNm1SWlpa2Nfz5e+1a/UA
O3To4Or1lURfX5w4slNoZCeEk+1pzci7r839NSPT3Q9nHrmfTUvPUKb1QC+l
45k1a5a6deumu+66yw3byxqsBWSsp6BdL4Kv27Mxq7caZOsO7N47+Lqd661m
UX4PP/ywzjvvPN1444157zdlyhQdPnw4733smZ7tiQq+bj8H9owvyNZNPPLI
I3mv//3vf3fXryBb32B7fYOv2/O6/PNcqampbn4l+LoNe9aXP5uMHj3aHX/w
ddunZT//Qfb8r+DnytbIB1kPkfyfK6tPW/BzZdfE4Ot33333zz5Xw4YNU8uW
LfPex/oK27EH/etf/1KnTp3yXrc6u/ZxgxYuXOg+38HX7d+z55dBmzdvdj1E
rO7hLbfcomrVqrmv6fbt2wv9/gAAX0r/Tq+2bawagXrqP3aRfmr3FP7sFGRz
RPPnz3f9m+y6t2jRIneNCPd6Puu1axmqbt26bt6rpOpX4MSQnUIjOyF8UvXl
xEF6qPM9urtj59z7+466//EhmjxjsoY8+zd1at9GDe/srrc+XamkrNAfLRzs
nG/Pz+z+3IblmbZt22r8+PHuNXuuZpku+HrBuRI7l+d/3UbBuRJ7Tte4cWOX
0471PnZdyH8cBedLgvMtRT2Ogs8Eg/MtxzvOgsdQ8FpV8HNV8BjD8bkq7jEW
9nnK/3r+Y7DX7G1ffPGFy3iWE2+99Va9/PLLzDsBiCoZOz9Th+bXKSZQRy+O
Wah9GcFXSi475bd27VoNHTrU1XyYMGGCdu3aFdZ8Y88DbV3AH/7wB7e22v4t
e1tJ1K9A8ZCdQiM7IayyUrXhP6+pSYML3V7Wjn1Gae22NRreuolqNrhPA6d/
rcSUkjnXF4XNOV133XX685//7PauhgP9nSLHruN2Pbf9z7b2w+b2bO7Mzmf2
DJUa5QCiUmqcBrdtomqBgFr/faS+2ROcn8/NTgPb6JoSzk5BlplsPYA9j3rl
lVfcnJE9oyos3xQnV+WvFWH3oVaTr3379m7Oy/ZE2XPOcM93oWjITqGRnRB+
hzR3aHs1OC9WMdd3ULcn79e1de/VgLe/yLfuoPTZOdi+108//XSdf/75Yduj
Sn+n0hfc97Rt2zY379e6dWv16tXLPSu1LBVEdgIQnRI0pWMr1bZ65NVba+iU
lUpKz1RmRqKmPt9SV58VUMcXRmlNfG6OKYV8kZKS4tZM2zyUrZW2tX2JiYlH
5RvLWXZPWZR5o8Lq7Nmc07x589S1a1c3J2Vr3W3NNuv5ShfZKTSyE0pE8lq9
2K6RznF9KGLVtd+b2pKQFtFDsvP6Pffco8qVK+tXv/qVXn311bx9T17YPiJb
c2DXFZSc4BxTcE3+X/7yF7enauzYsUfticqP7AQgWiWv/VjtG9fRSbGxCtRq
ou59h2pYr3aqXfM0BWJiVaFiRTV5ZKC+ikss1eOyPrfDhw93OeqDDz5w59cD
Bw64Z1i33XabFi9efNQzrMKEqlFu+1htD699TKulbjUBLb8xF1XyyE6hkZ1Q
UvYsG68WN1yam53qqNcb87U7NbLnu1GjRuniiy9WTEyMGzfddNPPahmcCGqU
l5xgT3p7Hml1IGzNSKtWrVxdw+XLl7u9T8dDdgIQzeJXT1ePxteoauXK7rnf
Jddfr3Nq1lSVOrep80tvav7qOCWnRGZBh9V4sLkhq8dz77336qKLLlKVKlVU
M/f47D7P1lIfK+cUtb+TPSubPn26W49tdYTef/99V2epYJ1XhA/ZKTSyE0pE
Tra2/Ge4mrp9TzEKXN9Nby3ZrPScgu+WrYy0w0o+kKTEhAQdSD6k9Mx8dfhy
z7tWuy8tLUMZmVnKTLc6ASmufl/wlPzj66numZQNq+WXnX30P2Tn2M6dO6t6
9er69a9/7eqvnXHGGW4dt9fzL9kp/IJr8uw8MWnSJLd+449//KOro7t3794i
fxyyE4Col5Wq5KRE7duXpPT0zNw/Hqn1E+njOsL2Jtn1tVKlSgoEAu7ZpK2N
f/75512t1sKusSfSG9f2KFtNCXt+ZnVerQ6grR1hTV94kZ1CIzsh/HKUum2B
2jS/QQ3vaqbbrrhMp8fGqMlfX9HyHQfz5aIsxS2fqWduvkY1KtkztUqqWOH3
6vnyp9q+Pz03V+XeO+9cr5njX1SDK7vo6RdeV+/ON+qiUwNq87fX9O2uQ8rK
+K++/OQV3fK7Wu6Z3MkVK+jWNo9o2pdbdTCz8HOpnc/D+f1OdgqPYF6yZ5W2
Js+eZdo1csCAAdq4cWPINSCFITsBQMmy2g6NGjVSxYoVFRsbm7e24xe/+IXr
JWHrOwqev08kOwXZdeLzzz939Sus54Wd51evXu3mqMhR3pGdQiM7Idyys37Q
O+1b6MqGj2viF99ry/ShanJ1dVdrtdc/f1q7d3DjDLVqVEcxjR7Vm8u2Kem/
a/Vqy1t1QUxdDXh7keK++VjtmtTVSRVyz8WBgGJPquiea1U6+WTVvO9Fzfpm
rSY810JXnVtbfx04RVt2b9MnA+7S1dVjFLj1Mb375Q4VNqMU7uxkvZzsPv/L
L78M28csLywv2bXOnltabfHnnnvO1ay1Hk3Wa9jmEb0gOwFAyYqLi3Nr4m1d
3bXXXqtLL71UNWrUcGs7bA2fzUHZ6wcPHszLNV6yU362z8qeX9rHsv4jtg/L
eiMW1ocDRUN2Co3shHDKzjygpW8/qhtqXaFn35yp3WlSTub3erV9M9XIzT+B
Op01fM46JWdlK27ai2pe71zV7jJA8zcl5p7jMrRoeDtdW6O6/vb6NO1KyVZW
wir1vetmnR2I1TU9hmn+mm+0YOok/XvpGi1+9++67apz1O3l8dpypIBfwpdj
1Lrhb1Sp5n0aO3u9CqveGu7sRI3y4gnOL9m1zc7Nlm8sL1lv4E8//dRdC8OF
7AQApcvySkJCgnv+ZZnJro916tRxdX2C5/dwZaf8rGaQ7Yfq2LGjqyP0z3/+
063zI0cVD9kpNLITwidDX475o269oop71tTuuZH6Zvdh7V87Xe2aXuPe9uNo
pqHvfaX/xq/VpHGjNHHeCn2fmKRta+ap323XuYyV17ciY7tGtGuqCwK/18C3
l2p/sJVq+na9lvv2Gpffq1Hz1iuvYkBWsjYsW6yFS79VfFLhcxZkp9IVrPdg
ecmeO9paC+tZb2s5HnroIbcP2M5DJYHsBAD+UxLZKT8759u9ptWwsL5RNh+1
fv16t8aBOhPHR3YKjeyEyMlRZvpBrVk4QV1urKeql1RWpTMruJ66P2WnrbnZ
qXFudqqn/mMX/dQf6sA69Wl5q86q+4DGLtqs4uyEITuVvOBaPKuPZzWRPvnk
Ezev1KJFC7dG3eaXwlEfPhSyEwD4T0lnp/zsGmR1of70pz+5Z3a2NtzqTFh/
KrtGUff8aGSn0MhOiJTsxLUa/odbdeFJFfVAnxHaFH9AS0a013U1Qmen1B3/
Ubtm9RVTvbVGzPhGhwuc9rJzz4VWa6+ws2G4s9PIkSNdJijP2SnYe8muQza3
ZHu/Bg0a5Naft2nTxtV7WLlypVs7UZrITgDgP6WZnfKzWkTWf9d6U91xxx0u
T7311luuHpHVmrA5qfKepchOoZGdEBkZWjqqnW6oGVDLp1/X6l22vi5V8we2
0TXn5manlwrJTuPyzTulxmlw2yaqFgioda/XtWr34Xw1yw9r8Tv/0oJla356
/yPsfGjZac6cOWE7N5bHOnv555VsDYT1LbR17Vantnnz5q52hp1/bf15JK9B
ZCcA8J9IZaf87DpmPXjHjRvnMpRdux599FE3R7Vt2zZXq6g8ZimyU2hkJ0RG
qubk5qT61XKzz9P/pxU7kpV2eLve/msz1To1oD+9NEbr/puu7LRteq1tU9UI
1FX/8Qu1L7jfSQma2LGVrrB+64Fa6v7CBG3cfUBphxL0xcS/6ZZ6j+qtiWvz
9kHZec++123u/vHHH9fEiRPd7+2+3+s5sTxkp/xZyeaVVq1apTfeeMNdb2y9
Yvfu3d3PtV0PT6SWeEkhOwGA//ghOxVkvdbt2vbaa6+5foKWpXr06OHqT1jN
CbtfsGugXePK8n4pslNoZCdERqrmvthB11S17FNdda5vrsY1L1b1k60/RIxq
1amr1o+9ohkzJuovTa7Tqbnv88igCfouMVXZR7JO8obpat+0vk6K/bGGefVa
tXTF2VV1xsmV9MSI9/T9wbyg5fKR7Rk97bTTXM8Jq5lqv37wwQdkpwLsmhCs
7WDXkn379rm14YMHD9Y999zjspLtXXr33Xfd9cTez6/ITgDgP37MTgXZGnNb
a257mq3+ul37unbt6ur32dutZqBlqbI2N0V2Co3shEjZv2Gueja7QVUrW+29
S9TtudGaM/V13XlLbffne+5ppXr1LstXn6+KmvUYpK/iEvN9jEV6rtlNOr9y
Zdcbt8olt+mZcQu1M/nncx8ffvihrrrqKte7z4bVxbZnTF5NnTrV9SOy/oDR
JFj/LjifZDnJrgV2TbBasva8zZ672d7aZ5991v0/d+3a5f5OtCA7AYD/REN2
KsiuldY76r333nPPDy1LWf92uz7aWhZ7zdZl2LXU8lRwfiraMhXZKTSyEyIq
K0OHDh7WofRMBe/IM1JTlZqW++cin25yP0byfiXs26fDuRngWH/N6rrZfhzL
YDb/NGbMGM+9V42tXbvzzjvd/lO/sXN2cL2dncuDGcnO7xs2bHDnyJdfftl9
Xpo2bepyUs+ePd36b8tQ9n7RjOwEAP4TjdmpMLYuY8mSJe7etlu3bi5PWQ2K
v/zlL3r11VddTdnt27e79X527c0/T+XXXEV2Co3shPKkX79+qlq1qmrVqhW2
7/lI1yjPP39UMB/ZPlg7d9saA5sba9eunZo0aeLO7dZb6ZVXXtGsWbPcdcz+
TllDdgIA/ykr2akwVq9v7dq1mjRpkl588cW89X72fPK+++5T79693fPJxYsX
64cffvhZrrJreSTXAJKdQiM7oSyzc09w7sXGN998o4YNG7rv+eD9dP7XCztX
hXrdvqftvGg/Q8F/L//Ifxz5P1ZwX1Ew9wSHnTuDw86lwSxUcNjb7Ry9bt06
tx7R5o/sWZetRWzcuLGbC7PnYP3793d1g6xu+N69e6NqzZ1XZCcA8J+ynJ2O
xa7pO3bs0MKFC926eKv526lTJ7c23q7Z9mzT1n0MGzbM9YyPi4tza2OOdw8Q
zFvBEbyPCN5bBOe38t/DhBpTpkxxNdzJTsdGdkJZlpCQ4LKFrT+zYedrewZk
z4PsHGG9HqyvQ/B1+33+dWp2XrJ6CMHXLXsV7Olq2eSGG25wawBtHZzN9Vh9
U3uetGfPHncMVqvb3mbHYvuirPbCv//9b02ePNnVXLD63na+tI/197//3fWP
/fOf/+yeUVmPJMtmN998s373u9+pfv36Lv9Z36QHH3zQPcN68803NXv2bNc3
3Y7fj+sAIoHsBAD+Ux6z0/HYNdvW/61evdrtLR4xYoTLL8F+vr///e9Vr149
NWjQQLfccotbO9K+fXu33t6emT7xxBMui9kzVFsraD2rrD6g9aW3niy2rtCy
kN3jfP/99+4e3IbVG7Y/W07bvHmzu4ewf9syHNnp2MhOKMs+++wzt07P+g3Z
sHly288ZXJ9m5xG7tw6+brXkLPsEWd9xW+8WfN1+Vuzclp9lHcszHTp0cLW6
7Xpg+cxqnNrbLPvY8yR7vmRZ57HHHnPnxL59+2rgwIGuHmrwPGfPe2wNnT2X
snkiy2p2PHbvb8didX9KojZqTo7NgWXn1TAsK8hOAOA/ZKfiszkkW2tiz2Nt
/sruX+x+ZOnSpW6/9YwZM/TRRx/pnXfecc9jhw8f7rKUPV+1NfvWu8rqBNq9
id2X2Lj77rvdvYllMHvN1vK3bNnSZTay07GRnQBvorlGeXZWhtKSE/Tdqvm5
59uZWrlpj/zTnck7shMA+A/Zyb/Y7xQa2QnwJnqzU5ZWf/yibq9bTRViYxS4
/H69NXej0iN9WGFEdgIA/yE7+RfZKTSyE+BN9GYnk6X41ZN0V8Pairn8AY2d
t5l5JwBAiSI7+RfZKTSyE+BNdGenXKlbNahtY1Wrl5udFpGdAAAli+zkX2Sn
0MhOgDdRn50ytmpEu8a6gOwEACgFZCf/IjuFRnYCvCE7+RfZCQD8h+zkX2Sn
0MhOgDdkJ/8iOwGA/5Cd/IvsFBrZCfCG7ORfZCcA8B+yk3+RnUIjOwHekJ38
i+wEAP5DdvIvslNoZCfAm7KZnXKUnZmhw4eTlZSUqITEAzqUmq7snJyf/l7u
77OzMpWWlqGMzCxlpqcpNTVF6RmZcu+Wk63MjB/flpKSO9LSct8vW/k/REkj
OwGA/5Cd/IvsFBrZCfCmLGanrINxmvnPZ3TN5TVUuXJlVTq5ourf3VMzvtmu
9Nzwk5Odof/uXK+Z419Ugyu76OkXXlfvzjfqolMDavO31/TNDweUuOVzDe95
s2pVr6zKlU5WhStuVffXpmlL/EGVVnwiOwGA/5Cd/IvsFBrZCfCmrGSnGnnZ
6aBm9GmlOmfF6NFBb2pbUpLWzn5Vt9a7QHW7DNCizfuVuPZjtWtSVydViFVM
IKDYkyqqUqVKuRnrZNXs9A+Nf/d1tbj5Kl3U5glNWL5V277+RHc1vNq972Ov
vK0dB7NK5b9GdgIA/yE7+RfZKTSyE+BNtGennIMbNaBVI51bq5Pe/M8Gpadu
1osdmqpaxdp6cfx8JWTmKHvXInVoca2q3/U3TVu1S9m5fy8rYZX63nWzzg7E
6poewzR/zTdaMHWSZv3nIz3c9Gadc003jV+85cgawHiN6dRKtU6upPv6j9X6
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
vi7p6en0xwUAAGFBdgK88UON8q1zBqlx/WpkpwKoswcAAMKJ7AR444fstH3O
CDWtf4GH7JSj7OwsZWVmKjMrK/f3P83T5ORkuzk1m1/LyspWNE3hkJ0AAEA4
kZ0Ab6I/O+Uo89Aefb1gmkaPfFWvvzFOc5dvVOLhjNwMlak9m7/WtHdH69Xh
r2vcpLnauDNRGVGSn8hOAAAgnMhOgDdfffWVxowZo02bNkXsGLxkp+xDmzS8
dWPVrN1EzRpfrsvOiVVM4EYNHP+ZVswerqbX1lSTu5rp8t9eptjYGP2++xAt
3RodWWTs2LGaNm2akpOTI30oAACgDCA7Ad7YejarR5CdnR2xYzjx7JSlle8/
rpt+c536jJ2nvWm79G7HlqpdpZkGjXhLXe+4Sdfd20/z1iVo1+fvquXNtXXb
o8P1RVx0ZBH7uthaQ2pFAACAcCA7AdHvxLPTQc3o00p1zqqn/uMWKdFaQ2Vl
KCMzS0kbZqpVozqqd/9LWrQx0b13RmqGsjIjU08QAAAg0shOQPQ7VnbKyc5W
RlqaUlNSlJJi9bozlX1kDiY7M0PpKZv1UtvGOjdQR/3GzNXuw7nvk5GutLR0
bZ4+TI3r1lCdzi9q7tp4pea+LdNqRUTqPwkAABBhZCfAG1urZ+v2IrkurLDs
lJOVqbgvZ+jxWxqoeqWTVTH2fDXt2E+zv92hw9kp+mx0X917+7U64/TTFROI
0QVX1tZN11ZX50c7qkn9lqpT8QydHhOjQKCCrsx9rfp1XTVk+kolRdG0U5ar
GRi5tZQAAKBsITsB3nz77bf68MMPFRcXF7Fj+DE71cjNTmNzs1OmTThp7bSX
1Sj3bfc80U8zF8zUS81v1oWxsQrU6aZRCzZqR9wmfb1wono0/J3ODlyurs+O
1Iy5S7V2/Tp9vfJrTRraQw0uO1uxFVrphf4fasmqTfpvUkrE/o8n4qOPPtK8
efN06NChSB8KAAAoA8hOgDeRr1Geo40zBqhRnXN1d983te6/6Urf9bnatrhe
DR8ZpCWb9ro1ewe/m602TX6nQCCgBwaO1eb9uRkra7tGtG+qCwL11P/tRUrM
N6e0c8EINW9wgX7/wEAt3bw/Qv83b6hRDgAAwonsBHgT0eyUk62M9D366Lk7
dOVZAdXq0EuzVu/Upmkvq3Gdajqp4smqWamSzs4dlfINm59an5AuZWzViHaN
f8xOY4/UijgiuA6w3v3982pFRBuyEwAACCeyE+DN8uXLNXr06Ij0d8qI/1J/
a32rzqlSRVWC4/rO6tSyjq6qVkuP9BunpSu/1do1a7Qm39i2J1EpmTllPjtZ
3y36OwEAgHAhOwHeJCUl6YcfftDhw4cjfShHpGrOoLaqXy2gP700XpvyByKT
k63MTKuhUPazk31d9u7d63o8AQAAeEV2AsqaDH3x1t264eIYVW/yhKZ9+X1e
XXLbG5W5Z7kG9B2vOYu3KDN/dhp3dHbakZedXora7AQAABBOZCeg7Nm/YoJa
33SFYgIBNen+gpZs3K3U9HQd3vutRtx1u+7uNlhLtiRJ6dv0WtumqhGoq/7j
F2pfvloRP8x/Tc2uqaG6XQZoYZTWigAAAAgnshPgjfV1sh5Ckezv9DNZ8ZrY
sZVqnxSrmJiAAtXrqGGzFqp54fk6udK9GjlxrQ5mZShp8zw92riBTg1U1yMv
T9Dm/6a4nkgZ6fs07/8eVoOLTlX1Jn/VhKXfKSXTelhF+j9WPPZ1ob8TAAAI
F7IT4M3WrVu1cOFC7d69O9KHcrRDcZrY507VOb+yKlf+cdRp+agmfRmnw7m5
acXEfmpU5/yfakzkjkua9dSkmR+rd+tGOj9//Ykql6jH0KmKS4qufUP2dVm5
cqVSU1MjfSgAAKAMIDsB3kS+v9PxZCl5/3+1c9dO7Uk4oLT0rNB/pQyhRjkA
AAgnshPgTXGzk63ts3Vx6enpbj7Efo/js89VWlqaMjIyirUGj+wEAADCiewE
eBOqv1PBrLR582aNHTtWbdu21QUXXKDJkyeX8hFHF8tM7du3V+3atfXMM89o
wYIFSkhIKFKWsv5OU6dOJTsBAICwIDsB3uzatcvtqdm3b99Rb7d7estKlqmC
WenSSy9V1apV3R6imJgYnXnmmS47WQ5gFD4s93Tp0sXt16pQoYJOO+00nXvu
uWrQoEFelrLzieWogvU67Oti84H2cQAAALwiOwHhZ/NMdk9/4403unv+k08+
2d33W16yEQgE3LC316tXT82bN2ccYzRp0kTVq1dXbGxs3ufNPof254oVK6pS
pUruc/zss89q586dkf7SAwCAMozsBJQcy1Bbtmxx+25s3umKK67Qeeedp1/+
8pcuS5111lluTRmOzeaMunbtqlNOOcVlTfucXXjhhbruuuv01FNPad68eUpK
Sor0YQIAgHKA7AR4Y+vEgiOUglnqoosu0pQpU0rhKKOXZad7771XV199dbGz
UlG/LgAAAEVBdgK8iY+P17p169zPUnFxbx+al8+RfV3i4uJcnQ4AAACvyE6A
N/7u71S+UaMcAACEE9kJ8Ibs5F9kJwAAEE5kJ8Aby052j36s/k6IHOu7RX8n
AAAQLmQnwBvLTJ9++in1sX3Ivi7Lli3T4cOHI30oAACgDCA7AQAAAEBoZCcA
AAAACI3sBAAAAAChkZ0AAAAAIDSyEwAAAACERnYCAAAAgNDITgAAAAAQWiSy
07hx4xQfH6/s7GwGg8FgMBgMBoPBiIqxb98+PfXUU6WWnYYNG6a+fftq+vTp
WrRoEYPBYDAYDAaDwWBExZg5c6buv/9+zZ49u1Sy07x581xWe+CBBxgMBoPB
YDAYDAYjqkavXr20bt26UslOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAI7t/wMSHo4P
    "], {{0, 558}, {847, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
YqdEjcRLSYKktmSw5HHJbsl5KWkpD6ksqUap99I80tbSSdI10oMyzDKGMttl
ymSeymJltWXDZE/KPpJDyWnIBcsVyT2UR8lryofIn5R/rIBR2KRAVyhTGFAk
KRorxinWKI4ocSvZKaUpNSp9VpZQ9lY+pNyt/EtFQyVcpULllSqHqo1qmmqz
6lc1ObUAtSK1p+rM6hbqu9Sb1Gc2ym+kbTy18bkGWWOzRpZGu8ZPTS1Nhmat
5qSWhJafVrHWgDantqN2jnbPJswmk027NrVsWtTR1InRqdf5oquoG6Z7Tve9
nrQeTa9Cb1RfTJ+if1p/2EDEwM+g1GDYUNSQYlhm+NZI3IhqVGn0zljWONT4
vPFnExUThslVk3lTHdNk01tmsJmlWbbZA3MOczfzQvMhCzGLIIsai2lLDcsd
lresMFa2VoesBqwFrQOsq62nbbRskm06bEm2LraFtm/t5OwYds2bUZttNh/Z
PGgvaU+3b3QADtYORxxeO0o7bne87oR1cnQqcppwVnXe6dztQnbxdTnn8t3V
xDXP9ZWbjFusW7s7q/tW92r3eQ8zj8Mew57Knsme97z4vEK8mrxx3u7eld5z
W8y3HNsyvlVja+bW/m3S2xK23fHh8wn3afVl9aX4XvbD+Hn4nfP7QXGglFHm
/K39i/2nA0wDjgd8pBpRj1Inafq0w7R3gfqBhwPfB+kHHQmaDDYMzg+eCjEN
KQyZCbUKLQmdD3MIqwpbCfcIr4vAR/hFXKNz0MPoHZFCkQmRj6PkozKjhrfr
bD+2fZphy6iMhqK3RTfFcCKP7N5Ymdg9sSNxBnFFcQvx7vGXE9gT6Am9iXKJ
+xLfJVkkndmB3hGwo32n6M7UnSPJxsmnU6AU/5T2XeK7MnaN77bcfTaVmBqW
ej9NJe1w2rd0j/TmDMGM3Rmjeyz31GSyZDIyB7J0s0r2oveG7H2wT33fiX2/
sqnZd/er7M/f/yMnIOfuAdUDBQdWcgNzH+Rp5p06iD1IP9h/yPDQ2cPsh5MO
jx7ZfKThqMjR7KPfjvkeu5O/Mb/kOPF47PHhAruCphMSJw6e+FEYXPisyKSo
rligeF/x/Enqyb5TRqdqSwRL9pcslYaUPj9tebqhTKosvxxbHlc+UeFe0X1G
+0x1JV/l/sqfVfSq4bPOZzuqtaqrzwmcy6tB1cTWTJ7fev7RBbMLTbWKtafr
uOv2XwQXYy9+uOR3qb/etr79svbl2iuSV4qvkq9mN0ANiQ3TjcGNw01eTY+v
2Vxrb9Ztvnpd6XpVi2hLUStXa94N4o2MGys3k27O3Yq6NdUW1Dba7tv+6rbn
7acdTh0POm07e7osum53G3ff7NHvabmjc+faXe27jfc07zX0avReva9x/+oD
zQcND7UeNj3a9Kj5sd7jG32GfW1PzJ50PbV+eu+Z/bPH/W79zwe2Dgw/pz5/
/yL8xczLuJfLr3YPYgazX7O9zh8SGCp7I/umblhzuHXEbKT3rcvbV6MBox/H
osd+jGdMME/kvxN+V/1e7X3LpMXkow9bPox/jPq4PJX5if1T8WeZz1e+GH3p
nfacHp9hzKx8zZnlna36tvFb+5zj3ND3iO/L89kLvAtnF7UXu5c8lt4tx//A
/Sj4Kfuz+Zftr8GViJWVKAqDsvYUgJGKCgwE4GsVAMxeAJAfAUDcsp6b/S4w
8vhYzWXdoX2o7bA28sYbx/Rgq3B5+EQCjbiFyY3kxOzO4szqzebHHsxBJ2dy
dnKzb9jCU8k7w68nkCX4QlhFJEX0qbi8RLrka2kdmQLZ7/KuCleUuJQTVUbU
7NTrNQQ0M7W+bHLVadET099r8NnI2fiqKY9ZgvkLS22r49Zztq52NZtHHciO
xk4Rzsdd2lwn3Ikesp4WXj7ejC3pWw9uK/I57Vvpd5ZS5V8VUE49RTsYuCuI
HuwTYh+qFyYfzh/BFLFEn4x8HtW9vZFRFZ0fsyc2Ji4g3jnBOFEhacMOaMfU
zoHktpTzu47vTk2NSPNMN81Q2sOXicmcyRrc27PvSnbp/pycAwfycnPzcg/m
HjpweP+RvUfTjiXnxxwPL/A/4V5oXaRbrHBS4BTTqaWSidIHpy+XFZTvrPA/
Y1WpVMVZtXz2bfXdc5dqCs+nXQivdaszvCh7iXzpV/37y0+uNF0tbtjdGNBk
fk26Gd/8/np3y5nW1Btbb2rdYrs12dbWXnCb3mHayds50/Wo+3JP/p2kuz73
THpl7rPcn3sw+LDj0fnHx/pSngQ9dXym0y8+wDww/3zkRd/L9lf1g2WvDw3t
fhM5vG3E5q3GqMgYcezr+IuJm+8q3mdNhn3Y/FFpijQ18Kn0c9gXrWnM9MDM
+a8Zs37fjOckv7N+/zk/vfB+8e3S2+XRHxM/P/36trKy5n9zlDGsDH9Gt2Gy
sC44JTwX/h2hi1jJlEOKY/ZlsWLVYhNkZ2L/RVbm9OE6yt3LA/Nq8QXznxZ4
LcQn7CSSK9orTpSwlNwjdUcGL2sjlyv/VFFYKVj5qiqs5qB+YuOopqJWvHa7
DpOui16R/oihrFGEcb3JopmBebpFi+Vzq0nrBVusHftmIXtpB2VHdSdNZ00X
dVdFN0l3fg9WT+D5xWvI+/6W5q2nt+322eKr4cfqN0np8C8N2EF1oykHEgPH
g24FF4XEhzqFKYTjwt9GtNJPRDKi7LZLMQDjZfTlmAOxQXHG8fzx3xIeJFYl
pe3YsnNjMil5IuXmroLd0ameaQbp4hn4jM97nmY2Z5Xu3bMvLNtxv0YOb87K
gbHcnrzag4cPxR3ecsTwqMgxcOxN/s3jpQWpJyiFJkXixeji8ZPdp6pL9pfS
TzuWqZdzlS9UvDpzo7KsKu2sf7XJObEauGb0/O0LFbXpddSLZpck6tH1Y5c7
r5y5mtFAbTRrkriGvTbV/Oz6jZbq1iM3Um6G3fJqs2zXui3TwdfJ0oXqWuj+
3DN+5/Xd/nsPe+/c733w8OHjR08e9/c9f/Ly6eCzof7hgbfPx15MvHz36sPg
1Ovpodk334cX30KjkmP244kTVe9eTLJ/sP94aOrFZ7kv6dOjX+1mr8+pf69b
UF+8vmzxY+BXyG//K0EfUSdhFzQefQ0Th9XEzuCa8CkEK6IAcZqpg5TPHMpi
zirK+osdy8FNluPcxGXO7b4hlGc37zG+C/ydAkOCS8KcIiqi9mKR4rkSFyQf
Ss3K8MgaygXJ5yhcVBxQ+qkiqmqhFqyevfG8xn3NKW3SJhkdK12q3i79YoNa
wxqjU8Z5JimmYWae5kYWUpYEy/dWndanbGJsLew47YY3n7NnOGg6LDm2OqU4
6zjPuVx0DXOTdHvjXujh6sni2e2V6q3jPbvl/NagbcLbBnwO+lr7QX4tlCT/
Tf7zAQ3UGJoabSawLigiWC74fUhlKDVMJOx1eGGEO51Mfxi5P8pqO2b7bUZq
tEH0j5hrsQlxGnEz8bUJYYnSiaNJJchO4d7Zl5ybYrUL3nV7dw6yVyTTZtJb
M7L3uGeKZ37Jur43a59ztlD2h/1Xc3YfsM3lzh3JO38w7pDJYdbDg0eqj8Yd
M81nzx86XlOQeMKikLNwBLk1k0/aneI79b6koTTjtEuZZNlyeX/FxTPZldQq
w7P8Z79X952rq8k5H3LBslaqDl03dvH2pfL69MvUKzZXdRpUGqWbhK/xNHNe
Z29hb+W8wX9T8pZam1m71+3ojrzOuq6+7sU7Ine33Ru5v/fhxkfjfaVPg/oN
nsu9VBzcPJQ3/HU0eUJxEnyc/UL8ajyXtzD7I3LV/+v/o1stWE0AKjiQDfEM
ALfodSxpiNwfvQA4MgPgugmg9ggB1AYigHJ6/94fENJiARPgAHxAAigDPSTP
9AKhYAfIQ7LJa0j+OAnBED+SJdpAAVAyVABdQbLALygWlCJqMyoSdQh1BfUc
9RMWg63hKLgAydM/IneRCZqOLkbfRS9iZJC8LBvTgvmCFcd6YnOxXdhfOC0c
A3cB9wEvjQ/EVyKnlSwhgnCJME80IGYSHzLxMdGYLpGwJAqplVmAeSfzGxZT
lmpWMmsK6yc2H7Yn7LbsXUgu00W2Iz/jpHDOcKVz83Jf2uC8YYGnlNeGd56v
it9LgFmgQzBFSEdoUbhZJFnUVIwk9ly8UiJe0kZKQhqSHpZpl61CTroEBZqi
i5K5so6KqqqcmpS65EZpDXlNNS1dbdVNsjqSuuJ6EvoyBsqGOkY2xltNYkzz
zGrN+yyWrKSs3W2ybdvtftqbORx2HHXWdjmA3H7GHiWeK96ULV3bFH3y/SBK
pP8bqjOtO8go+FqocVhvxFb6dNQ+hlT0ndjt8cIJT5NydzqkcO56k3oxPWuP
f5bRPubsgZyy3MiDRofZj4wdu3Y870RwkelJkVMrpSNlnRW1lQVn95yLPe9d
a3pRuV74CkcDsQnTjG1hvsF7S77dtIPSldlTf/ftfd6Hbo/zn/L1V71Qf3V9
SGf48qjYeNa7tx/Up5I+N01/nhWZs5mPXjyxfP3n8Nr5ASGvDSwgATIQBDJg
IzAFLoAGEsABUAFawACYhdggGcgE2golQEehesT3X1FklAbKE7UTye97UNMw
D2wCR8An4C54Fi2OdkFnIPn5JJKVOyG5eCvmG1YRG4Qtx77BCeK24opxr/Ei
eCq+Gj9N0CakEnqJPEQa8TITzOTKVElCkYJID5i1mSuQrDedZZ41gvUdWwDb
KHsQ+2eORDKOfIJTmbOHi4rko5Ub3HiIPLd5d/Hp8/3ibxfIFnQVEhWaEe4U
KRSNEXMUV5bgkPguOSx1X7pFpk62Uq5EvlihSPGUUoVyrUqz6l21IfU5DVZN
BS1bbZ9NsTp5ujV6d/WnDNmNdIxpJkdNu8yWLdQs6VY11p9s1ewSNnc68Dpu
d+p1kXXd6zbl4eTZ7C215eg2jE+C72dKsP8oNYA2FhQaPB2aGs4ZURNpFjXC
SI2RiO2Nj00UT3q6c2+K4a7F1Kb0xD2GWdi9XdkZOaa5cF73oewj9sfI+S8K
SgoDixVPzpW0ns4qdz4jXDl19vq5/efta8l1ry9VX46/atXI3zTTfK+l8sae
W7R26w7lLu4e6M7UvZf37z1sfXzpCeOZYv+756UvPQaJrxvfBIwQ3p4bsxof
ekd/v/QhbQr+tPvz8nTUzOis67db3+Xn8xfBUtDy/Z8av4p++x8NCIAd8ANp
oAkskNiPAOmgCDSAPjCN+F4BsoaCoCyoGuqFplFcKD0UFXUA1YQag9lhIyTi
T8NP0Di0HjoafQ49ihFEov0opg/LgXXBHsO+wAnjAnF1uCW8Bf4ofoygSdhH
eEPUIOYSJ5nMmcpJTKRk0lfmUOYJFirLe9ZI1mW2HHZx9psc/mQmcjNnJJc8
10ckslN53HlV+Fj4pvkHBNoF64UqhUtEikRPipWL10q0SN6RGpCelIXkBOR1
FXwV9ypdVZ5QFVDzUD++8ZWmhFaU9g0ddt0QvU4DCcN9RrMm/qb95g4WvVYO
1v22AXaz9nSHcSdf5yFXX7cJj0jPX94Ht0pva/P1o6D9a6gegdig6yFRYdLh
I/RS5G0uHT0TeyM+LzFgh14yd8rc7udpNzKqM/P3JmW75ajlkvMWDg0d6T5W
f7z0xMGitJNxJeGnaeV+Z3yrfKopNS4XVOtYL36q771yriGryb9Zp4W1dfhm
bVvCbf1O0HWzZ8ddjXuf7pc99HrM0rfvyb1nUL/WQPjz0hd9r8Cg4mvXofg3
+cO1I21v74/2jz0bfzzR8a7+ffFk8gffjxrIi/H1p6rPjC+aXxamr83EfFX6
Ojlb/M1hDjV38fu2eeL8lYVti9jFC0vOSwvLJ38Y/hj5mf5L/Ff7it+q/6MD
1dXWrg+IZAIAZmhlZVYKANxhAH4eWllZLltZ+VmOJBuDANwKX//dZ+2uYQOg
uHEVdZlm7P737y//BWW74vw=
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{432.8166666666665, Automatic},
  ImageSizeRaw->{847, 558},
  PlotRange->{{0, 847}, {0, 558}}]], "Input",ExpressionUUID->"88290145-6851-\
4360-b8a3-6ffc6c8fa7cb"],

Cell["Zur Illustration und definition einiger Paramter ein Bild. ", "Text",
 CellChangeTimes->{{3.722506064076852*^9, 
  3.722506088648967*^9}},ExpressionUUID->"fd400a74-3aa9-4212-9d21-\
9d1e6744d61f"],

Cell["\<\
Damit wir nicht schon beim Abschreiben der 6x6 Matrizen Fehler einbauen und \
wir \[UDoubleDot]berhaupt nicht so viel programmieren m\[UDoubleDot]ssen \
benutzen wir ein \"tool\" das wir (die Studenten und ich) im Laufe vielen \
\[CapitalUDoubleDot]bungen zur Beschleunigerphysik zusammen gebastelt haben. \
Das ersetzt keineswegs ein professionelles \"tracking tool\" wie ELEGANT oder \
MAD oder wie sie alle heissen, ist aber in Mathematica geschrieben und damit \
kennen wir uns ja aus. \
\>", "Text",
 CellChangeTimes->{{3.722506109272209*^9, 
  3.722506269245509*^9}},ExpressionUUID->"d65abdaf-3b01-47db-a299-\
83a67884aa6d"],

Cell["\<\
Erst laden wir das package mal, das geht mit \"Get[  \" oder abgek\
\[UDoubleDot]rzt \"<<\". \
\>", "Text",
 CellChangeTimes->{{3.722506274727433*^9, 
  3.722506307435892*^9}},ExpressionUUID->"3aa0a31f-6119-4f50-928f-\
660e917e306f"],

Cell[BoxData[
 RowBox[{"<<", "MyMachine`"}]], "Input",
 CellChangeTimes->{{3.661058036517543*^9, 
  3.661058037411175*^9}},ExpressionUUID->"6314a732-a962-426b-ba93-\
f4b58e99651f"],

Cell["\<\
Dann k\[ODoubleDot]nnen wir mal schauen, was in diesem Packet so alles \
definiert ist. Das meiste davon werden wir jetzt nicht ben\[ODoubleDot]tigen. \
\>", "Text",
 CellChangeTimes->{{3.722506314107885*^9, 
  3.722506343970964*^9}},ExpressionUUID->"e2e71436-1c95-49a2-a550-\
f45eb63cf777"],

Cell[BoxData[
 RowBox[{"?", "MyMachine`*"}]], "Input",
 CellChangeTimes->{{3.6610580434923897`*^9, 
  3.661058043803734*^9}},ExpressionUUID->"1e37034c-356a-40c8-994f-\
81f1d6b4d722"],

Cell["\<\
Wenn man auf die Namen klickt, bekommt man auch ein wenig Auskunft.. \
\>", "Text",
 CellChangeTimes->{{3.722506357595583*^9, 
  3.722506377234107*^9}},ExpressionUUID->"16aad1f8-fb67-4be3-8d9c-\
75e1bea932c7"],

Cell["Nat\[UDoubleDot]rlich kenn man jetzt alle 6x6 Matrizen. ", "Text",
 CellChangeTimes->{{3.722506382633873*^9, 
  3.72250639857751*^9}},ExpressionUUID->"9e74caaa-bda0-4532-b469-\
b2bdd0e1ec5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"drift", "[", "L", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.722326872642283*^9, 
  3.722326881202269*^9}},ExpressionUUID->"85c4c316-701f-4e15-a2fa-\
2d93f6d6604c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kante", "[", 
   RowBox[{"0", ",", "\[Rho]", ",", "\[Psi]1"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.722323265487075*^9, 3.722323273889453*^9}, {
  3.722324145942987*^9, 3.722324148133287*^9}, {3.722334640240735*^9, 
  3.722334641734775*^9}},ExpressionUUID->"acb38694-55ee-493b-9b77-\
e14f3d68f212"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dipol", "[", 
   RowBox[{"L", ",", "\[Rho]"}], "]"}], " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.722322542673074*^9, 3.722322552927141*^9}, {
  3.722322635014152*^9, 3.722322647964119*^9}, {3.722323963008093*^9, 
  3.722323963329102*^9}},ExpressionUUID->"998d7bd3-af4f-487c-9411-\
c52b0420c1c3"],

Cell["\<\
So k\[ODoubleDot]nnte man jetzt auch den ganzen Compressor hintereinander \
multiplizieren, Beispiel\
\>", "Text",
 CellChangeTimes->{{3.722506513213365*^9, 
  3.722506540571752*^9}},ExpressionUUID->"91b39c6e-2969-4b5b-b7b6-\
ae54aef5d27c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dipol", "[", 
    RowBox[{"L", ",", "\[Rho]"}], "]"}], ".", 
   RowBox[{"kante", "[", 
    RowBox[{"0.", ",", "\[Rho]", ",", "\[Psi]1"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.722506543066345*^9, 
  3.722506578282578*^9}},ExpressionUUID->"86aa37db-e0c1-4f19-a553-\
839396bfd5f9"],

Cell["\<\
Das wollen wir aber ganz nicht tun sondern wir wollen die \
F\[ADoubleDot]higkeiten des \"tools\" ausnutzen und diesem die Arbeit \
\[UDoubleDot]berlassen. \
\>", "Text",
 CellChangeTimes->{{3.722506589519363*^9, 
  3.7225066130694447`*^9}},ExpressionUUID->"f7827fb3-364b-40cd-b2f4-\
fa84328da770"],

Cell["Definieren wir erstmal die Parameter von BC2 : ", "Text",
 CellChangeTimes->{{3.722506618397358*^9, 
  3.722506630093289*^9}},ExpressionUUID->"7da41ee3-fcf1-4c3d-b0ae-\
6a3fc00c47ec"],

Cell[BoxData[
 RowBox[{"parameter", " ", "=", "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"18.", " ", "Degree"}]}], ",", 
    RowBox[{"Larc", "->", 
     RowBox[{"\[Theta]", " ", "\[Rho]"}]}], ",", " ", 
    RowBox[{"Leff", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", 
     RowBox[{"Leff", "/", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{"Ld", "\[Rule]", 
     RowBox[{"Leff", "/", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{"L2", "\[Rule]", "0.6"}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.722344425025021*^9, {3.722344463179718*^9, 3.722344464458269*^9}, {
   3.722344495961319*^9, 3.7223445015206747`*^9}, {3.7223445426580143`*^9, 
   3.72234454279142*^9}, {3.722504249399259*^9, 3.722504250283847*^9}, {
   3.722504341997884*^9, 3.722504427204301*^9}, {3.722504837071241*^9, 
   3.722504845333239*^9}, {3.722505095529788*^9, 3.722505128022883*^9}, {
   3.722505176184866*^9, 3.722505179486492*^9}, {3.722505466321824*^9, 
   3.7225054836166143`*^9}, 3.722505583957801*^9, {3.7225056320537453`*^9, 
   3.722505681395755*^9}, {3.722505738690569*^9, 3.722505739000866*^9}, {
   3.722505784018392*^9, 3.722505784399805*^9}, {3.722506663919252*^9, 
   3.722506665317477*^9}, {3.722506721292054*^9, 
   3.72250674969705*^9}},ExpressionUUID->"a5936e03-a178-45e8-a2ee-\
8bbe418a4bcf"],

Cell["\<\
Den ganzen compressor schreiben wir nun als Liste von Argumenten welche das \
tool dann verarbeiten kann.. \[LineSeparator]Man beachte : der Biegeradius \
hat ein Vorzeichen, je nach dem ob nach rechts oder links abgelenkt wird. \
Ebenso der Ablenkwinkel. 
Die Kantenwinkel sind sehr wichtig, ohne deren Ber\[UDoubleDot]cksichigung \
gibt es massive Probleme.  \
\>", "Text",
 CellChangeTimes->{{3.722506776594096*^9, 
  3.7225069466769953`*^9}},ExpressionUUID->"ef25e51b-78db-444a-a045-\
e21577230e1b"],

Cell[TextData[StyleBox["Wer m\[ODoubleDot]chte kann es leicht mal \
ausprobieren. Worin bestehen die Probleme ? ",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.7225069549725723`*^9, 
  3.7225069755400143`*^9}},ExpressionUUID->"b8de756c-817e-45f1-bcdc-\
4843c8bdcc1c"],

Cell[BoxData[
 RowBox[{"compressor", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dipol", ",", "Larc", ",", 
        RowBox[{"-", "\[Rho]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kante", ",", "0", ",", 
        RowBox[{"-", "\[Rho]"}], ",", 
        RowBox[{"-", "\[Theta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"drift", ",", "Ld"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kante", ",", "0", ",", "\[Rho]", ",", "\[Theta]"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"dipol", ",", "Larc", ",", "\[Rho]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"drift", ",", "L2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"dipol", ",", "Larc", ",", "\[Rho]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kante", ",", "0", ",", "\[Rho]", ",", "\[Theta]"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"drift", ",", "Ld"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kante", ",", "0", ",", 
        RowBox[{"-", "\[Rho]"}], ",", 
        RowBox[{"-", "\[Theta]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"dipol", ",", "Larc", ",", 
        RowBox[{"-", "\[Rho]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
   "}"}], " "}]], "Input",
 CellChangeTimes->{{3.722400531870875*^9, 3.7224005543401623`*^9}, {
   3.722400609521517*^9, 3.7224007090928288`*^9}, {3.7224012570845547`*^9, 
   3.72240125847514*^9}, {3.7224013118363037`*^9, 3.722401353449306*^9}, 
   3.722401555177209*^9, {3.722504150824098*^9, 3.722504193822956*^9}, {
   3.722504446471178*^9, 3.722504480800334*^9}, {3.722505163824038*^9, 
   3.722505170383637*^9}, {3.722505692316423*^9, 3.7225057123710127`*^9}, {
   3.722506751433319*^9, 
   3.722506752462757*^9}},ExpressionUUID->"fcfd91ba-174d-4306-a5f5-\
9007941b22d7"],

Cell["\<\
Mit \"getlength\" kann man sich das ganze Ding als h\[UDoubleDot]bsche Liste \
darstellen lassen\
\>", "Text",
 CellChangeTimes->{{3.722507003605184*^9, 
  3.722507019859097*^9}},ExpressionUUID->"6e7e2d82-472b-4713-93f3-\
111c9d167eee"],

Cell[BoxData[
 RowBox[{"getlength", "[", 
  RowBox[{"compressor", ",", 
   RowBox[{"PrintList", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722400736907679*^9, 3.7224007412667313`*^9}, {
  3.7225073588980703`*^9, 
  3.722507366713307*^9}},ExpressionUUID->"bb3df2d8-516b-4c45-9adc-\
29bdf60aaaf3"],

Cell["Oder mit den Zahlenwerten : ", "Text",
 CellChangeTimes->{{3.72250750016251*^9, 
  3.722507505130396*^9}},ExpressionUUID->"88f42dcb-9931-496f-8c34-\
bc9b385bbde6"],

Cell[BoxData[
 RowBox[{"getlength", "[", 
  RowBox[{
   RowBox[{"compressor", "//.", " ", "parameter"}], ",", 
   RowBox[{"PrintList", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722400736907679*^9, 3.7224007412667313`*^9}, {
   3.722400791242573*^9, 3.7224008252439423`*^9}, 3.722401378833205*^9, {
   3.722504495071735*^9, 3.722504500254982*^9}, 
   3.7225074819561853`*^9},ExpressionUUID->"a9d62da5-685e-4d7c-92a6-\
d4874c483144"],

Cell["\<\
Die Bogenl\[ADoubleDot]nge in  de Dipolen ist also 0.508 m, der Kr\
\[UDoubleDot]mmungsradius 1.62 m und f\[UDoubleDot]r einen 1 GeV Strahl \
braucht man dazu 0.485 T Magnetfeld. \
\>", "Text",
 CellChangeTimes->{{3.7225075153764772`*^9, 
  3.722507564806819*^9}},ExpressionUUID->"ad5adf0d-4b5e-430a-97f4-\
728dd642022a"],

Cell["\<\
Damit wir nicht immer wieder die Parameter einsetzen m\[UDoubleDot]ssen \
definieren wir uns den Compressor mit Zahlenwerten.. \
\>", "Text",
 CellChangeTimes->{{3.7225075838793077`*^9, 
  3.722507616436926*^9}},ExpressionUUID->"fd27ef62-2e06-4754-97df-\
8a2f77195219"],

Cell[BoxData[
 RowBox[{"compnum", " ", "=", " ", 
  RowBox[{"compressor", "//.", " ", "parameter"}]}]], "Input",
 CellChangeTimes->{{3.722401087189989*^9, 3.722401095364265*^9}, 
   3.7224013982866383`*^9, {3.722504522089861*^9, 
   3.722504523173458*^9}},ExpressionUUID->"2f3070a0-6ffd-4a75-aa91-\
bac8dadee8c7"],

Cell["\<\
Da wir das auch \[ODoubleDot]fter brauchen definieren wir noch die Gesamtl\
\[ADoubleDot]nge des Referenzorbits durch den Compressor.. \
\>", "Text",
 CellChangeTimes->{{3.722507631517682*^9, 
  3.722507659676715*^9}},ExpressionUUID->"1e404f30-31d3-4185-b9a9-\
29da3b1fbde9"],

Cell[BoxData[
 RowBox[{"ltot", " ", "=", 
  RowBox[{
   RowBox[{"getlength", "[", "compnum", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7224008846844177`*^9, 3.722400926519877*^9}, {
   3.722401020536598*^9, 3.722401025486483*^9}, {3.722504538135189*^9, 
   3.722504539125369*^9}, 
   3.722507623407352*^9},ExpressionUUID->"0fc26195-ee40-4a05-822a-\
f80feaee6d8e"],

Cell["\<\
So, jetzt wollen wir mal die Gesamtmatrix f\[UDoubleDot]r den Durchgang durch \
BC2 ansehen, das erledigt uns \"makelattice\".. \
\>", "Text",
 CellChangeTimes->{{3.7225076653314342`*^9, 
  3.722507709784916*^9}},ExpressionUUID->"520fec80-5fc5-4cce-b189-\
6bdada10dcd2"],

Cell[BoxData[
 RowBox[{"?", "makelattice"}]], "Input",
 CellChangeTimes->{{3.722401043502748*^9, 
  3.722401046509656*^9}},ExpressionUUID->"3b006dae-ea06-4d3c-884d-\
eace4e0595ec"],

Cell[BoxData[
 RowBox[{"mat", " ", "=", " ", 
  RowBox[{
   RowBox[{"makelattice", "[", 
    RowBox[{"compnum", ",", "ltot"}], "]"}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{
  3.6610580979405622`*^9, {3.7224008795485773`*^9, 3.7224008808359528`*^9}, {
   3.722401029902483*^9, 3.722401056590494*^9}, {3.722401104014308*^9, 
   3.722401104323895*^9}, {3.722401169069639*^9, 
   3.722401185324761*^9}},ExpressionUUID->"1c742718-0b69-4187-b68a-\
266dcf2f72e1"],

Cell["\<\
Die erste Zahl ist die Bahnl\[ADoubleDot]nge, dahinter steht die Matix.. \
\>", "Text",
 CellChangeTimes->{{3.722507732586927*^9, 
  3.7225077494010363`*^9}},ExpressionUUID->"976ebd9c-16ee-4393-ada0-\
ab8b7f73e67a"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7224011098774643`*^9, 
  3.722401118995267*^9}},ExpressionUUID->"56ab86de-15d8-448b-a325-\
4b6e68abc3f1"],

Cell[TextData[{
 "Da k\[ODoubleDot]nnen wir jetzt ein paar interessante Gr\[ODoubleDot]ssen \
ablesen.\nZur Erinnerung : der 6er Vektor der ein Teilchen beschreibt ist \
{x,x',y,y',\[Delta]s,\[Delta]p}. \nTransversale Koordinaten x und y und die \
longitudinalen Koordinaten \[Delta]s = Abweichung l\[ADoubleDot]ngs der \
Sollbahn vom Referenzteilchen, \[Delta]p relative Impulsabweichung \[Delta]p \
= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]p", "/", 
    RowBox[{
     SubscriptBox["p", "0"], "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9010adc2-14f3-4ef8-8b46-25c82b1050da"],
 "\n\n",
 StyleBox["Wie steht es mit der \"Dispersion\" ? Die Dispersion D ist die Abh\
\[ADoubleDot]ngigkeit der transversalen Position von der Impulsabweichung, D' \
ist die Abweichung von x' oder y' von \[Delta]p. \n\nDas was der compressor \
tun soll ist eine Abh\[ADoubleDot]ngigkeit der longitudinalen Position von \
der Impulsabweichung zu produzieren. \[LineSeparator]Welchens Matrixelement \
ist das ? Die 6x6 Matrix wird \[UDoubleDot]blicherweise \"R\" genannt, so \
heisst dann auch dieser Parameter ... \nManchmal nennt man ihn auch \
\"longitudinal Dispersion\". \nWelche Einheit hat dieser Parameter ? \n\n\
Haben die 4 Dipole eigentlich eine fokussierende oder defokussierende Wirkung \
? ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.72250775294499*^9, 3.7225080374568872`*^9}, {
  3.7225080816651583`*^9, 3.722508209274366*^9}, {3.7225083688586483`*^9, 
  3.722508422526271*^9}},ExpressionUUID->"d34883ef-37a6-4917-a2d4-\
0894b48abfb8"],

Cell["\<\
Wir k\[ODoubleDot]nnen nun aber mit dem tool noch viel mehr machen. Wir k\
\[ODoubleDot]nnen n\[ADoubleDot]mlich Teilchen \"tracken\", d.h. ihre Bahn \
durch die magnetischen Elemente verfolgen. \
\>", "Text",
 CellChangeTimes->{{3.722508462187841*^9, 
  3.7225085099066133`*^9}},ExpressionUUID->"8132b44d-32c1-49fe-afdc-\
4b5106833a8e"],

Cell[BoxData[
 RowBox[{"?", "track"}]], "Input",
 CellChangeTimes->{{3.7224018452529488`*^9, 
  3.722401846194796*^9}},ExpressionUUID->"77402344-aa3d-47a6-ada0-\
379fbfb99c9d"],

Cell[TextData[{
 "Ich definiere mal eine Liste mit 3 Teilchen. Da uns x und y Bewegungen hier \
nicht weiter interessieren setzte ich sie da auf Referenz, d.h. alles = Null. \
Aber sie sollen eine Impulsabweichung haben, Beispiel \[PlusMinus] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "4"}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "530f3048-97cf-49b9-a311-38902292ec26"],
 ". "
}], "Text",
 CellChangeTimes->{{3.722508742869076*^9, 3.72250881510557*^9}, {
  3.7225154381199293`*^9, 
  3.7225154434046783`*^9}},ExpressionUUID->"a351dfaf-ceb9-4dd7-b5b3-\
72df9e18d7d8"],

Cell[BoxData[
 RowBox[{"startp", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.0001"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", 
      RowBox[{"-", "0.0001"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7224019159171658`*^9, 3.722401950098977*^9}, {
  3.722418709137885*^9, 3.722418711447486*^9}, {3.72250858162022*^9, 
  3.7225085848178797`*^9}, {3.722508621606977*^9, 3.7225086272691717`*^9}, {
  3.722515446093815*^9, 
  3.722515450732761*^9}},ExpressionUUID->"dce71581-5962-4960-a5ef-\
134045409502"],

Cell["Dann k\[ODoubleDot]nnen wir die drei einmal komplett durch BC2 schicken \
", "Text",
 CellChangeTimes->{{3.722508826528961*^9, 
  3.7225088454402647`*^9}},ExpressionUUID->"9b6f1ca1-07b7-4f1b-9873-\
33fb84c13d64"],

Cell[BoxData[
 RowBox[{"test", " ", "=", " ", 
  RowBox[{"track", "[", 
   RowBox[{"compnum", ",", "ltot", ",", "startp"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.722401821152522*^9, 3.722401888716715*^9}, 
   3.722401935308093*^9, {3.722402051964995*^9, 3.7224020534369087`*^9}, {
   3.72240367627505*^9, 3.7224036765286827`*^9}, 3.722418751720196*^9, {
   3.722508590617963*^9, 3.722508590921844*^9}, {3.722508694470146*^9, 
   3.7225086957977133`*^9}},ExpressionUUID->"3323fd89-b1c3-40e7-910a-\
3d497f9bd152"],

Cell["\<\
und sehen wie erwartet dass sich die Teilchen mit Impulsabweichung nach \
hinten resp. nach vorne bzgl. des Referenzteilchens longitudinal verschieben. \
Das kommt von der unterschiedlichen Bahnl\[ADoubleDot]nge. \
\[LineSeparator]Dazu h\[ADoubleDot]tten wir nicht \"track\" gebraucht, das \
sind ja die Zahlen die in der R-Matrix stehen. \[LineSeparator]Mit \"track\" \
k\[ODoubleDot]nnen wir aber noch mehr tun, n\[ADoubleDot]mlich die \
Koordinaten an jedem Punkt innerhalb der Anordnung ausrechnen. (Dazu m\
\[UDoubleDot]sste man von Hand jeweils Teilmatrizen berechnen, genau das \
macht das Packet nat\[UDoubleDot]rlich). \
\>", "Text",
 CellChangeTimes->{{3.722508851880128*^9, 
  3.7225089941965637`*^9}},ExpressionUUID->"19890b59-cb1b-475d-a132-\
26bb032678f7"],

Cell["\<\
Definieren Sie doch mal eine Liste von Koordinatenpunkte von 0 bis zur \
Gesamtl\[ADoubleDot]nge im Raster Ihrer Wahl... \
\>", "Text",
 CellChangeTimes->{{3.722509030219749*^9, 
  3.7225090709285*^9}},ExpressionUUID->"9abe53a4-8b5c-407c-a028-cce572403686"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plist", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", "ltot", ",", ".02"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722418718198637*^9, 3.7224187417333937`*^9}, {
   3.722509074800506*^9, 3.7225090771687813`*^9}, 3.7225094864839783`*^9, {
   3.722511287928804*^9, 
   3.722511289510021*^9}},ExpressionUUID->"824f44f8-98f2-4d5d-a3f9-\
03005dfc5c04"],

Cell["\<\
Dann k\[ODoubleDot]nnen sie mit \"Map\" die Teilchenkoordinaten an diesen \
Punkten ausrechnen lassen.  \
\>", "Text",
 CellChangeTimes->{{3.722509105720337*^9, 
  3.72250914290989*^9}},ExpressionUUID->"a85913e6-3019-4f09-9298-\
9e3be48c8e63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"track", "[", 
      RowBox[{"compnum", ",", "#", ",", "startp"}], "]"}], " ", "&"}], " ", "/@",
     " ", "plist"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722418745652532*^9, 3.7224187747324753`*^9}, {
  3.722418988652392*^9, 3.722418989602593*^9}, {3.722509096785102*^9, 
  3.72250912789454*^9}},ExpressionUUID->"1fac8cee-4e4d-4b87-ac01-\
0fa0247178da"],

Cell[TextData[{
 "Jetzt bringen wir die Plotroutinen ins Spiel und schauen uns an, wie sich \
bespielsweise die x-Koordinate entwickelt. \n\n",
 StyleBox["Wie ist das mit der Dispersion ? Wie ist das mit D' ? ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.722509182936792*^9, 
  3.7225092321059637`*^9}},ExpressionUUID->"3b466710-69c3-4a80-95a1-\
1652412c91b1"],

Cell[BoxData[
 RowBox[{"PlotXablage", "[", "test2", "]"}]], "Input",
 CellChangeTimes->{{3.722403736170759*^9, 3.722403739231628*^9}, {
  3.722403787108176*^9, 3.722403793514374*^9}, {3.72241840398752*^9, 
  3.722418404688979*^9}, {3.722418615382888*^9, 3.722418617830504*^9}, {
  3.7224186641087847`*^9, 3.722418678209152*^9}, {3.7224187810050583`*^9, 
  3.7224187938026543`*^9}},ExpressionUUID->"5521eb01-77aa-4ae4-88e0-\
8786cb70d89c"],

Cell[TextData[StyleBox["Wie ist das mit D' ? ",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.72251548052873*^9, 
  3.7225154837332697`*^9}},ExpressionUUID->"5487907d-4605-4c2d-a71c-\
5b1ee6bbc98a"],

Cell[BoxData[
 RowBox[{"PlotXprime", "[", "test2", "]"}]], "Input",
 CellChangeTimes->{{3.722403736170759*^9, 3.722403739231628*^9}, {
  3.722403787108176*^9, 3.722403793514374*^9}, {3.72241840398752*^9, 
  3.722418404688979*^9}, {3.722418615382888*^9, 3.722418617830504*^9}, {
  3.7224186641087847`*^9, 3.722418678209152*^9}, {3.7224187810050583`*^9, 
  3.7224187938026543`*^9}, {3.722509252827326*^9, 
  3.722509277373955*^9}},ExpressionUUID->"e0956252-5890-4f25-96de-\
2bec5cd90b95"],

Cell["\<\
Man kann sich auch die Bewegung im horizontalen Phasenraum ansehen, mit \
PlotXphase. Das macht aber die Phasenraumverteilung f\[UDoubleDot]r viele \
Teilchen an einem Ort. Wir wollen jetzt hier wenig Teilchen an allen Orten \
\"s\" sehen. \[LineSeparator]Die Struktur der Daten ist so : 1. Index \
position, 2. Index Teilchen, 3. Index die Koordinaten. \[LineSeparator]Wenn \
wir also die Position aufgeben wollen, brauchen wir nur den ersten Index \
\"platt\" zu machenn, mit Flatten: \
\>", "Text",
 CellChangeTimes->{{3.722511120008503*^9, 3.722511276478346*^9}, 
   3.722515517995264*^9},ExpressionUUID->"8f4d7b3d-9849-449f-a70e-\
0ae9defe21ba"],

Cell[BoxData[
 RowBox[{"PlotXphase", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"test2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.722509300712352*^9, 3.7225093100646544`*^9}, {
  3.722509373375497*^9, 3.722509380964209*^9}, {3.7225094397246532`*^9, 
  3.722509447234803*^9}, {3.722510777162772*^9, 3.7225107779311743`*^9}, {
  3.72251104295252*^9, 
  3.722511044991241*^9}},ExpressionUUID->"0f2e5798-db08-40c4-80c7-\
7217f521863d"],

Cell["Erk\[ADoubleDot]ren Sie mal was man da sieht ... ", "Text",
 CellChangeTimes->{{3.722511340665551*^9, 
  3.7225113485921917`*^9}},ExpressionUUID->"cabb3112-dd18-4abb-ae43-\
91cc5a06dd59"],

Cell["\<\
Ebenso k\[ODoubleDot]nnen Sie sich ansehen wie sich die s-Position der \
Teilchen \"entwickelt\"... \
\>", "Text",
 CellChangeTimes->{{3.722511352383904*^9, 
  3.7225113805512342`*^9}},ExpressionUUID->"3b937dd3-f1b1-4a6d-91a0-\
cc203da5699b"],

Cell[BoxData[
 RowBox[{"PlotSpos", "[", "test2", "]"}]], "Input",
 CellChangeTimes->{{3.722403736170759*^9, 3.722403739231628*^9}, {
  3.722403787108176*^9, 3.722403793514374*^9}, {3.72241840398752*^9, 
  3.722418404688979*^9}, {3.722418615382888*^9, 3.722418617830504*^9}, {
  3.7224186641087847`*^9, 3.722418678209152*^9}, {3.7224187810050583`*^9, 
  3.7224187938026543`*^9}, {3.722418875455461*^9, 
  3.722418875997879*^9}},ExpressionUUID->"16c20d2d-6584-4987-bd58-\
ddea253a408b"],

Cell[TextData[{
 StyleBox["Jetzt machen Sie doch mal einen ganzen bunch, sagen wir 1000 \
Teilchen. Wir k\[UDoubleDot]mmern und nicht um die transversalen Koordinaten \
aber wie generieren eine Impulsverteilung und eine Bunchl\[ADoubleDot]nge. \
Beide normaltverteilt, Mittelwert   = 0.  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "p"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "a6c35f3c-4bd2-4305-a147-0894bb01a730"],
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "4"}]], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "11e8a2e5-712b-4948-86de-8ecb4824f73d"],
 StyleBox["  (Das ist die relative Impulsabweichung vom ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Nominalimpuls", ")"}], ",", " ", 
    RowBox[{
     SubscriptBox["\[Sigma]", "s"], "=", 
     RowBox[{"1", " ", "mm"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "f2c4ad1d-eec9-4deb-b023-e3bc6963297a"],
 StyleBox[". \:201a\[LineSeparator]Bekommen Sie das hin ? Normalverteilte \
Zufallszahlen macht man mit RandomReal[NormalDistribution[..., es m\
\[UDoubleDot]ssen aber immer alle 6 Koordinaten sein, die anderen F\
\[UDoubleDot]nf sind Nullen. \[LineSeparator]Also entweder mit Table, oder \
wie immer sie wollen. ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.722511500898911*^9, 3.722511742287134*^9}, {
  3.722513996814281*^9, 3.722514083416773*^9}, {3.722515109644515*^9, 
  3.722515110760172*^9}},ExpressionUUID->"dfb8c652-d70f-461d-96f8-\
9c4aad753215"],

Cell[BoxData[
 RowBox[{
  RowBox[{"set1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", "0.001"}], "]"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", "0.0001"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722511746219688*^9, 3.72251177966194*^9}, {
   3.7225118174686604`*^9, 3.722511867446331*^9}, {3.722511944043359*^9, 
   3.722511955217516*^9}, 3.722512170122056*^9, {3.722513140671151*^9, 
   3.7225131681811943`*^9}, 3.722515054118552*^9, 
   3.722515084332328*^9},ExpressionUUID->"0b8c02e6-778f-4b23-b58a-\
22e53b95aa0b"],

Cell["\<\
und den jagen wir dann mal durch die Dipole, erstmal wieder an allen St\
\[UDoubleDot]tzstellen.  \
\>", "Text",
 CellChangeTimes->{{3.722514135494521*^9, 
  3.722514166813847*^9}},ExpressionUUID->"a99bc651-b60b-46ca-9c6f-\
7e82476f30a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test3", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"track", "[", 
      RowBox[{"compnum", ",", "#", ",", "set1"}], "]"}], " ", "&"}], " ", "/@",
     " ", "plist"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722418745652532*^9, 3.7224187747324753`*^9}, {
  3.722418988652392*^9, 3.722418989602593*^9}, {3.722509096785102*^9, 
  3.72250912789454*^9}, {3.722511887812982*^9, 
  3.7225118926837797`*^9}},ExpressionUUID->"3257ac98-58b1-4bf5-b5c6-\
d90bcbf31744"],

Cell["\<\
Jetzt schauen Sie sich mal die Entwicklung der s-Position an, oder den \
longitudinalen Phasenraum. 
Wir der bunch k\[UDoubleDot]rzer ?? \
\>", "Text",
 CellChangeTimes->{{3.7225141258724537`*^9, 3.722514126607942*^9}, {
  3.7225141755122433`*^9, 
  3.7225142199490757`*^9}},ExpressionUUID->"40ae0d51-cd85-435a-a414-\
f93c46afa92a"],

Cell[BoxData[
 RowBox[{"PlotSpos", "[", "test3", "]"}]], "Input",
 CellChangeTimes->{{3.722403736170759*^9, 3.722403739231628*^9}, {
  3.722403787108176*^9, 3.722403793514374*^9}, {3.72241840398752*^9, 
  3.722418404688979*^9}, {3.722418615382888*^9, 3.722418617830504*^9}, {
  3.7224186641087847`*^9, 3.722418678209152*^9}, {3.7224187810050583`*^9, 
  3.7224187938026543`*^9}, {3.722418875455461*^9, 3.722418875997879*^9}, {
  3.722511912430676*^9, 
  3.7225119126189137`*^9}},ExpressionUUID->"f7094c21-f9fe-4074-9819-\
36183942a909"],

Cell[BoxData[
 RowBox[{"PlotSphase", "[", 
  RowBox[{"Last", "[", "test3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.722511794013068*^9, 3.722511800582872*^9}, {
  3.722512029247121*^9, 3.722512060630062*^9}, {3.722512102778872*^9, 
  3.722512134415893*^9}},ExpressionUUID->"454397f3-bd38-42c5-ac39-\
283d9877a53d"],

Cell[TextData[{
 "Nein, wird er nicht. Zum Kompressor geh\[ODoubleDot]rt auch eine HF - \
cavity die dem bunch einen, und zwar den richtigen, \"chirp\" verpasst, d.h. \
eine von \[Delta]s abh\[ADoubleDot]ngige Impulsabweichung.\[LineSeparator]Die \
HF im Resonator schwingt ja periodisch, d.h. jede endliche \
Bunchl\[ADoubleDot]nge f\[UDoubleDot]hrt zu einer s-abh\[ADoubleDot]ngigen \
Impuls\[ADoubleDot]nderung da das Feld ja nicht zeitlich konstant ist. \
\[LineSeparator]Bezeichnen wir mit ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f9a6bc3f-0411-4dab-9285-afba0827a85f"],
 " die Phase der HF f\[UDoubleDot]r das Referenzteilchen, dann sieht ein \
Teilchen mit Abweichung \"\[Delta]s\" das Feld zur Phase ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "0"], "+", 
    RowBox[{
     SubscriptBox["k", "HF"], "*", 
     SubscriptBox["\[Delta]", "s"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "04269bc4-d914-4595-92dc-3eb8a7bff609"],
 ". \nDabei ist ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "HF"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7425b2d5-0840-4b60-8439-715ab51aa5bc"],
 " = 2 \[Pi] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "HF"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "711bddcf-130a-42bc-8e8d-efc7e079e7ad"],
 "/c . Wir k\[ODoubleDot]nnen hier getrost \[Beta] = 1 annehmen, die Teilchen \
haben praktisch v=c und die relative Impuls\[ADoubleDot]nderung ist auch \
gleich der relativen \[CapitalADoubleDot]nderung der kinetischen Energie. \n\
Dann ist die relative Impuls\[ADoubleDot]nderung : "
}], "Text",
 CellChangeTimes->{{3.722514234835359*^9, 
  3.722514588123879*^9}},ExpressionUUID->"51082542-a1bd-42af-9989-\
62814153ab1a"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Delta]p", "cav"], "=", " ", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]E", "cav"], "*", 
   RowBox[{
    RowBox[{"Cos", "[", " ", 
     FormBox[
      RowBox[{
       SubscriptBox["\[Phi]", "0"], "+", 
       RowBox[{
        SubscriptBox["k", "HF"], "*", 
        SubscriptBox["\[Delta]", "s"]}]}],
      TraditionalForm], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["E", "in"], "+", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]E", "cav"], "*", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Phi]", "0"], "]"}]}]}], ")"}], 
    " "}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.722514605063834*^9, 
  3.722514717311118*^9}},ExpressionUUID->"a79f6b11-5617-4c65-bfb9-\
4a961700e404"],

Cell[TextData[{
 StyleBox["Das bekommen Sie sicher selbst programmiert. Die Parameter : ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "HF"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "4a6a4808-4378-46b5-a32b-0e7de8cede26"],
 StyleBox["= 1.3 GHz, ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["\[CapitalDelta]E", "cav"], "=", " ", 
     RowBox[{"120", " ", "MeV"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "cf276f76-e588-4461-b621-1b0efc96f711"],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "in"], "=", " ", 
    RowBox[{"50", " ", "MeV"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "f231f585-dcc0-41bb-893f-aff0218efc47"],
 StyleBox[". ",
  FontColor->RGBColor[0, 0, 1]],
 "\n\n",
 StyleBox["Sie schreiben am besten eine kleine Routine in die man einen \
Teilchen-Vektor reinsteckt und wieder einen rausbekommt. Mit \[Phi]0 als \
freiem Parameter. Achtung : unsere Listen sind immer {s, \
{x,x',y,y',\[Delta]s,\[Delta]p}}. Rauskommen muss also  {s, {x,x',y,y', \
\[Delta]s, \[Delta]p+\[Delta]pcav}}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.722514723590495*^9, 3.722514858149274*^9}, {
  3.7225151804191723`*^9, 
  3.722515250239094*^9}},ExpressionUUID->"d1a2f6dc-b298-4934-8501-\
38826118c9a5"],

Cell[TextData[{
 StyleBox["Diese Funktion k\[ODoubleDot]nnen Sie dann \[UDoubleDot]ber den \
Startsatz (set1) dar\[UDoubleDot]ber mappen und anschliessend durch die \
Dipole laufen lassen. \nIch w\[UDoubleDot]rde das nur zum Endpunkt machen und \
mir dort den longitudinalen Phasenraum ansehen. \nDas geht so flott dass man \
es problemlos mit Manipulate machen und mit der Phase ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "15a729b5-d2a9-4bd5-a0d9-9e6c77046bc9"],
 StyleBox[" spielen kann. \[LineSeparator]Welche Phase w\[UDoubleDot]rden sie \
dann reindrehen um den Bunch optimal zu verk\[UDoubleDot]rzen ? ",
  FontColor->RGBColor[0, 0, 1]],
 "\n\nStatt den Phasenraum anzusehen k\[ODoubleDot]nnen Sie auch \"PlotShisto\
\" verwenden, das zeigt die Teilchendichteverteilung. "
}], "Text",
 CellChangeTimes->{{3.722514865479377*^9, 3.722514968943802*^9}, {
   3.722515138116919*^9, 3.722515160865629*^9}, {3.7225152809674463`*^9, 
   3.722515305149188*^9}, 
   3.722515384530405*^9},ExpressionUUID->"974ef86f-834f-432d-a924-\
4ed7dba45b97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]pcav", "[", 
   RowBox[{"vecin_", ",", "\[Phi]0_"}], "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.722512461396391*^9, 3.722512633532686*^9}, {
   3.7225126941387157`*^9, 3.722512721424602*^9}, {3.722512789425767*^9, 
   3.722512798033441*^9}, {3.7225149914664383`*^9, 3.722515027192699*^9}, 
   3.722515646647485*^9},ExpressionUUID->"cdc567ec-ab5c-4e84-b8d9-\
b79de1fcd16c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test4man", "[", "\[Phi]0_", "]"}], " ", ":=", " ", 
  RowBox[{"track", "[", 
   RowBox[{"compnum", ",", "ltot", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Delta]pcav", "[", 
       RowBox[{"#", ",", "\[Phi]0"}], "]"}], "&"}], "/@", " ", "set1"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.722418745652532*^9, 3.7224187747324753`*^9}, {
  3.722418988652392*^9, 3.722418989602593*^9}, {3.722509096785102*^9, 
  3.72250912789454*^9}, {3.722511887812982*^9, 3.7225118926837797`*^9}, {
  3.722512869555698*^9, 
  3.722512949232974*^9}},ExpressionUUID->"5d78a690-119f-4505-a0eb-\
0c96601408ce"],

Cell["\<\
So, das war jetzt aber eine Weihnachtsgeschenk-Aufgabe deren Erstellung mich \
hoffentlich deutlich mehr Stunden gekostet hat als Sie die Bearbeitung :-)\
\>", "Text",
 CellChangeTimes->{{3.72251571426081*^9, 
  3.7225157726739407`*^9}},ExpressionUUID->"60fc44e2-5ccc-4dbb-9c07-\
8c048da60760"],

Cell[CellGroupData[{

Cell["Anmerkung :", "Subsubsection",
 CellChangeTimes->{{3.722515777057637*^9, 
  3.722515779665691*^9}},ExpressionUUID->"cc96487a-3d73-4a35-a6a2-\
3525511e02ec"],

Cell[TextData[{
 "Seit einigen Jahren verwenden wir bei FLASH einen zweiten \
zus\[ADoubleDot]zlichen HF Resonator der mit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "*", 
    SubscriptBox["f", "HF"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2ed98160-abbe-4125-9a05-d951ebb7d560"],
 "= 3.9 GHz betrieben wird. \nK\[ODoubleDot]nnten Sie ahnen wozu ? \nMan oder \
Frau kann das nat\[UDoubleDot]rlich als Ansporn begreifen das noch \
einzubauen. Dann haben Sie zwei weitere Parameter zum Spielen, die Phase ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "39"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c4b41786-888b-4ddf-b503-f09395ef77e0"],
 " und die Amplitude ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "39"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "893e3d71-8589-4fcd-955e-6b5e5cd93170"],
 " dieser Cavity. Damit kann man dann im Phasenraum interessante Dinge \
treiben. "
}], "Text",
 CellChangeTimes->{{3.722515785777453*^9, 
  3.722515924669209*^9}},ExpressionUUID->"4256da92-156a-4b25-a560-\
b39f135cee2b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1480, 873},
WindowMargins->{{0, Automatic}, {Automatic, 21}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 211, 4, 101, "Section",ExpressionUUID->"6325484e-7779-4585-8466-0347e37f8894"],
Cell[794, 28, 156, 3, 53, "Text",ExpressionUUID->"972db1ba-000b-496e-802b-6ec56dca8fc9"],
Cell[953, 33, 339, 7, 88, "Text",ExpressionUUID->"83d24e4b-10a9-4b2a-bf85-97e1c3bdf1f2"],
Cell[1295, 42, 60714, 1001, 448, "Input",ExpressionUUID->"88290145-6851-4360-b8a3-6ffc6c8fa7cb"],
Cell[62012, 1045, 201, 3, 53, "Text",ExpressionUUID->"fd400a74-3aa9-4212-9d21-9d1e6744d61f"],
Cell[62216, 1050, 640, 11, 157, "Text",ExpressionUUID->"d65abdaf-3b01-47db-a299-83a67884aa6d"],
Cell[62859, 1063, 243, 6, 53, "Text",ExpressionUUID->"3aa0a31f-6119-4f50-928f-660e917e306f"],
Cell[63105, 1071, 180, 4, 46, "Input",ExpressionUUID->"6314a732-a962-426b-ba93-f4b58e99651f"],
Cell[63288, 1077, 301, 6, 53, "Text",ExpressionUUID->"e2e71436-1c95-49a2-a550-f45eb63cf777"],
Cell[63592, 1085, 182, 4, 46, "Input",ExpressionUUID->"1e37034c-356a-40c8-994f-81f1d6b4d722"],
Cell[63777, 1091, 219, 5, 53, "Text",ExpressionUUID->"16aad1f8-fb67-4be3-8d9c-75e1bea932c7"],
Cell[63999, 1098, 197, 3, 53, "Text",ExpressionUUID->"9e74caaa-bda0-4532-b469-b2bdd0e1ec5f"],
Cell[64199, 1103, 217, 5, 46, "Input",ExpressionUUID->"85c4c316-701f-4e15-a2fa-2d93f6d6604c"],
Cell[64419, 1110, 360, 8, 46, "Input",ExpressionUUID->"acb38694-55ee-493b-9b77-e14f3d68f212"],
Cell[64782, 1120, 346, 7, 46, "Input",ExpressionUUID->"998d7bd3-af4f-487c-9411-c52b0420c1c3"],
Cell[65131, 1129, 250, 6, 53, "Text",ExpressionUUID->"91b39c6e-2969-4b5b-b7b6-ae54aef5d27c"],
Cell[65384, 1137, 354, 10, 46, "Input",ExpressionUUID->"86aa37db-e0c1-4f19-a553-839396bfd5f9"],
Cell[65741, 1149, 308, 7, 53, "Text",ExpressionUUID->"f7827fb3-364b-40cd-b2f4-fa84328da770"],
Cell[66052, 1158, 189, 3, 53, "Text",ExpressionUUID->"7da41ee3-fcf1-4c3d-b0ae-6a3fc00c47ec"],
Cell[66244, 1163, 1390, 28, 46, "Input",ExpressionUUID->"a5936e03-a178-45e8-a2ee-8bbe418a4bcf"],
Cell[67637, 1193, 513, 10, 122, "Text",ExpressionUUID->"ef25e51b-78db-444a-a045-e21577230e1b"],
Cell[68153, 1205, 285, 5, 53, "Text",ExpressionUUID->"b8de756c-817e-45f1-bcdc-4843c8bdcc1c"],
Cell[68441, 1212, 2115, 47, 419, "Input",ExpressionUUID->"fcfd91ba-174d-4306-a5f5-9007941b22d7"],
Cell[70559, 1261, 246, 6, 53, "Text",ExpressionUUID->"6e7e2d82-472b-4713-93f3-111c9d167eee"],
Cell[70808, 1269, 314, 7, 46, "Input",ExpressionUUID->"bb3df2d8-516b-4c45-9adc-29bdf60aaaf3"],
Cell[71125, 1278, 169, 3, 53, "Text",ExpressionUUID->"88f42dcb-9931-496f-8c34-bc9b385bbde6"],
Cell[71297, 1283, 451, 9, 46, "Input",ExpressionUUID->"a9d62da5-685e-4d7c-92a6-d4874c483144"],
Cell[71751, 1294, 331, 7, 53, "Text",ExpressionUUID->"ad5adf0d-4b5e-430a-97f4-728dd642022a"],
Cell[72085, 1303, 279, 6, 53, "Text",ExpressionUUID->"fd27ef62-2e06-4754-97df-8a2f77195219"],
Cell[72367, 1311, 313, 6, 46, "Input",ExpressionUUID->"2f3070a0-6ffd-4a75-aa91-bac8dadee8c7"],
Cell[72683, 1319, 285, 6, 53, "Text",ExpressionUUID->"1e404f30-31d3-4185-b9a9-29da3b1fbde9"],
Cell[72971, 1327, 408, 9, 46, "Input",ExpressionUUID->"0fc26195-ee40-4a05-822a-f80feaee6d8e"],
Cell[73382, 1338, 280, 6, 53, "Text",ExpressionUUID->"520fec80-5fc5-4cce-b189-6bdada10dcd2"],
Cell[73665, 1346, 180, 4, 46, "Input",ExpressionUUID->"3b006dae-ea06-4d3c-884d-eace4e0595ec"],
Cell[73848, 1352, 465, 10, 46, "Input",ExpressionUUID->"1c742718-0b69-4187-b68a-266dcf2f72e1"],
Cell[74316, 1364, 225, 5, 53, "Text",ExpressionUUID->"976ebd9c-16ee-4393-ada0-ab8b7f73e67a"],
Cell[74544, 1371, 245, 6, 46, "Input",ExpressionUUID->"56ab86de-15d8-448b-a325-4b6e68abc3f1"],
Cell[74792, 1379, 1607, 30, 503, "Text",ExpressionUUID->"d34883ef-37a6-4917-a2d4-0894b48abfb8"],
Cell[76402, 1411, 347, 7, 88, "Text",ExpressionUUID->"8132b44d-32c1-49fe-afdc-4b5106833a8e"],
Cell[76752, 1420, 176, 4, 46, "Input",ExpressionUUID->"77402344-aa3d-47a6-ada0-379fbfb99c9d"],
Cell[76931, 1426, 628, 15, 89, "Text",ExpressionUUID->"a351dfaf-ceb9-4dd7-b5b3-72df9e18d7d8"],
Cell[77562, 1443, 779, 19, 46, "Input",ExpressionUUID->"dce71581-5962-4960-a5ef-134045409502"],
Cell[78344, 1464, 218, 4, 53, "Text",ExpressionUUID->"9b6f1ca1-07b7-4f1b-9873-33fb84c13d64"],
Cell[78565, 1470, 514, 9, 46, "Input",ExpressionUUID->"3323fd89-b1c3-40e7-910a-3d497f9bd152"],
Cell[79082, 1481, 780, 13, 191, "Text",ExpressionUUID->"19890b59-cb1b-475d-a132-26bb032678f7"],
Cell[79865, 1496, 267, 5, 53, "Text",ExpressionUUID->"9abe53a4-8b5c-407c-a028-cce572403686"],
Cell[80135, 1503, 410, 9, 46, "Input",ExpressionUUID->"824f44f8-98f2-4d5d-a3f9-03005dfc5c04"],
Cell[80548, 1514, 253, 6, 53, "Text",ExpressionUUID->"a85913e6-3019-4f09-9298-9e3be48c8e63"],
Cell[80804, 1522, 455, 11, 46, "Input",ExpressionUUID->"1fac8cee-4e4d-4b87-ac01-0fa0247178da"],
Cell[81262, 1535, 383, 8, 122, "Text",ExpressionUUID->"3b466710-69c3-4a80-95a1-1652412c91b1"],
Cell[81648, 1545, 438, 7, 46, "Input",ExpressionUUID->"5521eb01-77aa-4ae4-88e0-8786cb70d89c"],
Cell[82089, 1554, 215, 4, 53, "Text",ExpressionUUID->"5487907d-4605-4c2d-a71c-5b1ee6bbc98a"],
Cell[82307, 1560, 486, 8, 46, "Input",ExpressionUUID->"e0956252-5890-4f25-96de-2bec5cd90b95"],
Cell[82796, 1570, 660, 11, 157, "Text",ExpressionUUID->"8f4d7b3d-9849-449f-a70e-0ae9defe21ba"],
Cell[83459, 1583, 449, 9, 46, "Input",ExpressionUUID->"0f2e5798-db08-40c4-80c7-7217f521863d"],
Cell[83911, 1594, 193, 3, 53, "Text",ExpressionUUID->"cabb3112-dd18-4abb-ae43-91cc5a06dd59"],
Cell[84107, 1599, 252, 6, 53, "Text",ExpressionUUID->"3b937dd3-f1b1-4a6d-91a0-cc203da5699b"],
Cell[84362, 1607, 484, 8, 46, "Input",ExpressionUUID->"16c20d2d-6584-4987-bd58-ddea253a408b"],
Cell[84849, 1617, 1786, 43, 230, "Text",ExpressionUUID->"dfb8c652-d70f-461d-96f8-9c4aad753215"],
Cell[86638, 1662, 936, 22, 78, "Input",ExpressionUUID->"0b8c02e6-778f-4b23-b58a-22e53b95aa0b"],
Cell[87577, 1686, 248, 6, 53, "Text",ExpressionUUID->"a99bc651-b60b-46ca-9c6f-7e82476f30a5"],
Cell[87828, 1694, 504, 12, 46, "Input",ExpressionUUID->"3257ac98-58b1-4bf5-b5c6-d90bcbf31744"],
Cell[88335, 1708, 342, 8, 88, "Text",ExpressionUUID->"40ae0d51-cd85-435a-a414-f93c46afa92a"],
Cell[88680, 1718, 535, 9, 46, "Input",ExpressionUUID->"f7094c21-f9fe-4074-9819-36183942a909"],
Cell[89218, 1729, 319, 6, 46, "Input",ExpressionUUID->"454397f3-bd38-42c5-ac39-283d9877a53d"],
Cell[89540, 1737, 1867, 43, 297, "Text",ExpressionUUID->"51082542-a1bd-42af-9989-62814153ab1a"],
Cell[91410, 1782, 761, 24, 42, "DisplayFormula",ExpressionUUID->"a79f6b11-5617-4c65-bfb9-4a961700e404"],
Cell[92174, 1808, 1575, 43, 158, "Text",ExpressionUUID->"d1a2f6dc-b298-4934-8501-38826118c9a5"],
Cell[93752, 1853, 1162, 22, 227, "Text",ExpressionUUID->"974ef86f-834f-432d-a924-4ed7dba45b97"],
Cell[94917, 1877, 419, 8, 46, "Input",ExpressionUUID->"cdc567ec-ab5c-4e84-b8d9-b79de1fcd16c"],
Cell[95339, 1887, 635, 15, 46, "Input",ExpressionUUID->"5d78a690-119f-4505-a0eb-0c96601408ce"],
Cell[95977, 1904, 304, 6, 88, "Text",ExpressionUUID->"60fc44e2-5ccc-4dbb-9c07-8c048da60760"],
Cell[CellGroupData[{
Cell[96306, 1914, 162, 3, 67, "Subsubsection",ExpressionUUID->"cc96487a-3d73-4a35-a6a2-3525511e02ec"],
Cell[96471, 1919, 1121, 28, 159, "Text",ExpressionUUID->"4256da92-156a-4b25-a560-b39f135cee2b"]
}, Open  ]]
}, Open  ]]
}
]
*)

